From 85e634f032ad6984bd70a563742ac194825da605 Mon Sep 17 00:00:00 2001
From: Grzegorz Jaszczyk <jaz@semihalf.com>
Date: Fri, 14 Feb 2020 10:14:22 +0100
Subject: [PATCH 1120/1239] thermal: mvebu: restore thermal error checking

The error checking was dropped by accident in one of previous fix-up
commit - restore it.

Change-Id: I8515db6cabe16c767d99aaaf26068ee2e19e19ed
Signed-off-by: Grzegorz Jaszczyk <jaz@semihalf.com>
Reviewed-on: https://sj1git1.cavium.com/25049
Tested-by: sa_ip-sw-jenkins <sa_ip-sw-jenkins@marvell.com>
Reviewed-by: Kostya Porotchkin <kostap@marvell.com>
---
 drivers/thermal/mvebu_ext_thermal_28nm.c | 8 +++++---
 1 file changed, 5 insertions(+), 3 deletions(-)

diff --git a/drivers/thermal/mvebu_ext_thermal_28nm.c b/drivers/thermal/mvebu_ext_thermal_28nm.c
index 00093b4ca6..97fa5977b1 100644
--- a/drivers/thermal/mvebu_ext_thermal_28nm.c
+++ b/drivers/thermal/mvebu_ext_thermal_28nm.c
@@ -75,18 +75,20 @@ s32 mvebu_thermal_ext_sensor_read(struct thermal_unit_config *tsen, int *temp)
 static u32 mvebu_thermal_ext_fw_validation(struct thermal_unit_config *tsen)
 {
 	u32 reg = 0, timeout = 0;
+	int ret = SMCCC_RET_SUCCESS;
 
 	debug("%s: fw smc support\n", __func__);
 
 	tsen->fw_smc_support = true;
 
-	while ((reg) == 0 && timeout < THERMAL_TIMEOUT) {
+	while (reg == 0 && timeout < THERMAL_TIMEOUT &&
+	       ret == SMCCC_RET_SUCCESS) {
 		udelay(10);
-		mvebu_dfx_smc(MV_SIP_DFX_THERMAL_IS_VALID, &reg);
+		ret = mvebu_dfx_smc(MV_SIP_DFX_THERMAL_IS_VALID, &reg);
 		timeout++;
 	}
 
-	if (reg == 0) {
+	if (reg == 0 || ret != SMCCC_RET_SUCCESS) {
 		pr_err("%s: thermal.%lx: external sensor is not ready\n",
 		       __func__, (uintptr_t)tsen->regs_base);
 		return -1;
-- 
2.29.0

