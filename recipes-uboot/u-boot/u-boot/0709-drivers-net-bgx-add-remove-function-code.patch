From ae88573089586131534cb18c4374b5b238fa124c Mon Sep 17 00:00:00 2001
From: Suneel Garapati <sgarapati@caviumnetworks.com>
Date: Thu, 14 Sep 2017 11:31:37 -0700
Subject: [PATCH 0709/1239] drivers: net: bgx: add remove function code

apply OS_PREPARE flag which helps to invoke remove function
before starting os, remove function disables all lmacs in
all active bgx instances.

Signed-off-by: Suneel Garapati <sgarapati@caviumnetworks.com>
---
 drivers/net/cavium/thunder_bgx.c | 27 +++++++++++++++++++++++++++
 1 file changed, 27 insertions(+)

diff --git a/drivers/net/cavium/thunder_bgx.c b/drivers/net/cavium/thunder_bgx.c
index f06e878093..e31e8c75c1 100644
--- a/drivers/net/cavium/thunder_bgx.c
+++ b/drivers/net/cavium/thunder_bgx.c
@@ -1283,6 +1283,31 @@ void bgx_set_board_info(int bgx_id, int *mdio_bus,
 }
 
 
+int thunderx_bgx_remove(struct udevice *dev)
+{
+	int lmac;
+	u64 cfg;
+	int count = MAX_LMAC_PER_BGX;
+	struct bgx *bgx = dev_get_priv(dev);
+
+	if (bgx->reg_base == NULL)
+		return 0;
+
+	if (bgx->is_rgx)
+		count = 1;
+
+	for (lmac = 0; lmac < count; lmac++) {
+		cfg = bgx_reg_read(bgx, lmac, BGX_CMRX_CFG);
+		cfg &= ~(CMR_PKT_RX_EN | CMR_PKT_TX_EN);
+		bgx_reg_write(bgx, lmac, BGX_CMRX_CFG, cfg);
+
+		debug("%s disabling bgx%d lmac%d\n",
+			__func__, bgx->bgx_id, lmac);
+		bgx_lmac_disable(bgx, lmac);
+	}
+	return 0;
+}
+
 int thunderx_bgx_probe(struct udevice *dev)
 {
 	int err;
@@ -1388,8 +1413,10 @@ U_BOOT_DRIVER(thunderx_bgx) = {
 	.name	= "thunderx_bgx",
 	.id	= UCLASS_MISC,
 	.probe	= thunderx_bgx_probe,
+	.remove	= thunderx_bgx_remove,
 	.of_match = thunderx_bgx_ids,
 	.ops	= &thunderx_bgx_ops,
 	.priv_auto_alloc_size = sizeof(struct bgx),
+	.flags  = DM_FLAG_OS_PREPARE,
 };
 
-- 
2.29.0

