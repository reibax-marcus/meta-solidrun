From c09225b917edbda29ebf44b2b6b72acd6fe97ac6 Mon Sep 17 00:00:00 2001
From: Aaron Williams <aaron.williams@cavium.com>
Date: Tue, 29 Nov 2016 14:04:17 -0800
Subject: [PATCH 0578/1239] setbits_le64 should not be used to set or clear
 GPIO pins

The GPIO_TX_SET And GPIO_TX_CLR registers expect only the pins that are
being changed to have their bits set.  This means that these registers
are not read-modify-write.

Signed-off-by: Aaron Williams <aaron.williams@cavium.com>
---
 drivers/gpio/thunderx_gpio.c | 11 ++++-------
 1 file changed, 4 insertions(+), 7 deletions(-)

diff --git a/drivers/gpio/thunderx_gpio.c b/drivers/gpio/thunderx_gpio.c
index cb77adcb37..8cf0a76327 100644
--- a/drivers/gpio/thunderx_gpio.c
+++ b/drivers/gpio/thunderx_gpio.c
@@ -75,9 +75,7 @@ static int octeontx_gpio_dir_output(struct udevice *dev, unsigned offset,
 
 	debug("%s(%s, %u, %d)\n", __func__, dev->name, offset, value);
 
-	setbits_le64(gpio->baseaddr + GPIO_TX_REG(offset, value),
-		     GPIO_BIT(offset));
-	__iowmb();
+	writeq(gpio->baseaddr + GPIO_TX_REG(offset, value), GPIO_BIT(offset));
 	clrsetbits_le64(gpio->baseaddr + GPIO_BIT_CFG(offset),
 			(0x3ffUL << 16), 1UL);
 	__iowmb();
@@ -103,9 +101,7 @@ static int octeontx_gpio_set_value(struct udevice *dev,
 	struct octeontx_gpio *gpio = dev_get_priv(dev);
 
 	debug("%s(%s, %u, %d)\n", __func__, dev->name, offset, value);
-	setbits_le64(gpio->baseaddr + GPIO_TX_REG(offset, value),
-		     GPIO_BIT(offset));
-	__iowmb();
+	writeq(gpio->baseaddr + GPIO_TX_REG(offset, value), GPIO_BIT(offset));
 
 	return 0;
 
@@ -116,7 +112,8 @@ static int octeontx_gpio_get_function(struct udevice *dev,
 {
 	struct octeontx_gpio *gpio = dev_get_priv(dev);
 	u64 pinsel = readl(gpio->baseaddr + GPIO_BIT_CFG(offset));
-
+	debug("%s(%s, %u): pinsel: 0x%lx\n", __func__, dev->name, offset,
+	      pinsel);
 	if (GPIO_BIT_CFG_FN(pinsel))
 		return GPIOF_FUNC;
 	else if (GPIO_BIT_CFG_TX_OE(pinsel))
-- 
2.29.0

