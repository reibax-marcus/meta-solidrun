From 8c7cb4e61e18bcdc05106ec026248045020b8549 Mon Sep 17 00:00:00 2001
From: Aaron Williams <awilliams@marvell.com>
Date: Thu, 14 Nov 2019 19:20:48 -0800
Subject: [PATCH 1009/1239] octeontx: pcie-console: Fix shutdown code

The shutdown code was calling __atomic_fetch_nand and the behavior
is not what was expected.  This was replaced with __atomic_fetch_and
with an inverted mask which does the correct thing.

Change-Id: Icde37161811791095941ad3db9fadbfaf4d27bcd
Signed-off-by: Aaron Williams <awilliams@marvell.com>
Reviewed-on: https://sj1git1.cavium.com/18711
Reviewed-by: Rick Farrington <Ricardo.Farrington@cavium.com>
Reviewed-by: Derek Chickles <Derek.Chickles@cavium.com>
Reviewed-by: Chandrakala Chavva <cchavva@marvell.com>
Tested-by: Chandrakala Chavva <cchavva@marvell.com>
(cherry picked from commit 9f648ad71c9e7ab375dbc498a16a2ea4efdd5e88)
Reviewed-on: https://sj1git1.cavium.com/19363
Tested-by: Suneel Garapati <sgarapati@caviumnetworks.com>
Reviewed-by: Suneel Garapati <sgarapati@caviumnetworks.com>
---
 drivers/serial/serial_octeontx_pcie_console.c | 16 ++--------------
 1 file changed, 2 insertions(+), 14 deletions(-)

diff --git a/drivers/serial/serial_octeontx_pcie_console.c b/drivers/serial/serial_octeontx_pcie_console.c
index ee7e8166a8..fe3ce4088e 100644
--- a/drivers/serial/serial_octeontx_pcie_console.c
+++ b/drivers/serial/serial_octeontx_pcie_console.c
@@ -423,20 +423,11 @@ static int octeontx_pcie_console_pending(struct udevice *dev, bool input)
 	struct octeontx_pcie_console *console = priv->console;
 	bool ret;
 
-#ifdef DEBUG
-	if (in_debug)
-		return 0;
-#endif
-
 	if (input)
 		ret = octeontx_pcie_console_read_avail(console);
 	else
 		ret = octeontx_pcie_console_write_avail(console);
 
-#ifdef DEBUG
-	if (!in_debug)
-		debug("%s(%s, %d): %d\n", __func__, dev->name, input, ret);
-#endif
 	return ret;
 }
 
@@ -840,11 +831,8 @@ static int octeontx_pcie_console_remove(struct udevice *dev)
 		cons->owner_id = OCTEONTX_PCIE_CONSOLE_OWNER_UNUSED;
 
 	/* Remove console from being in-use atomically */
-#ifdef __LITTLE_ENDIAN
-	__atomic_fetch_nand((u64 *)&(desc->in_use), mask, __ATOMIC_SEQ_CST);
-#else
-	__atomic_fetch_nand((u64 *)&(desc->exclusive), mask, __ATOMIC_SEQ_CST);
-#endif
+	__atomic_fetch_and((u64 *)&desc->in_use, ~mask, __ATOMIC_SEQ_CST);
+
 	return 0;
 }
 
-- 
2.29.0

