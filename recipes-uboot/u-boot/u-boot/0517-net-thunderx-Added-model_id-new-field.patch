From 46ca4a9ddeaaa7036c02a75d4706ce56c0c8495c Mon Sep 17 00:00:00 2001
From: Chandrakala Chavva <cchavva@caviumnetworks.com>
Date: Wed, 10 Aug 2016 14:03:11 -0700
Subject: [PATCH 0517/1239] net:thunderx: Added model_id new field

Fixed pass1_silicon() and pass2_silicon() macros to return true
or false as the checks apply to T88.

Signed-off-by: Chandrakala Chavva <cchavva@caviumnetworks.com>
---
 drivers/net/cavium/nic.h          | 9 +++++----
 drivers/net/cavium/nic_main.c     | 9 ++++++---
 drivers/net/cavium/nicvf_queues.c | 2 +-
 3 files changed, 12 insertions(+), 8 deletions(-)

diff --git a/drivers/net/cavium/nic.h b/drivers/net/cavium/nic.h
index c7c84fbcff..0d61fe5435 100644
--- a/drivers/net/cavium/nic.h
+++ b/drivers/net/cavium/nic.h
@@ -238,6 +238,7 @@ struct hw_info {
 	u8		tl2_cnt;
 	u8		tl1_cnt;
 	bool		tl1_per_bgx; /* TL1 per BGX or per LMAC */
+	u8		model_id;
 };
 
 struct nicvf {
@@ -509,14 +510,14 @@ void bgx_lmac_rx_tx_enable(int node, int bgx_idx, int lmacid, bool enable);
 void bgx_lmac_internal_loopback(int node, int bgx_idx,
 				int lmac_idx, bool enable);
 
-static inline bool pass1_silicon(unsigned int revision)
+static inline bool pass1_silicon(unsigned int revision, int model_id)
 {
-	return (revision < 8);
+	return ((revision < 8) && (model_id == 0x88));
 }
 
-static inline bool pass2_silicon(unsigned int revision)
+static inline bool pass2_silicon(unsigned int revision, int model_id)
 {
-	return (revision >= 8);
+	return ((revision >= 8) && (model_id == 0x88));
 }
 
 #endif /* NIC_H */
diff --git a/drivers/net/cavium/nic_main.c b/drivers/net/cavium/nic_main.c
index 2d87973b2e..f292f38447 100644
--- a/drivers/net/cavium/nic_main.c
+++ b/drivers/net/cavium/nic_main.c
@@ -71,7 +71,7 @@ static void nic_send_msg_to_vf(struct nicpf *nic, int vf, union nic_mbx *mbx)
 	 * when PF writes to MBOX(1), in next revisions when
 	 * PF writes to MBOX(0)
 	 */
-	if (pass1_silicon(nic->rev_id)) {
+	if (pass1_silicon(nic->rev_id, nic->hw->model_id)) {
 		/* see the comment for nic_reg_write()/nic_reg_read()
 		 * functions above
 		 */
@@ -220,7 +220,7 @@ void nic_handle_mbx_intr(struct nicpf *nic, int vf)
 		 * for consistency enabling the same on 88xx pass2
 		 * where this is introduced.
 		 */
-		if (pass2_silicon(nic->rev_id))
+		if (pass2_silicon(nic->rev_id, nic->hw->model_id))
 			nic_reg_write(nic, NIC_PF_RX_CFG, 0x01);
 		break;
 	case NIC_MBOX_MSG_RQ_BP_CFG:
@@ -456,6 +456,7 @@ static void nic_get_hw_info(struct nicpf *nic)
 		hw->tl2_cnt = 64;
 		hw->tl1_cnt = 2;
 		hw->tl1_per_bgx = true;
+		hw->model_id = 0x88;
 		break;
 	case PCI_SUBSYS_DEVID_81XX_NIC_PF:
 		hw->bgx_cnt = CONFIG_MAX_BGX_PER_NODE;
@@ -470,6 +471,7 @@ static void nic_get_hw_info(struct nicpf *nic)
 		hw->tl2_cnt = 16;
 		hw->tl1_cnt = 10;
 		hw->tl1_per_bgx = false;
+		hw->model_id = 0x81;
 		break;
 	case PCI_SUBSYS_DEVID_83XX_NIC_PF:
 		hw->bgx_cnt = CONFIG_MAX_BGX_PER_NODE;
@@ -483,6 +485,7 @@ static void nic_get_hw_info(struct nicpf *nic)
 		hw->tl2_cnt = 64;
 		hw->tl1_cnt = 18;
 		hw->tl1_per_bgx = false;
+		hw->model_id = 0x83;
 		break;
 	}
 	hw->tl4_cnt = MAX_QUEUES_PER_QSET * /*pci_sriov_get_totalvfs(nic->pdev)*/ 8;
@@ -602,7 +605,7 @@ static void nic_config_cpi(struct nicpf *nic, struct cpi_cfg_msg *cfg)
 			padd = cpi % 8; /* 3 bits CS out of 6bits DSCP */
 
 		/* Leave RSS_SIZE as '0' to disable RSS */
-		if (pass1_silicon(nic->rev_id)) {
+		if (pass1_silicon(nic->rev_id, nic->hw->model_id)) {
 			nic_reg_write(nic, NIC_PF_CPI_0_2047_CFG | (cpi << 3),
 				      (vnic << 24) | (padd << 16) |
 				      (rssi_base + rssi));
diff --git a/drivers/net/cavium/nicvf_queues.c b/drivers/net/cavium/nicvf_queues.c
index 4ec67fa849..5b34bca4a4 100644
--- a/drivers/net/cavium/nicvf_queues.c
+++ b/drivers/net/cavium/nicvf_queues.c
@@ -190,7 +190,7 @@ static int nicvf_init_cmp_queue(struct nicvf *nic,
 		return -1;
 	}
 	cq->desc = cq->dmem.base;
-	if (!pass1_silicon(nic->rev_id))
+	if (!pass1_silicon(nic->rev_id, nic->nicpf->hw->model_id))
 		cq->thresh = CMP_QUEUE_CQE_THRESH;
 	else
 		cq->thresh = 0;
-- 
2.29.0

