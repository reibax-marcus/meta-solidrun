From 8f9a30180b1f6cbe154ec094c070021a7efd0a86 Mon Sep 17 00:00:00 2001
From: Suneel Garapati <sgarapati@marvell.com>
Date: Sat, 16 Feb 2019 19:58:12 -0800
Subject: [PATCH 0883/1239] drivers: net: octeontx: de-couple smi driver and
 create config entry

SMI driver is common for OcteonTX and OcteonTX2 SoC's. De-couple
compilation and Create config entry for SMI driver and make
necessary changes to config files for all possible platforms.

For OcteonTX2 SoC's it is default disabled and can be added on need
basis.

Change-Id: Ic5936c323730173fedaf7f3217dbb265d66ed3ee
Signed-off-by: Suneel Garapati <sgarapati@marvell.com>
Reviewed-on: https://sj1git1.cavium.com/4188
Tested-by: Suneel Garapati <sgarapati@caviumnetworks.com>
Reviewed-by: Suneel Garapati <sgarapati@caviumnetworks.com>
---
 configs/octeontx_81xx_defconfig      |   3 +-
 configs/octeontx_83xx_defconfig      |   1 +
 drivers/net/Kconfig                  |   8 +
 drivers/net/Makefile                 |   1 +
 drivers/net/octeontx/Makefile        |   2 +-
 drivers/net/octeontx2/Makefile       |   2 +-
 drivers/net/octeontx2/octeontx_smi.c | 382 ---------------------------
 7 files changed, 14 insertions(+), 385 deletions(-)
 delete mode 100644 drivers/net/octeontx2/octeontx_smi.c

diff --git a/configs/octeontx_81xx_defconfig b/configs/octeontx_81xx_defconfig
index 2b97f2fb19..b53298308c 100644
--- a/configs/octeontx_81xx_defconfig
+++ b/configs/octeontx_81xx_defconfig
@@ -67,13 +67,13 @@ CONFIG_CMD_MTDPARTS=y
 CONFIG_MTDPARTS_DEFAULT="mtdparts=octeontx_nor0:6m@0(boot)ro,9m@0x600000(data),64k@0xf00000(env)ro\0"
 CONFIG_MTDIDS_DEFAULT="nor0=octeontx_nor0"
 CONFIG_DM_SPI_FLASH=y
-CONFIG_SPI_FLASH_MTD=y
 CONFIG_SPI_FLASH=y
 CONFIG_SPI_FLASH_4BAIS=y
 CONFIG_SPI_FLASH_MACRONIX=y
 CONFIG_SPI_FLASH_SPANSION=y
 CONFIG_SPI_FLASH_STMICRO=y
 CONFIG_SPI_FLASH_WINBOND=y
+CONFIG_SPI_FLASH_MTD=y
 CONFIG_PHYLIB=y
 CONFIG_PHYLIB_10G=y
 CONFIG_PHY_AQUANTIA=y
@@ -87,6 +87,7 @@ CONFIG_E1000=y
 CONFIG_E1000_SPI=y
 CONFIG_CMD_E1000=y
 CONFIG_NET_OCTEONTX=y
+CONFIG_OCTEONTX_SMI=y
 CONFIG_RTL8169=y
 CONFIG_PCI=y
 CONFIG_DM_PCI=y
diff --git a/configs/octeontx_83xx_defconfig b/configs/octeontx_83xx_defconfig
index 8f6879a249..d7c06fc456 100644
--- a/configs/octeontx_83xx_defconfig
+++ b/configs/octeontx_83xx_defconfig
@@ -82,6 +82,7 @@ CONFIG_E1000=y
 CONFIG_E1000_SPI=y
 CONFIG_CMD_E1000=y
 CONFIG_NET_OCTEONTX=y
+CONFIG_OCTEONTX_SMI=y
 CONFIG_RTL8169=y
 CONFIG_PCI=y
 CONFIG_DM_PCI=y
diff --git a/drivers/net/Kconfig b/drivers/net/Kconfig
index 25286696b8..95552546d2 100644
--- a/drivers/net/Kconfig
+++ b/drivers/net/Kconfig
@@ -341,9 +341,17 @@ config NET_OCTEONTX2
 	  You must select Y to enable network device support for
 	  OcteonTX2 SoCs. If unsure, say n
 
+config OCTEONTX_SMI
+	bool "OcteonTX SMI Device support"
+	depends on ARCH_OCTEONTX || ARCH_OCTEONTX2
+	help
+	  You must select Y to enable SMI controller support for
+	  OcteonTX or OcteonTX2 SoCs. If unsure, say n
+
 config OCTEONTX2_CGX_INTF
 	bool "OcteonTX2 CGX ATF interface support"
 	depends on ARCH_OCTEONTX2
+	default y if ARCH_OCTEONTX2
 	help
 	  You must select Y to enable CGX ATF interface support for
 	  OcteonTX2 SoCs. If unsure, say n
diff --git a/drivers/net/Makefile b/drivers/net/Makefile
index 8e5ae9d4de..50d78c8f25 100644
--- a/drivers/net/Makefile
+++ b/drivers/net/Makefile
@@ -64,6 +64,7 @@ obj-$(CONFIG_SMC911X) += smc911x.o
 obj-$(CONFIG_TSEC_ENET) += tsec.o fsl_mdio.o
 obj-$(CONFIG_NET_OCTEONTX) += octeontx/
 obj-$(CONFIG_NET_OCTEONTX2) += octeontx2/
+obj-$(CONFIG_OCTEONTX_SMI) += octeontx/octeontx_smi.o
 obj-$(CONFIG_OCTEONTX2_CGX_INTF) += octeontx2/cgx_intf.o
 obj-$(CONFIG_FMAN_ENET) += fsl_mdio.o
 obj-$(CONFIG_ULI526X) += uli526x.o
diff --git a/drivers/net/octeontx/Makefile b/drivers/net/octeontx/Makefile
index 1a61836ef8..0596617f91 100644
--- a/drivers/net/octeontx/Makefile
+++ b/drivers/net/octeontx/Makefile
@@ -7,4 +7,4 @@
 
 
 obj-$(CONFIG_NET_OCTEONTX) += octeontx_bgx.o nic_main.o nicvf_queues.o \
-		nicvf_main.o octeontx_smi.o octeontx_xcv.o
+		nicvf_main.o octeontx_xcv.o
diff --git a/drivers/net/octeontx2/Makefile b/drivers/net/octeontx2/Makefile
index 21d00320a0..92183ffc3e 100644
--- a/drivers/net/octeontx2/Makefile
+++ b/drivers/net/octeontx2/Makefile
@@ -7,5 +7,5 @@
 
 
 obj-$(CONFIG_NET_OCTEONTX2) += cgx.o nix_af.o nix.o rvu_pf.o \
-				rvu_af.o rvu_common.o octeontx_smi.o
+				rvu_af.o rvu_common.o
 
diff --git a/drivers/net/octeontx2/octeontx_smi.c b/drivers/net/octeontx2/octeontx_smi.c
deleted file mode 100644
index 2b21170d95..0000000000
--- a/drivers/net/octeontx2/octeontx_smi.c
+++ /dev/null
@@ -1,382 +0,0 @@
-/*
- * Copyright (C) 2018 Marvell International Ltd.
- *
- * SPDX-License-Identifier:    GPL-2.0
- * https://spdx.org/licenses
- */
-
-
-#include <common.h>
-#include <dm.h>
-#include <pci.h>
-#include <phy.h>
-#include <miiphy.h>
-#include <misc.h>
-#include <malloc.h>
-#include <asm/io.h>
-#include <environment.h>
-#include <linux/ctype.h>
-
-DECLARE_GLOBAL_DATA_PTR;
-
-enum octeontx_smi_mode {
-	CLAUSE22 = 0,
-	CLAUSE45 = 1,
-};
-
-enum {
-	SMI_OP_C22_WRITE = 0,
-	SMI_OP_C22_READ = 1,
-
-	SMI_OP_C45_ADDR = 0,
-	SMI_OP_C45_WRITE = 1,
-	SMI_OP_C45_PRIA = 2,
-	SMI_OP_C45_READ = 3,
-};
-
-union smi_x_clk {
-	u64 u;
-	struct smi_x_clk_s {
-		int phase:8;
-		int sample:4;
-		int preamble:1;
-		int clk_idle:1;
-		int reserved_14_14:1;
-		int sample_mode:1;
-		int sample_hi:5;
-		int reserved_21_23:3;
-		int mode:1;
-	} s;
-};
-
-union smi_x_cmd {
-	u64 u;
-	struct smi_x_cmd_s {
-		int reg_adr:5;
-		int reserved_5_7:3;
-		int phy_adr:5;
-		int reserved_13_15:3;
-		int phy_op:2;
-	} s;
-};
-
-union smi_x_wr_dat {
-	u64 u;
-	struct smi_x_wr_dat_s {
-		unsigned int dat:16;
-		int val:1;
-		int pending:1;
-	} s;
-};
-
-union smi_x_rd_dat {
-	u64 u;
-	struct smi_x_rd_dat_s {
-		unsigned int dat:16;
-		int val:1;
-		int pending:1;
-	} s;
-};
-
-union smi_x_en {
-	u64 u;
-	struct smi_x_en_s {
-		int en:1;
-	} s;
-};
-
-#define SMI_X_RD_DAT	0x10ull
-#define SMI_X_WR_DAT	0x08ull
-#define SMI_X_CMD	0x00ull
-#define SMI_X_CLK	0x18ull
-#define SMI_X_EN	0x20ull
-
-struct octeontx_smi_priv {
-	void __iomem *baseaddr;
-	enum octeontx_smi_mode mode;
-};
-
-#define MDIO_TIMEOUT 10000
-
-void octeontx_smi_setmode(struct mii_dev *bus, enum octeontx_smi_mode mode)
-{
-	struct octeontx_smi_priv *priv = bus->priv;
-	union smi_x_clk smix_clk;
-
-	smix_clk.u = readq(priv->baseaddr + SMI_X_CLK);
-	smix_clk.s.mode = mode;
-	smix_clk.s.preamble = mode == CLAUSE45;
-	writeq(smix_clk.u, priv->baseaddr + SMI_X_CLK);
-
-	priv->mode = mode;
-}
-
-int octeontx_c45_addr(struct mii_dev *bus, int addr, int devad, int regnum)
-{
-	struct octeontx_smi_priv *priv = bus->priv;
-
-	union smi_x_cmd smix_cmd;
-	union smi_x_wr_dat smix_wr_dat;
-	unsigned long timeout = MDIO_TIMEOUT;
-
-	smix_wr_dat.u = 0;
-	smix_wr_dat.s.dat = regnum;
-
-	writeq(smix_wr_dat.u, priv->baseaddr + SMI_X_WR_DAT);
-
-	smix_cmd.u = 0;
-	smix_cmd.s.phy_op = SMI_OP_C45_ADDR;
-	smix_cmd.s.phy_adr = addr;
-	smix_cmd.s.reg_adr = devad;
-
-	writeq(smix_cmd.u, priv->baseaddr + SMI_X_CMD);
-
-	do {
-		smix_wr_dat.u = readq(priv->baseaddr + SMI_X_WR_DAT);
-		udelay(100);
-		timeout--;
-	} while (smix_wr_dat.s.pending && timeout);
-
-	return timeout == 0;
-}
-
-int octeontx_phy_read(struct mii_dev *bus, int addr, int devad, int regnum)
-{
-	struct octeontx_smi_priv *priv = bus->priv;
-	union smi_x_cmd smix_cmd;
-	union smi_x_rd_dat smix_rd_dat;
-	unsigned long timeout = MDIO_TIMEOUT;
-	int ret;
-
-	enum octeontx_smi_mode mode = (devad < 0) ? CLAUSE22 : CLAUSE45;
-
-	debug("RD: Mode: %u, baseaddr: %p, addr: %d, devad: %d, reg: %d\n",
-	      mode, priv->baseaddr, addr, devad, regnum);
-
-	octeontx_smi_setmode(bus, mode);
-
-	if (mode == CLAUSE45) {
-		ret = octeontx_c45_addr(bus, addr, devad, regnum);
-
-		debug("RD: ret: %u\n", ret);
-
-		if (ret)
-			return 0;
-	}
-
-	smix_cmd.u = 0;
-	smix_cmd.s.phy_adr = addr;
-
-
-	if (mode == CLAUSE45) {
-		smix_cmd.s.reg_adr = devad;
-		smix_cmd.s.phy_op = SMI_OP_C45_READ;
-	} else {
-		smix_cmd.s.reg_adr = regnum;
-		smix_cmd.s.phy_op = SMI_OP_C22_READ;
-	}
-
-	writeq(smix_cmd.u, priv->baseaddr + SMI_X_CMD);
-
-	do {
-		smix_rd_dat.u = readq(priv->baseaddr + SMI_X_RD_DAT);
-		udelay(10);
-		timeout--;
-	} while (smix_rd_dat.s.pending && timeout);
-
-	debug("SMIX_RD_DAT: %lx\n", (unsigned long)smix_rd_dat.u);
-
-	return smix_rd_dat.s.dat;
-}
-
-int octeontx_phy_write(struct mii_dev *bus, int addr, int devad, int regnum,
-		       u16 value)
-{
-	struct octeontx_smi_priv *priv = bus->priv;
-	union smi_x_cmd smix_cmd;
-	union smi_x_wr_dat smix_wr_dat;
-	unsigned long timeout = MDIO_TIMEOUT;
-	int ret;
-
-	enum octeontx_smi_mode mode = (devad < 0) ? CLAUSE22 : CLAUSE45;
-
-	debug("WR: Mode: %u, baseaddr: %p, addr: %d, devad: %d, reg: %d\n",
-	      mode, priv->baseaddr, addr, devad, regnum);
-
-	if (mode == CLAUSE45) {
-		ret = octeontx_c45_addr(bus, addr, devad, regnum);
-
-		debug("WR: ret: %u\n", ret);
-
-		if (ret)
-			return ret;
-	}
-
-	smix_wr_dat.u = 0;
-	smix_wr_dat.s.dat = value;
-
-	writeq(smix_wr_dat.u, priv->baseaddr + SMI_X_WR_DAT);
-
-	smix_cmd.u = 0;
-	smix_cmd.s.phy_adr = addr;
-
-	if (mode == CLAUSE45) {
-		smix_cmd.s.reg_adr = devad;
-		smix_cmd.s.phy_op = SMI_OP_C45_WRITE;
-	} else {
-		smix_cmd.s.reg_adr = regnum;
-		smix_cmd.s.phy_op = SMI_OP_C22_WRITE;
-	}
-
-	writeq(smix_cmd.u, priv->baseaddr + SMI_X_CMD);
-
-	do {
-		smix_wr_dat.u = readq(priv->baseaddr + SMI_X_WR_DAT);
-		udelay(10);
-		timeout--;
-	} while (smix_wr_dat.s.pending && timeout);
-
-	debug("SMIX_WR_DAT: %lx\n", (unsigned long)smix_wr_dat.u);
-
-	return timeout == 0;
-}
-
-int octeontx_smi_reset(struct mii_dev *bus)
-{
-	struct octeontx_smi_priv *priv = bus->priv;
-
-	union smi_x_en smi_en;
-
-	smi_en.s.en = 0;
-	writeq(smi_en.u, priv->baseaddr + SMI_X_EN);
-
-	smi_en.s.en = 1;
-	writeq(smi_en.u, priv->baseaddr + SMI_X_EN);
-
-	octeontx_smi_setmode(bus, CLAUSE22);
-
-	return 0;
-}
-
-/* PHY XS initialization, primarily for RXAUI
- *
- */
-int __cavm_if_phy_xs_init(struct mii_dev *bus, int phy_addr)
-{
-	int reg;
-	ulong start_time;
-	int phy_id1, phy_id2;
-	int oui, model_number;
-
-	phy_id1 = octeontx_phy_read(bus, phy_addr, 1, 0x2);
-	phy_id2 = octeontx_phy_read(bus, phy_addr, 1, 0x3);
-	model_number = (phy_id2 >> 4) & 0x3F;
-	debug("%s model %x\n", __func__,model_number);
-	oui = phy_id1;
-	oui <<= 6;
-	oui |= (phy_id2 >> 10) & 0x3F;
-	debug("%s oui %x\n", __func__,oui);
-	switch (oui)
-	{
-		case 0x5016:
-			if (model_number == 9)
-			{
-				debug("%s +\n", __func__);
-				/* Perform hardware reset in XGXS control */
-				reg = octeontx_phy_read(bus, phy_addr, 4, 0x0);
-				if ((reg & 0xffff) < 0)
-				       goto read_error;
-				reg |= 0x8000;
-				octeontx_phy_write(bus, phy_addr, 4, 0x0, reg);
-
-				start_time = get_timer(0);
-				do {
-				       reg = octeontx_phy_read(bus, phy_addr, 4, 0x0);
-				       if ((reg & 0xffff) < 0)
-					       goto read_error;
-				} while ((reg & 0x8000) && get_timer(start_time) < 500);
-				if (reg & 0x8000) {
-				       printf("Hardware reset for M88X3120 PHY failed, MII_BMCR: 0x%x\n", reg);
-				       return -1;
-				}
-				/* program 4.49155 with 0x5 */
-				octeontx_phy_write(bus, phy_addr, 4, 0xc003, 0x5);
-			}
-			break;
-			default:
-				break;
-	}
-
-	return 0;
-
-read_error:
-	debug("M88X3120 PHY config read failed\n");
-	return -1;
-}
-
-int octeontx_smi_probe(struct udevice *dev)
-{
-	size_t size;
-	int ret, subnode, cnt = 0, node = dev->node.of_offset;
-	struct mii_dev *bus;
-	struct octeontx_smi_priv *priv;
-	pci_dev_t bdf = dm_pci_get_bdf(dev);
-
-        debug("SMI PCI device: %x\n", bdf);
-        dev->req_seq = PCI_FUNC(bdf);
-        if ( !dm_pci_map_bar(dev, 0, &size, PCI_REGION_MEM)) {
-		printf("Failed to map PCI region for bdf %x\n", bdf);
-		return -1;
-	}
-
-	fdt_for_each_subnode(subnode, gd->fdt_blob, node) {
-		ret = fdt_node_check_compatible(gd->fdt_blob, subnode,
-						"cavium,thunder-8890-mdio");
-		if (ret)
-			continue;
-
-		bus = mdio_alloc();
-		priv = malloc(sizeof(*priv));
-		if (!bus || !priv) {
-			printf("Failed to allocate OcteonTX MDIO bus # %u\n",
-				dev->seq);
-			return -1;
-		}
-
-		bus->read = octeontx_phy_read;
-		bus->write = octeontx_phy_write;
-		bus->reset = octeontx_smi_reset;
-		bus->priv = priv;
-
-		priv->mode = CLAUSE22;
-		priv->baseaddr = (void __iomem *)fdtdec_get_addr(gd->fdt_blob,
-							 subnode, "reg");
-		debug("mdio base addr %p\n", priv->baseaddr);
-
-		/* use given name or generate its own unique name */
-		snprintf(bus->name, MDIO_NAME_LEN, "smi%d", cnt++);
-
-		ret = mdio_register(bus);
-		if (ret) {
-			return ret;
-		}
-	}
-	return 0;
-}
-
-static const struct misc_ops octeontx_smi_ops = {
-};
-
-static const struct udevice_id octeontx_smi_ids[] = {
-	{ .compatible = "cavium,thunder-8890-mdio-nexus" },
-	{}
-};
-
-U_BOOT_DRIVER(octeontx_smi) = {
-	.name	= "octeontx_smi",
-	.id	= UCLASS_MISC,
-	.probe	= octeontx_smi_probe,
-	.of_match = octeontx_smi_ids,
-	.ops	= &octeontx_smi_ops,
-};
-
-- 
2.29.0

