From c419dd533155d6cbe7d2e8ddf64b7206709eaf98 Mon Sep 17 00:00:00 2001
From: Suneel Garapati <sgarapati@caviumnetworks.com>
Date: Thu, 31 Aug 2017 17:09:54 -0700
Subject: [PATCH 0700/1239] board: thunderx: set ethaddr environment variables
 correctly

early setting in thunderx_parse_phy_info will fail as env
device is not initialized yet. Set them using
thunderx_parse_mac_addr in board_late_init which works for
environment and net subsystem.

Signed-off-by: Suneel Garapati <sgarapati@caviumnetworks.com>
---
 .../include/asm/arch-thunderx/thunderx_fdt.h  |  1 +
 board/cavium/thunderx/fdt.c                   | 68 ++++++++++++++++++-
 board/cavium/thunderx/thunderx.c              |  9 ++-
 3 files changed, 75 insertions(+), 3 deletions(-)

diff --git a/arch/arm/include/asm/arch-thunderx/thunderx_fdt.h b/arch/arm/include/asm/arch-thunderx/thunderx_fdt.h
index 49f46f3042..c362d70104 100644
--- a/arch/arm/include/asm/arch-thunderx/thunderx_fdt.h
+++ b/arch/arm/include/asm/arch-thunderx/thunderx_fdt.h
@@ -8,5 +8,6 @@
 
 void thunderx_parse_bdk_config(void);
 void thunderx_parse_phy_info(void);
+void thunderx_parse_mac_addr(void);
 
 #endif
diff --git a/board/cavium/thunderx/fdt.c b/board/cavium/thunderx/fdt.c
index 08c1ca63b9..afb2b8dba3 100644
--- a/board/cavium/thunderx/fdt.c
+++ b/board/cavium/thunderx/fdt.c
@@ -28,7 +28,7 @@ void thunderx_parse_bdk_config(void)
 {
 	char boardname[32];
 	const char *str;
-#ifdef CONFIG_THUNDERX_BGX
+#if 0
 	uint8_t ethaddr[6];
 	int i;
 #endif
@@ -65,7 +65,7 @@ void thunderx_parse_bdk_config(void)
 		printf("Error: cannot retrieve board type from fdt\n");
 	}
 
-#ifdef CONFIG_THUNDERX_BGX
+#if 0
 	char envname[16];
 
 	for (i = 0; i < (CONFIG_MAX_BGX * 4); i++) {
@@ -223,6 +223,70 @@ void thunderx_parse_phy_info(void)
 	}
 }
 
+void thunderx_parse_mac_addr(void)
+{
+	const void *fdt = gd->fdt_blob;
+	int offset = 0, node, bgx_id = 0, lmacid = 0;
+	const u32 *val;
+	const char *mac_addr;
+	char eth_addr[32];
+	char bgxname[16];
+	char envname[16];
+	int len, rgx_id = 0, eth_id = 0;
+	int subnode;
+
+	debug("%s: ENTER\n", __func__);
+	offset = fdt_node_offset_by_compatible(fdt, -1, "pci-bridge");
+	if (offset > 1) {
+	debug("%s: ENTER\n", __func__);
+		for (bgx_id = 0; bgx_id < CONFIG_MAX_BGX_PER_NODE; bgx_id++) {
+	debug("%s: ENTER\n", __func__);
+			snprintf(bgxname, sizeof(bgxname),
+				 "bgx%d", bgx_id);
+			node = fdt_subnode_offset(fdt, offset, bgxname);
+			if (node < 0) {
+				/* check if it is rgx node */
+				snprintf(bgxname, sizeof(bgxname),
+					 "rgx%d", rgx_id);
+				node = fdt_subnode_offset(fdt, offset, bgxname);
+				if (node < 0) {
+					printf("bgx%d/rgx0 node not found\n",
+					       bgx_id);
+					continue;
+				}
+			}
+			debug("bgx%d node found\n", bgx_id);
+
+			/* loop through each of the bgx/rgx nodes
+			to find PHY nodes */
+			fdt_for_each_subnode(subnode, fdt, node) {
+
+				/* check for local-mac-address */
+				mac_addr = fdt_getprop(fdt, subnode,
+						       "local-mac-address",
+						       &len);
+				if (mac_addr) {
+					debug("\n%s %pM\n", __func__, mac_addr);
+					snprintf(eth_addr, sizeof(eth_addr),
+						 "%pM", mac_addr);
+					if (eth_id)
+						snprintf(envname,
+							 sizeof(envname),
+							 "eth%daddr", eth_id);
+					else
+						strcpy(envname, "ethaddr");
+					setenv_force(envname, eth_addr);
+				} else {
+					printf("Warning: local-mac-address "
+					       "not found for bgx%d lmac%d\n",
+					       bgx_id, lmacid);
+				}
+				eth_id++;
+				lmacid++;
+			}
+		}
+	}
+}
 
 int arch_fixup_memory_node(void *blob)
 {
diff --git a/board/cavium/thunderx/thunderx.c b/board/cavium/thunderx/thunderx.c
index 943a9a2902..85b0a3d50f 100644
--- a/board/cavium/thunderx/thunderx.c
+++ b/board/cavium/thunderx/thunderx.c
@@ -74,7 +74,6 @@ int board_init(void)
 {
 	ulong fdt_addr = (ulong)fdt_base_addr;
 	set_working_fdt_addr(fdt_addr);
-	thunderx_parse_bdk_config();
 	thunderx_parse_phy_info();
 
 	return 0;
@@ -144,6 +143,14 @@ int board_late_init(void)
 	int len, node;
 
 	debug("%s()\n", __func__);
+
+	/*
+	 * Now that pci_init initializes env device.
+	 * Try to set environment variables
+	 */
+	thunderx_parse_bdk_config();
+	thunderx_parse_mac_addr();
+
 	board = getenv("board");
 
 	/* some times simulator fails to load environment
-- 
2.29.0

