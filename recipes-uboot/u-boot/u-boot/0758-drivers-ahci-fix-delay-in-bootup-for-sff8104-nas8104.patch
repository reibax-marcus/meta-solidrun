From 8bc56ed2fba2cc00c35510e337719e2c43439c3d Mon Sep 17 00:00:00 2001
From: Suneel Garapati <sgarapati@caviumnetworks.com>
Date: Fri, 23 Feb 2018 11:51:07 -0800
Subject: [PATCH 0758/1239] drivers: ahci: fix delay in bootup for
 sff8104/nas8104

These boards have port multipliers and with generic ahci
driver, device is always present on port 0 and there is no
port multiplier support, so use an ugly hack based on board
name to not wait for status on spinup of device.

fix for bug #31967

Signed-off-by: Suneel Garapati <sgarapati@caviumnetworks.com>
---
 board/cavium/thunderx/thunderx.c | 19 +++++++++----------
 drivers/ata/ahci.c               | 11 +++++++++++
 2 files changed, 20 insertions(+), 10 deletions(-)

diff --git a/board/cavium/thunderx/thunderx.c b/board/cavium/thunderx/thunderx.c
index 0b99d9eb78..0016a2bc7c 100644
--- a/board/cavium/thunderx/thunderx.c
+++ b/board/cavium/thunderx/thunderx.c
@@ -55,6 +55,7 @@ U_BOOT_DEVICE(thunderx_serial1) = {
 
 DECLARE_GLOBAL_DATA_PTR;
 
+char boardtype[32];
 extern unsigned long fdt_base_addr;
 
 #ifdef CONFIG_BOARD_EARLY_INIT_R
@@ -69,10 +70,17 @@ int board_early_init_r(void)
 
 int board_init(void)
 {
+	const char *str;
+	int len, node;
 	ulong fdt_addr = (ulong)fdt_base_addr;
+
 	set_working_fdt_addr(fdt_addr);
 	thunderx_parse_phy_info();
+	node = fdt_path_offset(gd->fdt_blob, "/cavium,bdk");
+	str = fdt_getprop(gd->fdt_blob, node, "BOARD-MODEL", &len);
+	strncpy(boardtype, str, len);
 
+	printf("Board type: %s\n", boardtype);
 	return 0;
 }
 
@@ -159,22 +167,13 @@ int board_late_init(void)
 		str = fdt_getprop(gd->fdt_blob, node, "BOARD-MODEL", &len);
 		debug("fdt: BOARD-MODEL str %s len %d\n", str, len);
 		if (str) {
-			strncpy(boardname, str, sizeof(boardname));
+			strncpy(boardname, str, len);
 			env_set("board", boardname);
 		}
 		board = env_get("board");
 	}
-#if 0
-	strncpy(boardname, board, sizeof(boardname));
-	strcat(boardname,"> ");
-	debug("boardname: %s\n", boardname);
-	env_set("PS1", boardname);
-	debug("PS1: %s\n", env_get("PS1"));
-#else
 	snprintf(boardname, sizeof(boardname), "%s> ", board);
 	env_set("prompt", boardname);
-#endif
-	printf("Board type: %s\n", env_get("board"));
 #ifdef DEBUG
 	dm_dump_all();
 #endif
diff --git a/drivers/ata/ahci.c b/drivers/ata/ahci.c
index 24f3a65357..56cfd8dbcd 100644
--- a/drivers/ata/ahci.c
+++ b/drivers/ata/ahci.c
@@ -50,6 +50,8 @@ struct ahci_uc_priv *probe_ent = NULL;
 #define WAIT_MS_FLUSH	5000
 #define WAIT_MS_LINKUP	200
 
+extern char boardtype[32];
+
 __weak void __iomem *ahci_port_base(void __iomem *base, u32 port)
 {
 	return base + 0x100 + (port * 0x80);
@@ -608,6 +610,15 @@ static int ahci_port_start(struct ahci_uc_priv *uc_priv, u8 port)
 
 	debug("Exit start port %d\n", port);
 
+	/*
+	 * Skip interface busy check based on error and status
+	 * information from task file data register as these boards
+	 * have port multiplier and device is always present
+	 * U-boot lacks port multiplier support hence this ugly hack.
+	 */
+	if ((strcmp(boardtype, "sff8104") == 0) ||
+		(strcmp(boardtype, "nas8104") == 0))
+		return 0;
 	/*
 	 * Make sure interface is not busy based on error and status
 	 * information from task file data register before proceeding
-- 
2.29.0

