From aebd0026b00dd8a84c0befad1a2986053cb07601 Mon Sep 17 00:00:00 2001
From: Sujeet Baranwal <sbaranwal@marvell.com>
Date: Mon, 27 Jul 2020 10:42:09 -0700
Subject: [PATCH 1215/1239] smbios: type 16 implementation

This structure describes a collection of memory
devices that operate together to form a memory
address space.

Signed-off-by: Sujeet Baranwal <sbaranwal@marvell.com>
Change-Id: I42f703f165cf1b921c974bafc0be46bfccd2e3b3
Reviewed-on: https://sj1git1.cavium.com/c/IP/SW/boot/u-boot/+/35167
Tested-by: Jia Ma <jiam@marvell.com>
Reviewed-by: Jia Ma <jiam@marvell.com>
---
 include/smbios.h | 32 ++++++++++++++++++++++++++++++++
 lib/smbios.c     | 46 ++++++++++++++++++++++++++++++++++++++++++++++
 2 files changed, 78 insertions(+)

diff --git a/include/smbios.h b/include/smbios.h
index 031c9871e9..c16327174b 100644
--- a/include/smbios.h
+++ b/include/smbios.h
@@ -37,6 +37,7 @@ enum {
 	SMBIOS_CACHE_INFORMATION = 7,
 	SMBIOS_PORT_INFORMATION = 8,
 	SMBIOS_SYSTEM_SLOTS = 9,
+	SMBIOS_BIOS_LANGUAGE_INFORMATION = 13,
 	SMBIOS_PHYS_MEMORY_ARRAY = 16,
 	SMBIOS_MEMORY_DEVICE = 17,
 	SMBIOS_MEMORY_ARRAY_MAPPED_ADDRESS = 19,
@@ -298,6 +299,37 @@ struct __packed smbios_type9 {
 	char eos[SMBIOS_STRUCT_EOS_BYTES];
 };
 
+struct __packed smbios_type13 {
+	u8 type;
+	u8 length;
+	u16 handle;
+	u8 installable_languages;
+	u8 flags;
+	u8 reserved[15];
+	u8 current_language;
+	char eos[SMBIOS_STRUCT_EOS_BYTES];
+};
+
+/* Type 16 */
+#define DMTF_TYPE16_LOCATION_SYSTEM_BOARD_OR_MOTHERBOARD 0x03
+#define	DMTF_TYPE16_USE_SYSTEM_MEMORY 0x03
+#define	DMTF_TYPE16_ERROR_CORRECTION_SINGLE_BIT_ECC 0x05
+#define	DMTF_TYPE16_MAXIMUM_CAPACITY_64GB BIT(26)
+
+struct __packed smbios_type16 {
+	u8 type;
+	u8 length;
+	u16 handle;
+	u8 location;
+	u8 use;
+	u8 memory_error_correction;
+	u32 maximum_capacity;
+	u16 memory_error_information_handle;
+	u16 number_of_memory_devices;
+	u64 extended_maximum_capacity;
+	char eos[SMBIOS_STRUCT_EOS_BYTES];
+};
+
 struct __packed smbios_type32 {
 	u8 type;
 	u8 length;
diff --git a/lib/smbios.c b/lib/smbios.c
index 822800fbdb..3a3adaab3a 100644
--- a/lib/smbios.c
+++ b/lib/smbios.c
@@ -411,6 +411,50 @@ static int smbios_write_type9(ulong *current, int handle)
 	return len;
 }
 
+static int smbios_write_type13(ulong *current, int handle)
+{
+	struct smbios_type13 *t;
+	int len = sizeof(struct smbios_type13);
+	const char *language = "en|US|iso8859-1";
+
+	t = map_sysmem(*current, len);
+	memset(t, 0, sizeof(struct smbios_type13));
+	fill_smbios_header(t, SMBIOS_BIOS_LANGUAGE_INFORMATION, len, handle);
+
+	t->installable_languages = 1;
+	t->flags = 0;
+	t->current_language = smbios_add_string(t->eos, language);
+
+	len = t->length + smbios_string_table_len(t->eos);
+	*current += len;
+	unmap_sysmem(t);
+
+	return len;
+}
+
+static int smbios_write_type16(ulong *current, int handle)
+{
+	struct smbios_type16 *t;
+	int len = sizeof(struct smbios_type16);
+
+	t = map_sysmem(*current, len);
+	memset(t, 0, sizeof(struct smbios_type16));
+	fill_smbios_header(t, SMBIOS_PHYS_MEMORY_ARRAY, len, handle);
+
+	t->location = DMTF_TYPE16_LOCATION_SYSTEM_BOARD_OR_MOTHERBOARD;
+	t->use = DMTF_TYPE16_USE_SYSTEM_MEMORY;
+	t->memory_error_correction = DMTF_TYPE16_ERROR_CORRECTION_SINGLE_BIT_ECC;
+	t->maximum_capacity = DMTF_TYPE16_MAXIMUM_CAPACITY_64GB;
+	t->number_of_memory_devices = 1;
+	t->memory_error_information_handle = 0xFFFE;
+
+	len = t->length + smbios_string_table_len(t->eos);
+	*current += len;
+	unmap_sysmem(t);
+
+	return len;
+}
+
 static int smbios_write_type32(ulong *current, int handle)
 {
 	struct smbios_type32 *t;
@@ -450,6 +494,8 @@ static smbios_write_type smbios_write_funcs[] = {
 	smbios_write_type7,
 	smbios_write_type8,
 	smbios_write_type9,
+	smbios_write_type13,
+	smbios_write_type16,
 	smbios_write_type32,
 	smbios_write_type127
 };
-- 
2.29.0

