From 42a6e7e55335520d7d75efc69518126a6555cf4b Mon Sep 17 00:00:00 2001
From: David Sniatkiwicz <davidsn@marvell.com>
Date: Sun, 7 May 2017 10:51:35 +0300
Subject: [PATCH 0049/1239] usb: a8k: remove board specific code for vbus
 regulator support

This patch removes the functions board_xhci_enable and
board_xhci_config, because the xhci_usb_probe in mvebu XHCI driver
will turn on the vbus, so it doesn't need to do it again.

Change-Id: Ic4414d133f0d7ac8d595dc5cbfcdcc2268b525e7
Signed-off-by: David Sniatkiwicz <davidsn@marvell.com>
Reviewed-by: Igal Liberman <igall@marvell.com>
---
 board/Marvell/mvebu_armada-8k/board.c | 126 --------------------------
 1 file changed, 126 deletions(-)

diff --git a/board/Marvell/mvebu_armada-8k/board.c b/board/Marvell/mvebu_armada-8k/board.c
index e927e338ea..a1a4996f64 100644
--- a/board/Marvell/mvebu_armada-8k/board.c
+++ b/board/Marvell/mvebu_armada-8k/board.c
@@ -12,131 +12,6 @@
 
 DECLARE_GLOBAL_DATA_PTR;
 
-/*
- * Information specific to the DB-88F7040 eval board. We strive to use
- * DT for such platform specfic configurations. At some point, this
- * might be removed here and implemented via DT.
- */
-/* IO expander I2C device */
-#define I2C_IO_EXP_ADDR		0x21
-#define I2C_IO_CFG_REG_0	0x6
-#define I2C_IO_DATA_OUT_REG_0	0x2
-/* VBus enable */
-#define I2C_IO_REG_0_USB_H0_OFF	0
-#define I2C_IO_REG_0_USB_H1_OFF	1
-#define I2C_IO_REG_VBUS		((1 << I2C_IO_REG_0_USB_H0_OFF) | \
-				 (1 << I2C_IO_REG_0_USB_H1_OFF))
-/* Current limit */
-#define I2C_IO_REG_0_USB_H0_CL	4
-#define I2C_IO_REG_0_USB_H1_CL	5
-#define I2C_IO_REG_CL		((1 << I2C_IO_REG_0_USB_H0_CL) | \
-				 (1 << I2C_IO_REG_0_USB_H1_CL))
-
-static int usb_enabled = 0;
-
-/* Board specific xHCI dis-/enable code */
-
-/*
- * Set USB VBUS signals (via I2C IO expander/GPIO) as output and set
- * output value as disabled
- *
- * Set USB Current Limit signals (via I2C IO expander/GPIO) as output
- * and set output value as enabled
- */
-int board_xhci_config(void)
-{
-	struct udevice *dev;
-	int ret;
-	u8 buf[8];
-
-	if (of_machine_is_compatible("marvell,armada7040-db")) {
-		/* Configure IO exander PCA9555: 7bit address 0x21 */
-		ret = i2c_get_chip_for_busnum(0, I2C_IO_EXP_ADDR, 1, &dev);
-		if (ret) {
-			printf("Cannot find PCA9555: %d\n", ret);
-			return 0;
-		}
-
-		/*
-		 * Read configuration (direction) and set VBUS pin as output
-		 * (reset pin = output)
-		 */
-		ret = dm_i2c_read(dev, I2C_IO_CFG_REG_0, buf, 1);
-		if (ret) {
-			printf("Failed to read IO expander value via I2C\n");
-			return -EIO;
-		}
-		buf[0] &= ~I2C_IO_REG_VBUS;
-		buf[0] &= ~I2C_IO_REG_CL;
-		ret = dm_i2c_write(dev, I2C_IO_CFG_REG_0, buf, 1);
-		if (ret) {
-			printf("Failed to set IO expander via I2C\n");
-			return -EIO;
-		}
-
-		/* Read output value and configure it */
-		ret = dm_i2c_read(dev, I2C_IO_DATA_OUT_REG_0, buf, 1);
-		if (ret) {
-			printf("Failed to read IO expander value via I2C\n");
-			return -EIO;
-		}
-		buf[0] &= ~I2C_IO_REG_VBUS;
-		buf[0] |= I2C_IO_REG_CL;
-		ret = dm_i2c_write(dev, I2C_IO_DATA_OUT_REG_0, buf, 1);
-		if (ret) {
-			printf("Failed to set IO expander via I2C\n");
-			return -EIO;
-		}
-
-		mdelay(500); /* required delay to let output value settle */
-	}
-
-	return 0;
-}
-
-int board_xhci_enable(fdt_addr_t base)
-{
-	struct udevice *dev;
-	int ret;
-	u8 buf[8];
-
-	if (of_machine_is_compatible("marvell,armada7040-db")) {
-		/*
-		 * This function enables all USB ports simultaniously,
-		 * it only needs to get called once
-		 */
-		if (usb_enabled)
-			return 0;
-
-		/* Configure IO exander PCA9555: 7bit address 0x21 */
-		ret = i2c_get_chip_for_busnum(0, I2C_IO_EXP_ADDR, 1, &dev);
-		if (ret) {
-			printf("Cannot find PCA9555: %d\n", ret);
-			return 0;
-		}
-
-		/* Read VBUS output value */
-		ret = dm_i2c_read(dev, I2C_IO_DATA_OUT_REG_0, buf, 1);
-		if (ret) {
-			printf("Failed to read IO expander value via I2C\n");
-			return -EIO;
-		}
-
-		/* Enable VBUS power: Set output value of VBUS pin as enabled */
-		buf[0] |= I2C_IO_REG_VBUS;
-		ret = dm_i2c_write(dev, I2C_IO_DATA_OUT_REG_0, buf, 1);
-		if (ret) {
-			printf("Failed to set IO expander via I2C\n");
-			return -EIO;
-		}
-
-		mdelay(500); /* required delay to let output value settle */
-		usb_enabled = 1;
-	}
-
-	return 0;
-}
-
 int board_early_init_f(void)
 {
 	/* Nothing to do (yet), perhaps later some pin-muxing etc */
@@ -155,7 +30,6 @@ int board_init(void)
 int board_late_init(void)
 {
 	/* Pre-configure the USB ports (overcurrent, VBus) */
-	board_xhci_config();
 
 	return 0;
 }
-- 
2.29.0

