From cd844b8cf094ebbd43594c6ad58b8b4f6da58a38 Mon Sep 17 00:00:00 2001
From: Aaron Williams <aaron.williams@cavium.com>
Date: Wed, 14 Sep 2016 17:17:06 -0700
Subject: [PATCH 0067/1239] net: phy: fix 88E1510 PHY initialization

The initialization of the 88e1510 was wrong in that
it performed the 88e1518 configuration which then calls
the 88e1111s initialization.

The 88e1111s initialization is incompatible with this phy, especially when
it comes to configuring RGMII.  Also, the 88e151X phys do not support
RTBI mode.

This code changes the initialization of the 88e1510 to use the proper
registers for RGMII.  Note that I have not been able to test the different
timing modes with my board so I am only using PHY_INTERFACE_MODE_RGMII.

Also, it may be that instead of making the change here the 88e1518
configuration function should be changed.

Change-Id: I0687d94563bd0c8038d0abae04735dcae249bb7d
Signed-off-by: Aaron Williams <aaron.williams@cavium.com>
---
 drivers/net/phy/marvell.c | 69 +++++++++++++++++++++++++++++++++++++--
 1 file changed, 67 insertions(+), 2 deletions(-)

diff --git a/drivers/net/phy/marvell.c b/drivers/net/phy/marvell.c
index efbbd31ff7..efaa027823 100644
--- a/drivers/net/phy/marvell.c
+++ b/drivers/net/phy/marvell.c
@@ -331,7 +331,7 @@ static int m88e1518_config(struct phy_device *phydev)
 	 * As per Marvell Release Notes - Alaska 88E1510/88E1518/88E1512
 	 * /88E1514 Rev A0, Errata Section 3.1
 	 */
-
+	debug("%s(%s)\n", __func__, phydev->dev->name);
 	/* EEE initialization */
 	phy_write(phydev, MDIO_DEVAD_NONE, MIIM_88E1118_PHY_PAGE, 0x00ff);
 	phy_write(phydev, MDIO_DEVAD_NONE, 17, 0x214B);
@@ -404,6 +404,7 @@ static int m88e1518_config(struct phy_device *phydev)
 /* Marvell 88E1510 */
 static int m88e1510_config(struct phy_device *phydev)
 {
+	debug("%s(%s)\n", __func__, phydev->dev->name);
 	/* Select page 3 */
 	phy_write(phydev, MDIO_DEVAD_NONE, MIIM_88E1118_PHY_PAGE,
 		  MIIM_88E1118_PHY_LED_PAGE);
@@ -424,8 +425,72 @@ static int m88e1510_config(struct phy_device *phydev)
 
 	/* Reset page selection */
 	phy_write(phydev, MDIO_DEVAD_NONE, MIIM_88E1118_PHY_PAGE, 0);
+	debug("%s: interface mode: %s\n", __func__,
+	      phy_string_for_interface(phydev->interface));
+	/* SGMII-to-Copper mode initialization (88E1512 & 88E1514 only) */
+	if (phydev->interface == PHY_INTERFACE_MODE_SGMII) {
+		/* Select page 18 */
+		phy_write(phydev, MDIO_DEVAD_NONE, 22, 18);
+
+		/* In reg 20, write MODE[2:0] = 0x1 (SGMII to Copper) */
+		m88e1518_phy_writebits(phydev, 20, 0, 3, 1);
+
+		/* PHY reset is necessary after changing MODE[2:0] */
+		m88e1518_phy_writebits(phydev, 20, 15, 1, 1);
+
+		/* Reset page selection */
+		phy_write(phydev, MDIO_DEVAD_NONE, 22, 0);
+	} else if (phydev->interface == PHY_INTERFACE_MODE_RGMII      ||
+		   phydev->interface == PHY_INTERFACE_MODE_RGMII_ID   ||
+		   phydev->interface == PHY_INTERFACE_MODE_RGMII_RXID ||
+		   phydev->interface == PHY_INTERFACE_MODE_RGMII_TXID) {
+		/* RGMII-to-Copper mode initialization */
+
+		/* Select page 2 */
+		phy_write(phydev, MDIO_DEVAD_NONE, 22, 2);
+		/* Set rx and tx delay as needed */
+		switch (phydev->interface) {
+		default:
+		case PHY_INTERFACE_MODE_RGMII:	/* no delay */
+			m88e1518_phy_writebits(phydev, 21, 4, 2, 0);
+			break;
+		case PHY_INTERFACE_MODE_RGMII_ID:	/* delay both */
+			m88e1518_phy_writebits(phydev, 21, 4, 2, 3);
+			break;
+		case PHY_INTERFACE_MODE_RGMII_RXID:	/* delay rx */
+			m88e1518_phy_writebits(phydev, 21, 4, 2, 2);
+			break;
+		case PHY_INTERFACE_MODE_RGMII_TXID:	/* delay tx */
+			m88e1518_phy_writebits(phydev, 21, 4, 2, 1);
+			break;
+		}
+		/* Select page 18 */
+		phy_write(phydev, MDIO_DEVAD_NONE, 22, 18);
+
+		/* In reg 20, write MODE[2:0] = 0x1 (RGMII to Copper) */
+		m88e1518_phy_writebits(phydev, 20, 0, 3, 0);
+
+		/* PHY reset is necessary after changing MODE[2:0] */
+		m88e1518_phy_writebits(phydev, 20, 15, 1, 1);
 
-	return m88e1518_config(phydev);
+		/* Reset page selection */
+		phy_write(phydev, MDIO_DEVAD_NONE, 22, 0);
+	} else {
+		printf("%s(%s): Error: unsupported mode %s\n", __func__,
+		       phydev->dev->name,
+		       phy_string_for_interface(phydev->interface));
+		return -1;
+	}
+
+	udelay(100);
+
+	/* soft reset */
+	phy_reset(phydev);
+
+	genphy_config_aneg(phydev);
+	genphy_restart_aneg(phydev);
+
+	return 0;
 }
 
 /* Marvell 88E1118 */
-- 
2.29.0

