From b6d87f7297434969401014a4fd99b3b6e038839c Mon Sep 17 00:00:00 2001
From: Suneel Garapati <sgarapati@marvell.com>
Date: Thu, 30 Jan 2020 23:40:00 -0800
Subject: [PATCH 1076/1239] drivers: spi: octeontx: fix memory corruption in
 exec_op

Using fixed length buffer in octeontx_spi_exec_op for address
and dummy is incorrect as dummy byte count is variable length.
Fix by using calloc based on byte count of dummy and address.

Change-Id: I4ca1b6248d79881006a7d482dd17bcfaa2541467
Signed-off-by: Suneel Garapati <sgarapati@marvell.com>
Reviewed-on: https://sj1git1.cavium.com/22633
Tested-by: sa_ip-sw-jenkins <sa_ip-sw-jenkins@marvell.com>
Reviewed-by: Chandrakala Chavva <cchavva@marvell.com>
---
 drivers/spi/octeontx_spi.c | 16 +++++++++++-----
 1 file changed, 11 insertions(+), 5 deletions(-)

diff --git a/drivers/spi/octeontx_spi.c b/drivers/spi/octeontx_spi.c
index 8214235f3f..e2404b2170 100644
--- a/drivers/spi/octeontx_spi.c
+++ b/drivers/spi/octeontx_spi.c
@@ -603,7 +603,7 @@ static int octeontx_spi_exec_op(struct spi_slave *slave,
 	unsigned long flags = SPI_XFER_BEGIN;
 	const void *tx;
 	void *rx;
-	u8 buf[8];
+	u8 opcode, *buf;
 	u8 *addr;
 	int i, temp, ret;
 
@@ -612,17 +612,24 @@ static int octeontx_spi_exec_op(struct spi_slave *slave,
 
 	/* Send CMD */
 	i = 0;
-	buf[i++] = op->cmd.opcode;
+	opcode = op->cmd.opcode;
 
 	if (!op->data.nbytes && !op->addr.nbytes && !op->dummy.nbytes)
 		flags |= SPI_XFER_END;
 
-	ret = octeontx_spi_xfer(slave->dev, (i * 8), (void *)&buf, NULL,
+	ret = octeontx_spi_xfer(slave->dev, 8, (void *)&opcode, NULL,
 				flags);
 	if (ret < 0)
 		return ret;
+
 	/* Send Address and dummy */
 	if (op->addr.nbytes) {
+		/* Alloc buffer for address+dummy */
+		buf = (u8 *)calloc(1, op->addr.nbytes + op->dummy.nbytes);
+		if (!buf) {
+			printf("%s Out of memory\n", __func__);
+			return -ENOMEM;
+		}
 		addr = (u8 *)&op->addr.val;
 		for (temp = 0; temp < op->addr.nbytes; temp++)
 			buf[i++] = *(u8 *)(addr + op->addr.nbytes - 1 - temp);
@@ -635,8 +642,7 @@ static int octeontx_spi_exec_op(struct spi_slave *slave,
 
 		if (!op->data.nbytes)
 			flags |= SPI_XFER_END;
-		ret = octeontx_spi_xfer(slave->dev, (i - 1) * 8,
-					(void *)&buf[1], NULL,
+		ret = octeontx_spi_xfer(slave->dev, i * 8, (void *)buf, NULL,
 					flags);
 		if (ret < 0)
 			return ret;
-- 
2.29.0

