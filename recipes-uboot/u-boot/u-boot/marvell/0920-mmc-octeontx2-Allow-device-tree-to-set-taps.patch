From 8102d0cbab80fb0cd5b0acf12f2a69a93231d966 Mon Sep 17 00:00:00 2001
From: aaronw <awilliams@marvell.com>
Date: Thu, 23 May 2019 17:41:22 -0700
Subject: [PATCH 0920/1239] mmc: octeontx2: Allow device tree to set taps

This patch allows the device tree to override the default tap
values for the command and data outputs.  If not set, the
default values are used.

The new fields are:
    marvell,hs200_cmd_out = <10>;
    marvell,hs200_data_out = <10>;
    marvell,hs400_cmd_out = <10>;
    marvell,hs400_data_out = <10>;

These map directly to the MIO_EMM_TIMING register fields.

Change-Id: I61915f5da1a4915cca8b612d872c161b4ddc4a2e
Signed-off-by: aaronw <awilliams@cavium.com>
Reviewed-on: https://sj1git1.cavium.com/9841
Tested-by: sa_ip-sw-jenkins <sa_ip-sw-jenkins@marvell.com>
Reviewed-by: Chandrakala Chavva <cchavva@marvell.com>
---
 drivers/mmc/octeontx_hsmmc.c | 31 +++++++++++++++++++++++++++----
 drivers/mmc/octeontx_hsmmc.h |  6 ++++++
 2 files changed, 33 insertions(+), 4 deletions(-)

diff --git a/drivers/mmc/octeontx_hsmmc.c b/drivers/mmc/octeontx_hsmmc.c
index 079ba87b1c..fea4a9ab2c 100644
--- a/drivers/mmc/octeontx_hsmmc.c
+++ b/drivers/mmc/octeontx_hsmmc.c
@@ -1802,13 +1802,13 @@ static int octeontx_mmc_configure_delay(struct mmc *mmc)
 			case MMC_HS_52:
 			case MMC_DDR_52:
 			case MMC_HS_200:
-				cout = is_board_model(CN95XX) ? 10 : 5;
+				cout = slot->hs200_taps.s.cmd_out_tap;
 				/*cout = 10;*/
-				dout = is_board_model(CN95XX) ? 10 : 5;
+				dout = slot->hs200_taps.s.data_out_tap;
 				break;
 			case MMC_HS_400:
-				cout = is_board_model(CN95XX) ? 10 : 5;
-				dout = is_board_model(CN95XX) ? 10 : 5;
+				cout = slot->hs400_taps.s.cmd_out_tap;
+				dout = slot->hs400_taps.s.data_out_tap;
 				break;
 			default:
 				pr_err("%s(%s): Invalid mode %d\n", __func__,
@@ -2297,6 +2297,29 @@ static int octeontx_mmc_get_config(struct udevice *dev)
 						     "cavium,cmd-clk-skew", 0);
 	slot->dat_clk_skew = ofnode_read_u32_default(node,
 						     "cavium,dat-clk-skew", 0);
+#if !defined(CONFIG_ARCH_OCTEONTX)
+	/* Read the tap value overrides from the DT */
+	slot->hs200_cmd_out_tap_fdt =
+		ofnode_read_bool(node, "marvell,hs200_cmd_out");
+	slot->hs200_taps.s.cmd_out_tap =
+		ofnode_read_u32_default(node, "marvell,hs200_cmd_out",
+					is_board_model(CN95XX) ? 10 : 5);
+	slot->hs200_data_out_tap_fdt =
+		ofnode_read_bool(node, "marvell,hs200_data_out");
+	slot->hs200_taps.s.data_out_tap =
+		ofnode_read_u32_default(node, "marvell,hs200_data_out",
+					is_board_model(CN95XX) ? 10 : 5);
+	slot->hs400_cmd_out_tap_fdt =
+		ofnode_read_bool(node, "marvell,hs400_cmd_out");
+	slot->hs400_taps.s.cmd_out_tap =
+		ofnode_read_u32_default(node, "marvell,hs400_cmd_out",
+					is_board_model(CN95XX) ? 10 : 5);
+	slot->hs400_data_out_tap_fdt =
+		ofnode_read_bool(node, "marvell,hs400_data_out");
+	slot->hs400_taps.s.data_out_tap =
+		ofnode_read_u32_default(node, "marvell,hs400_data_out",
+					is_board_model(CN95XX) ? 10 : 5);
+#endif
 	debug("%s(%s): host caps: 0x%x\n", __func__,
 	      dev->name, slot->cfg.host_caps);
 	return 0;
diff --git a/drivers/mmc/octeontx_hsmmc.h b/drivers/mmc/octeontx_hsmmc.h
index 6c27d909aa..8cb744e4bc 100644
--- a/drivers/mmc/octeontx_hsmmc.h
+++ b/drivers/mmc/octeontx_hsmmc.h
@@ -57,6 +57,8 @@ struct octeontx_mmc_slot {
 	union cavm_mio_emm_switch	want_switch;
 	union cavm_mio_emm_rca		cached_rca;
 	union cavm_mio_emm_timing	taps;	/* otx2: MIO_EMM_TIMING */
+	union cavm_mio_emm_timing	hs200_taps;
+	union cavm_mio_emm_timing	hs400_taps;
 	u32			block_len;
 	u32			block_count;
 	int			cmd_clk_skew;
@@ -78,6 +80,10 @@ struct octeontx_mmc_slot {
 	bool			wp_inverted:1;
 	bool			disable_ddr:1;
 	bool			non_removable:1;
+	bool			hs200_cmd_out_tap_fdt:1;
+	bool			hs200_data_out_tap_fdt:1;
+	bool			hs400_cmd_out_tap_fdt:1;
+	bool			hs400_data_out_tap_fdt:1;
 };
 
 struct octeontx_mmc_cr_mods {
-- 
2.29.0

