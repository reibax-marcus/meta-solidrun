From ef54d26f4c9f373e8e5014750534cccb896b2c75 Mon Sep 17 00:00:00 2001
From: Sergey Temerkhanov <s.temerkhanov@gmail.com>
Date: Thu, 27 Jul 2017 03:30:24 +0300
Subject: [PATCH 0667/1239] ahci: Support wider range of AHCI controllers -
 Support Cavuim AHCI controllers with non-standard BAR number - Use the number
 of ports reported by the controller to determine maximum LUN

Signed-off-by: Sergey Temerkhanov <s.temerkhanov@gmail.com>
---
 drivers/ata/ahci.c | 22 +++++++++++++++++-----
 1 file changed, 17 insertions(+), 5 deletions(-)

diff --git a/drivers/ata/ahci.c b/drivers/ata/ahci.c
index 1abf934761..8d984205d3 100644
--- a/drivers/ata/ahci.c
+++ b/drivers/ata/ahci.c
@@ -429,8 +429,6 @@ static int ahci_init_one(struct ahci_uc_priv *uc_priv, pci_dev_t dev)
 {
 #if !defined(CONFIG_DM_SCSI)
 	u16 vendor;
-#ifdef CONFIG_DM_PCI
-	size_t size;
 #endif
 	int rc;
 
@@ -447,7 +445,7 @@ static int ahci_init_one(struct ahci_uc_priv *uc_priv, pci_dev_t dev)
 #if !defined(CONFIG_DM_SCSI)
 #ifdef CONFIG_DM_PCI
 	uc_priv->mmio_base = dm_pci_map_bar(dev, PCI_BASE_ADDRESS_5,
-					    &size, PCI_REGION_MEM);
+					      PCI_REGION_MEM);
 
 	/* Take from kernel:
 	 * JMicron-specific fixup:
@@ -940,6 +938,8 @@ static int ahci_scsi_exec(struct udevice *dev, struct scsi_cmd *pccb)
 #endif
 	int ret;
 
+	debug("ahci_scsi_exec: CMD %d\n", pccb->cmd[0]);
+
 	switch (pccb->cmd[0]) {
 	case SCSI_READ16:
 	case SCSI_READ10:
@@ -1176,6 +1176,10 @@ int ahci_probe_scsi(struct udevice *ahci_dev, ulong base)
 	ret = ahci_init_one(uc_priv, dev);
 	if (ret)
 		return ret;
+
+	uc_plat->max_lun = 1;
+	uc_plat->max_id = uc_priv->n_ports;
+
 	ret = ahci_start_ports(uc_priv);
 	if (ret)
 		return ret;
@@ -1195,9 +1199,17 @@ int ahci_probe_scsi(struct udevice *ahci_dev, ulong base)
 int ahci_probe_scsi_pci(struct udevice *ahci_dev)
 {
 	ulong base;
+	int bar = 5;
+	size_t size;
+	u16 vendor, device;
+
+	dm_pci_read_config16(ahci_dev, PCI_VENDOR_ID, &vendor);
+	dm_pci_read_config16(ahci_dev, PCI_DEVICE_ID, &device);
 
-	base = (ulong)dm_pci_map_bar(ahci_dev, PCI_BASE_ADDRESS_5,
-				     PCI_REGION_MEM);
+	debug("AHCI device %04x:%04x\n", vendor, device);
+	if ((vendor == 0x177d) && (device == 0xa01c))
+		bar = 0;
+	base = (uintptr_t)dm_pci_map_bar(ahci_dev, bar, &size, PCI_REGION_MEM);
 
 	return ahci_probe_scsi(ahci_dev, base);
 }
-- 
2.29.0

