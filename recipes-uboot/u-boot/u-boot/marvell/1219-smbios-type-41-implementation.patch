From 697bff73a9ef84a00f4de41a901bc69c1ce3abf7 Mon Sep 17 00:00:00 2001
From: Sujeet Baranwal <sbaranwal@marvell.com>
Date: Mon, 27 Jul 2020 11:05:31 -0700
Subject: [PATCH 1219/1239] smbios: type 41 implementation

The information in this structure defines the
attributes of devices that are onboard
(soldered onto) a system element, usually the
baseboard.

Signed-off-by: Sujeet Baranwal <sbaranwal@marvell.com>
Change-Id: Iecfcbb8ce4448d2451332397b52788ec3de9b682
Reviewed-on: https://sj1git1.cavium.com/c/IP/SW/boot/u-boot/+/35171
Reviewed-by: Jia Ma <jiam@marvell.com>
Tested-by: Jia Ma <jiam@marvell.com>
---
 include/smbios.h | 14 ++++++++++++++
 lib/smbios.c     | 33 +++++++++++++++++++++++++++++++++
 2 files changed, 47 insertions(+)

diff --git a/include/smbios.h b/include/smbios.h
index 594770251c..0e4eb361d5 100644
--- a/include/smbios.h
+++ b/include/smbios.h
@@ -46,6 +46,7 @@ enum {
 	SMBIOS_MEMORY_ARRAY_MAPPED_ADDRESS = 19,
 	SMBIOS_MEMORY_DEVICE_MAPPED_ADDRESS = 20,
 	SMBIOS_SYSTEM_BOOT_INFORMATION = 32,
+	SMBIOS_ONBOARD_EVICES_EXTENDED_INFORMATION = 41,
 	SMBIOS_END_OF_TABLE = 127
 };
 
@@ -407,6 +408,19 @@ struct __packed smbios_type20 {
 	char eos[SMBIOS_STRUCT_EOS_BYTES];
 };
 
+struct __packed smbios_type41 {
+	u8 type;
+	u8 length;
+	u16 handle;
+	u8 reference_designation;
+	u8 device_type;
+	u8 device_type_instance;
+	u16 segment_group_number;
+	u8 bus_number;
+	u8 device_function_number;
+	char eos[SMBIOS_STRUCT_EOS_BYTES];
+};
+
 struct __packed smbios_type32 {
 	u8 type;
 	u8 length;
diff --git a/lib/smbios.c b/lib/smbios.c
index 1e237e9aaa..0e6324c36f 100644
--- a/lib/smbios.c
+++ b/lib/smbios.c
@@ -556,6 +556,38 @@ static int smbios_write_type20(ulong *current, int handle)
 	return len;
 }
 
+static int smbios_write_type41_dm(ulong *current, int handle, int index)
+{
+	struct smbios_type41 *t;
+	int len = sizeof(struct smbios_type41);
+
+	t = map_sysmem(*current, len);
+	memset(t, 0, sizeof(struct smbios_type41));
+	fill_smbios_header(t, SMBIOS_ONBOARD_EVICES_EXTENDED_INFORMATION, len, handle + index);
+
+	/* Data to be filled by OEM */
+	/* ...
+	 * ...
+	 * ...
+	 */
+
+	len = t->length + smbios_string_table_len(t->eos);
+	*current += len;
+	unmap_sysmem(t);
+
+	return len;
+}
+
+static int smbios_write_type41(ulong *current, int handle)
+{
+	u32 no_of_handles = MAX_MEMORY_MAPPED_DEV, i = 0, len = 0;
+
+	for (; i < no_of_handles; i++)
+		len += smbios_write_type41_dm(current, handle, i);
+
+	return len;
+}
+
 static int smbios_write_type32(ulong *current, int handle)
 {
 	struct smbios_type32 *t;
@@ -600,6 +632,7 @@ static smbios_write_type smbios_write_funcs[] = {
 	smbios_write_type17,
 	smbios_write_type19,
 	smbios_write_type20,
+	smbios_write_type41,
 	smbios_write_type32,
 	smbios_write_type127
 };
-- 
2.29.0

