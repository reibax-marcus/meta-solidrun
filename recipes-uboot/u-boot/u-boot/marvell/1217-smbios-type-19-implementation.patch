From 78e74a3175d51f2d84a2b7525600ada30042ac2b Mon Sep 17 00:00:00 2001
From: Sujeet Baranwal <sbaranwal@marvell.com>
Date: Mon, 27 Jul 2020 10:56:25 -0700
Subject: [PATCH 1217/1239] smbios: type 19 implementation

This structure provides the address mapping for a
Physical Memory Array.

Signed-off-by: Sujeet Baranwal <sbaranwal@marvell.com>
Change-Id: I49c091e0d9617474737e2d9ce710168d77c6dfa7
Reviewed-on: https://sj1git1.cavium.com/c/IP/SW/boot/u-boot/+/35169
Tested-by: Jia Ma <jiam@marvell.com>
Reviewed-by: Jia Ma <jiam@marvell.com>
---
 include/smbios.h | 14 ++++++++++++++
 lib/smbios.c     | 33 +++++++++++++++++++++++++++++++++
 2 files changed, 47 insertions(+)

diff --git a/include/smbios.h b/include/smbios.h
index 5286e18f74..566db65be8 100644
--- a/include/smbios.h
+++ b/include/smbios.h
@@ -27,6 +27,7 @@ enum {
 #define MAX_PORTS 3
 #define MAX_SLOTS 2
 #define MAX_MEMORY_DEV 1
+#define MAX_MEMORY_ARRAY 1
 
 /* SMBIOS structure types */
 enum {
@@ -375,6 +376,19 @@ struct __packed smbios_type17 {
 	char eos[SMBIOS_STRUCT_EOS_BYTES];
 };
 
+struct __packed smbios_type19 {
+	u8 type;
+	u8 length;
+	u16 handle;
+	u32 starting_address;
+	u32 ending_address;
+	u16 memory_array_handle;
+	u8 partition_width;
+	u64 extended_starting_address;
+	u64 extended_ending_address;
+	char eos[SMBIOS_STRUCT_EOS_BYTES];
+};
+
 struct __packed smbios_type32 {
 	u8 type;
 	u8 length;
diff --git a/lib/smbios.c b/lib/smbios.c
index 7acb7cbbb7..c5778fa438 100644
--- a/lib/smbios.c
+++ b/lib/smbios.c
@@ -492,6 +492,38 @@ static int smbios_write_type17(ulong *current, int handle)
 	return len;
 }
 
+static int smbios_write_type19_dm(ulong *current, int handle, int index)
+{
+	struct smbios_type19 *t;
+	int len = sizeof(struct smbios_type19);
+
+	t = map_sysmem(*current, len);
+	memset(t, 0, sizeof(struct smbios_type19));
+	fill_smbios_header(t, SMBIOS_MEMORY_ARRAY_MAPPED_ADDRESS, len, handle + index);
+
+	/* Data to be filled by OEM */
+	/* ...
+	 * ...
+	 * ...
+	 */
+
+	len = t->length + smbios_string_table_len(t->eos);
+	*current += len;
+	unmap_sysmem(t);
+
+	return len;
+}
+
+static int smbios_write_type19(ulong *current, int handle)
+{
+	u32 no_of_handles = MAX_MEMORY_ARRAY, i = 0, len = 0;
+
+	for (; i < no_of_handles; i++)
+		len += smbios_write_type19_dm(current, handle, i);
+
+	return len;
+}
+
 static int smbios_write_type32(ulong *current, int handle)
 {
 	struct smbios_type32 *t;
@@ -534,6 +566,7 @@ static smbios_write_type smbios_write_funcs[] = {
 	smbios_write_type13,
 	smbios_write_type16,
 	smbios_write_type17,
+	smbios_write_type19,
 	smbios_write_type32,
 	smbios_write_type127
 };
-- 
2.29.0

