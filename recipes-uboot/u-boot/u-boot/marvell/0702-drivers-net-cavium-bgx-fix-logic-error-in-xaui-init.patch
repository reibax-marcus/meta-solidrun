From 928ac42263139bb5249aa4f62fe3f97790dda7af Mon Sep 17 00:00:00 2001
From: Suneel Garapati <sgarapati@caviumnetworks.com>
Date: Tue, 5 Sep 2017 15:46:35 -0700
Subject: [PATCH 0702/1239] drivers: net: cavium bgx: fix logic error in xaui
 init

This helps in proper setting of mode ability bits in SPUX_AN_ADV
register, which helps fixing link up issue with 10G-KR.

Signed-off-by: Suneel Garapati <sgarapati@caviumnetworks.com>
---
 drivers/net/cavium/thunder_bgx.c | 5 ++---
 1 file changed, 2 insertions(+), 3 deletions(-)

diff --git a/drivers/net/cavium/thunder_bgx.c b/drivers/net/cavium/thunder_bgx.c
index 98a61dd9af..f06e878093 100644
--- a/drivers/net/cavium/thunder_bgx.c
+++ b/drivers/net/cavium/thunder_bgx.c
@@ -509,13 +509,11 @@ static int bgx_lmac_xaui_init(struct bgx *bgx, int lmacid, int lmac_type)
 
 	cfg = bgx_reg_read(bgx, lmacid, BGX_SPUX_AN_ADV);
 	/* Clear all KR bits, configure according to the mode */
-	cfg &= ~((0xfULL << 22) || (1ULL << 12));
+	cfg &= ~((0xfULL << 22) | (1ULL << 12));
 	if (lmac->qlm_mode == QLM_MODE_10G_KR)
 		cfg |= (1 << 23);
 	else if (lmac->qlm_mode == QLM_MODE_40G_KR4)
 		cfg |= (1 << 24);
-	else
-		cfg &= ~((1 << 23) | (1 << 24));
 	bgx_reg_write(bgx, lmacid, BGX_SPUX_AN_ADV, cfg);
 
 	cfg = bgx_reg_read(bgx, 0, BGX_SPU_DBG_CONTROL);
@@ -657,6 +655,7 @@ static int bgx_xaui_check_link(struct lmac *lmac)
 		}
 	}
 
+	debug("%s link use_training %d\n",__func__, lmac->use_training);
 	if (lmac->use_training) {
 		cfg = bgx_reg_read(bgx, lmacid, BGX_SPUX_INT);
 		if (!(cfg & (1ull << 13))) {
-- 
2.29.0

