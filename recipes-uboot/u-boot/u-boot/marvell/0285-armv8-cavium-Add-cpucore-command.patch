From f5eae33210605a80547f5b1747216d1bbd6823d5 Mon Sep 17 00:00:00 2001
From: Sergey Temerkhanov <sergey.temerkhanov@auriga.com>
Date: Fri, 13 Mar 2015 18:01:39 +0300
Subject: [PATCH 0285/1239] armv8: cavium: Add "cpucore" command

---
 board/cavium/thunderx/Makefile   |   1 +
 board/cavium/thunderx/fdt.c      | 145 +++++++++++++++++++++++++++++++
 board/cavium/thunderx/thunderx.c |  10 ++-
 3 files changed, 155 insertions(+), 1 deletion(-)
 create mode 100644 board/cavium/thunderx/fdt.c

diff --git a/board/cavium/thunderx/Makefile b/board/cavium/thunderx/Makefile
index 4088c7678d..828dcf6793 100644
--- a/board/cavium/thunderx/Makefile
+++ b/board/cavium/thunderx/Makefile
@@ -4,3 +4,4 @@
 #
 
 obj-y	:= thunderx.o atf.o
+obj-$(CONFIG_OF_LIBFDT) += fdt.o
diff --git a/board/cavium/thunderx/fdt.c b/board/cavium/thunderx/fdt.c
new file mode 100644
index 0000000000..35cf5b8d35
--- /dev/null
+++ b/board/cavium/thunderx/fdt.c
@@ -0,0 +1,145 @@
+/**
+ * (C) Copyright 2014, Cavium Inc.
+ *
+ * SPDX-License-Identifier:	GPL-2.0+
+**/
+
+#include <common.h>
+#include <malloc.h>
+#include <errno.h>
+#include <linux/compiler.h>
+
+#ifdef CONFIG_OF_LIBFDT
+ #include <libfdt.h>
+ #include <fdt_support.h>
+#endif
+
+#if defined(CONFIG_OF_LIBFDT)
+
+#if defined(CONFIG_OF_BOARD_SETUP)
+void ft_board_setup(void *blob, bd_t *bd)
+{
+	int err;
+
+	int nodeoffset = fdt_path_offset(blob, "/cpus");
+	char *coremask = getenv("coremask");
+
+	if (coremask == NULL)
+		return;
+
+	if (nodeoffset < 0) {
+		printf("WARNING: could not find /cpus: %s.\n",
+		       fdt_strerror(nodeoffset));
+		return;
+	}
+
+	err = fdt_setprop(blob, nodeoffset, "coremask",
+			  coremask, sizeof(coremask));
+
+	if (err < 0) {
+		printf("WARNING: could not set %s: %s.\n", "coremask",
+		       fdt_strerror(err));
+		return;
+	}
+}
+
+#endif
+
+#define NODENAME_BUFLEN 32
+
+int ft_getcore(void *blob, char *id)
+{
+	int nodeoffset;
+	char nodename[NODENAME_BUFLEN];
+
+	snprintf(nodename, sizeof(nodename), "/cpus/cpu@%s", id);
+
+	nodeoffset = fdt_path_offset(blob, nodename);
+
+	if (nodeoffset < 0) {
+		printf("WARNING: could not find %s: %s.\n", nodename,
+		       fdt_strerror(nodeoffset));
+	}
+
+	return nodeoffset;
+}
+
+void ft_coreenable(bd_t *bd, char *id, int enable)
+{
+	int err;
+	void *blob = working_fdt;
+
+	int nodeoffset = ft_getcore(blob, id);
+
+	if (nodeoffset < 0)
+		return;
+
+	err = fdt_setprop_u32(blob, nodeoffset, "enabled", enable);
+
+	if (err < 0) {
+		printf("WARNING: could not set %s: %s.\n", "enabled",
+		       fdt_strerror(err));
+		return;
+	}
+}
+
+int ft_corestatus(bd_t *bd, char *id)
+{
+	const u32 *enabled;
+	void *blob = working_fdt;
+
+	int nodeoffset = ft_getcore(blob, id);
+
+	if (nodeoffset < 0)
+		return -1;
+
+	enabled = fdt_getprop(blob, nodeoffset, "enabled", NULL);
+
+	if (enabled == NULL)
+		return 1;
+	else
+		return *enabled;
+}
+
+static int parse_argv(const char *s)
+{
+	if (strncmp(s, "en", 2) == 0)
+		return 1;
+	else if (strncmp(s, "di", 2) == 0)
+		return 0;
+
+	return -1;
+}
+
+int do_cpucore(cmd_tbl_t *cmdtp, int flag, int argc, char * const argv[])
+{
+	int enable;
+
+	switch (argc) {
+	case 3:			/* enable / disable	*/
+		enable = parse_argv(argv[2]);
+
+		if (enable < 0)
+			return CMD_RET_USAGE;
+		else
+			ft_coreenable(NULL, argv[1], enable);
+
+		break;
+	case 2:			/* get status */
+		printf("CPU Core %s is %s\n", argv[1],
+		       ft_corestatus(NULL, argv[1]) ? "ENABLED" : "DISABLED");
+		return 0;
+	default:
+		return CMD_RET_USAGE;
+	}
+	return 0;
+}
+
+U_BOOT_CMD(
+	cpucore,   3,   1,     do_cpucore,
+	"enable or disable a CPU core",
+	"id [enable, disable]\n"
+	"    - enable or disable a CPU core"
+);
+
+#endif
diff --git a/board/cavium/thunderx/thunderx.c b/board/cavium/thunderx/thunderx.c
index cf55b633c3..dba5eadef1 100644
--- a/board/cavium/thunderx/thunderx.c
+++ b/board/cavium/thunderx/thunderx.c
@@ -9,6 +9,10 @@
 #include <errno.h>
 #include <linux/compiler.h>
 
+#ifdef CONFIG_OF_LIBFDT
+ #include <libfdt.h>
+ #include <fdt_support.h>
+#endif
 #include <cavium/atf.h>
 #include <asm/armv8/mmu.h>
 
@@ -38,7 +42,6 @@ U_BOOT_DEVICE(thunderx_serial1) = {
 	.name = "serial_pl01x",
 	.platdata = &serial1,
 };
-#endif
 
 DECLARE_GLOBAL_DATA_PTR;
 
@@ -70,6 +73,11 @@ struct mm_region *mem_map = thunderx_mem_map;
 
 int board_init(void)
 {
+#ifdef CONFIG_OF_LIBFDT
+	ulong fdt_addr = (ulong)gd->fdt_blob;
+	set_working_fdt_addr(fdt_addr);
+#endif
+
 	return 0;
 }
 
-- 
2.29.0

