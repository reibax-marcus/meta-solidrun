From af0a25df5a92180c8ee4d642718cb2967a5b3de3 Mon Sep 17 00:00:00 2001
From: selvam venkatachalam <selvamv@marvell.com>
Date: Thu, 9 Jul 2020 17:12:09 -0400
Subject: [PATCH 1191/1239] U-boot will use SMC calls for SERDES diags

with this change uboot will use the SMC call for SERDES diags.
support for cgx calls to do SERDES diags is removed.

Change-Id: If8e52a125fbd3335bc4f4f49cc50c31f5c4ecb75
Reviewed-on: https://sj1git1.cavium.com/c/IP/SW/boot/u-boot/+/31717
Tested-by: Chandrakala Chavva <cchavva@marvell.com>
Reviewed-by: Chandrakala Chavva <cchavva@marvell.com>
---
 arch/arm/include/asm/arch-octeontx2/smc-id.h |  5 ++
 cmd/marvell/octeontx2_qlm_cmds.c             | 75 +++++++++++++++++---
 2 files changed, 72 insertions(+), 8 deletions(-)

diff --git a/arch/arm/include/asm/arch-octeontx2/smc-id.h b/arch/arm/include/asm/arch-octeontx2/smc-id.h
index c7f9fa73fc..e4b86fb7bd 100644
--- a/arch/arm/include/asm/arch-octeontx2/smc-id.h
+++ b/arch/arm/include/asm/arch-octeontx2/smc-id.h
@@ -38,4 +38,9 @@
 #define OCTEONTX_ATTESTATION_QUERY_SUBCMD_BUFFER 1
 #define OCTEONTX_ATTESTATION_QUERY_SUBCMD_INFO   2
 
+#define OCTEONTX_SERDES_DBG_GET_EYE     0xc2000d05
+#define OCTEONTX_SERDES_DBG_GET_CONF    0xc2000d06
+#define OCTEONTX_SERDES_DBG_PRBS        0xc2000d07
+
+
 #endif /* __SMC_ID_H__ */
diff --git a/cmd/marvell/octeontx2_qlm_cmds.c b/cmd/marvell/octeontx2_qlm_cmds.c
index caa40abcbf..3d29a20b76 100644
--- a/cmd/marvell/octeontx2_qlm_cmds.c
+++ b/cmd/marvell/octeontx2_qlm_cmds.c
@@ -4,20 +4,39 @@
  *
  * Copyright (C) 2019 Marvell International Ltd.
  */
-
+#include <asm/psci.h>
 #include <common.h>
 #include <command.h>
+#include <linux/arm-smccc.h>
+#include <linux/compiler.h>
+#include <linux/psci.h>
+#include <asm/arch/smc.h>
+
+enum cgx_prbs_cmd {
+        CGX_PRBS_START_CMD = 1,
+        CGX_PRBS_STOP_CMD,
+        CGX_PRBS_GET_DATA_CMD
+};
+
+#define SMCCC_RET_PENDING 1
 
-extern int cgx_intf_prbs(u8 qlm, u8 mode, u32 time, u32 lane);
-extern int cgx_intf_display_eye(u8 qlm, u8 lane);
-extern int cgx_intf_display_serdes(u8 qlm, u8 lane);
+static void waitforresult(struct arm_smccc_res *res)
+{
+	int fdelay = 1000;
+	while (fdelay && (res->a0 == SMCCC_RET_PENDING)) {
+		mdelay(100);
+		fdelay = fdelay - 100;
+	}
+}
 
 static int do_prbs(cmd_tbl_t *cmdtp, int flag, int argc, char * const argv[])
 {
-	ulong time;
+	struct arm_smccc_res res;
+	long time;
 	ulong mode;
 	ulong qlm;
 	ulong lane;
+	ulong delay;
 
 	if (argc == 5) {
 		qlm = simple_strtoul(argv[1], NULL, 10);
@@ -28,8 +47,38 @@ static int do_prbs(cmd_tbl_t *cmdtp, int flag, int argc, char * const argv[])
 		return CMD_RET_USAGE;
 	}
 
-	cgx_intf_prbs(qlm, mode, time, lane);
+	arm_smccc_smc(OCTEONTX_SERDES_DBG_PRBS, CGX_PRBS_START_CMD, qlm, mode, lane, 0, 0, 0, &res);
 
+	waitforresult(&res);
+	if (res.a0 != SMCCC_RET_SUCCESS) {
+		return CMD_RET_FAILURE;
+	}
+
+	while(time > 0)
+	{
+		if(time > 5) {
+			delay = 5;
+			time = time - 5;
+		}
+		else {
+			delay = time;
+			time  = 0;
+		}
+		mdelay(delay * 1000);
+		arm_smccc_smc(OCTEONTX_SERDES_DBG_PRBS, CGX_PRBS_GET_DATA_CMD, qlm, 1, lane, 0, 0, 0, &res);
+		waitforresult(&res);
+
+		if (res.a0 != SMCCC_RET_SUCCESS) {
+			return CMD_RET_FAILURE;
+		}
+	}
+
+	arm_smccc_smc(OCTEONTX_SERDES_DBG_PRBS, CGX_PRBS_STOP_CMD, qlm, mode, lane, 0, 0, 0, &res);
+	waitforresult(&res);
+
+	if (res.a0 != SMCCC_RET_SUCCESS) {
+		return CMD_RET_FAILURE;
+	}
 	return CMD_RET_SUCCESS;
 }
 
@@ -43,6 +92,7 @@ U_BOOT_CMD(prbs,    5,    1,     do_prbs,
 
 static int do_eye(cmd_tbl_t *cmdtp, int flag, int argc, char * const argv[])
 {
+	struct arm_smccc_res res;
 	ulong lane;
 	ulong qlm;
 
@@ -52,8 +102,12 @@ static int do_eye(cmd_tbl_t *cmdtp, int flag, int argc, char * const argv[])
 	qlm = simple_strtoul(argv[1], NULL, 10);
 	lane = simple_strtoul(argv[2], NULL, 10);
 
-	cgx_intf_display_eye(qlm, lane);
+	arm_smccc_smc(OCTEONTX_SERDES_DBG_GET_EYE, qlm, lane, 1, 0, 0, 0, 0, &res);
+	waitforresult(&res);
 
+        if (res.a0 != SMCCC_RET_SUCCESS) {
+                return CMD_RET_FAILURE;
+        }
 	return CMD_RET_SUCCESS;
 }
 
@@ -65,6 +119,7 @@ U_BOOT_CMD(eye,    3,    1,     do_eye,
 
 static int do_serdes(cmd_tbl_t *cmdtp, int flag, int argc, char * const argv[])
 {
+	struct arm_smccc_res res;
 	ulong lane;
 	ulong qlm;
 
@@ -74,8 +129,12 @@ static int do_serdes(cmd_tbl_t *cmdtp, int flag, int argc, char * const argv[])
 	qlm = simple_strtoul(argv[1], NULL, 10);
 	lane = simple_strtoul(argv[2], NULL, 10);
 
-	cgx_intf_display_serdes(qlm, lane);
+	arm_smccc_smc(OCTEONTX_SERDES_DBG_GET_EYE, qlm, lane, 1, 0, 0, 0, 0, &res);
+	waitforresult(&res);
 
+        if (res.a0 != SMCCC_RET_SUCCESS) {
+                return CMD_RET_FAILURE;
+        }
 	return CMD_RET_SUCCESS;
 }
 
-- 
2.29.0

