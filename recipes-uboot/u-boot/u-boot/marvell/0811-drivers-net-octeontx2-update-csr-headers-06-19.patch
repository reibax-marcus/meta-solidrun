From 0bd2bf5628b15e63f3f131b0a98781973a5d1b86 Mon Sep 17 00:00:00 2001
From: Suneel Garapati <sgarapati@caviumnetworks.com>
Date: Thu, 21 Jun 2018 18:33:01 -0700
Subject: [PATCH 0811/1239] drivers: net: octeontx2: update csr headers 06/19

Signed-off-by: Suneel Garapati <sgarapati@caviumnetworks.com>
---
 drivers/net/cavium/octeontx2/cavm-csrs-cgx.h | 1088 +++---------
 drivers/net/cavium/octeontx2/cavm-csrs-lmt.h |    8 +-
 drivers/net/cavium/octeontx2/cavm-csrs-nix.h | 1681 +++++++-----------
 drivers/net/cavium/octeontx2/cavm-csrs-npa.h |  339 +---
 drivers/net/cavium/octeontx2/cavm-csrs-npc.h |  208 +--
 drivers/net/cavium/octeontx2/cavm-csrs-rvu.h |  380 ++--
 6 files changed, 1141 insertions(+), 2563 deletions(-)

diff --git a/drivers/net/cavium/octeontx2/cavm-csrs-cgx.h b/drivers/net/cavium/octeontx2/cavm-csrs-cgx.h
index 15842ae65e..d48e5fd56b 100644
--- a/drivers/net/cavium/octeontx2/cavm-csrs-cgx.h
+++ b/drivers/net/cavium/octeontx2/cavm-csrs-cgx.h
@@ -328,9 +328,7 @@ static inline u64 CAVM_CGXX_ACTIVE_PC(void)
 	__attribute__ ((pure, always_inline));
 static inline u64 CAVM_CGXX_ACTIVE_PC(void)
 {
-	if (CAVIUM_IS_MODEL(CAVIUM_CN9XXX))
-		return 0x2010;
-	return -1;
+	return 0x2010;
 }
 
 /**
@@ -356,9 +354,7 @@ static inline u64 CAVM_CGXX_CMRX_ACTIVITY(u64 a)
 	__attribute__ ((pure, always_inline));
 static inline u64 CAVM_CGXX_CMRX_ACTIVITY(u64 a)
 {
-	if (CAVIUM_IS_MODEL(CAVIUM_CN9XXX) && (a <= 3))
-		return 0x5f8 + 0x40000 * ((a) & 0x3);
-	return -1;
+	return 0x5f8 + 0x40000 * a;
 }
 
 /**
@@ -454,9 +450,7 @@ static inline u64 CAVM_CGXX_CMRX_CONFIG(u64 a)
 	__attribute__ ((pure, always_inline));
 static inline u64 CAVM_CGXX_CMRX_CONFIG(u64 a)
 {
-	if (CAVIUM_IS_MODEL(CAVIUM_CN9XXX) && (a <= 3))
-		return 0 + 0x40000 * ((a) & 0x3);
-	return -1;
+	return 0 + 0x40000 * a;
 }
 
 /**
@@ -483,9 +477,7 @@ static inline u64 CAVM_CGXX_CMRX_INT(u64 a)
 	__attribute__ ((pure, always_inline));
 static inline u64 CAVM_CGXX_CMRX_INT(u64 a)
 {
-	if (CAVIUM_IS_MODEL(CAVIUM_CN9XXX) && (a <= 3))
-		return 0x40 + 0x40000 * ((a) & 0x3);
-	return -1;
+	return 0x40 + 0x40000 * a;
 }
 
 /**
@@ -513,9 +505,7 @@ static inline u64 CAVM_CGXX_CMRX_INT_ENA_W1C(u64 a)
 	__attribute__ ((pure, always_inline));
 static inline u64 CAVM_CGXX_CMRX_INT_ENA_W1C(u64 a)
 {
-	if (CAVIUM_IS_MODEL(CAVIUM_CN9XXX) && (a <= 3))
-		return 0x50 + 0x40000 * ((a) & 0x3);
-	return -1;
+	return 0x50 + 0x40000 * a;
 }
 
 /**
@@ -543,9 +533,7 @@ static inline u64 CAVM_CGXX_CMRX_INT_ENA_W1S(u64 a)
 	__attribute__ ((pure, always_inline));
 static inline u64 CAVM_CGXX_CMRX_INT_ENA_W1S(u64 a)
 {
-	if (CAVIUM_IS_MODEL(CAVIUM_CN9XXX) && (a <= 3))
-		return 0x58 + 0x40000 * ((a) & 0x3);
-	return -1;
+	return 0x58 + 0x40000 * a;
 }
 
 /**
@@ -573,9 +561,7 @@ static inline u64 CAVM_CGXX_CMRX_INT_W1S(u64 a)
 	__attribute__ ((pure, always_inline));
 static inline u64 CAVM_CGXX_CMRX_INT_W1S(u64 a)
 {
-	if (CAVIUM_IS_MODEL(CAVIUM_CN9XXX) && (a <= 3))
-		return 0x48 + 0x40000 * ((a) & 0x3);
-	return -1;
+	return 0x48 + 0x40000 * a;
 }
 
 /**
@@ -596,9 +582,7 @@ static inline u64 CAVM_CGXX_CMRX_LED_TIMING(u64 a)
 	__attribute__ ((pure, always_inline));
 static inline u64 CAVM_CGXX_CMRX_LED_TIMING(u64 a)
 {
-	if (CAVIUM_IS_MODEL(CAVIUM_CN9XXX) && (a <= 3))
-		return 0x5f0 + 0x40000 * ((a) & 0x3);
-	return -1;
+	return 0x5f0 + 0x40000 * a;
 }
 
 /**
@@ -621,9 +605,7 @@ static inline u64 CAVM_CGXX_CMRX_PRT_CBFC_CTL(u64 a)
 	__attribute__ ((pure, always_inline));
 static inline u64 CAVM_CGXX_CMRX_PRT_CBFC_CTL(u64 a)
 {
-	if (CAVIUM_IS_MODEL(CAVIUM_CN9XXX) && (a <= 3))
-		return 0x608 + 0x40000 * ((a) & 0x3);
-	return -1;
+	return 0x608 + 0x40000 * a;
 }
 
 /**
@@ -644,9 +626,7 @@ static inline u64 CAVM_CGXX_CMRX_RX_BP_DROP(u64 a)
 	__attribute__ ((pure, always_inline));
 static inline u64 CAVM_CGXX_CMRX_RX_BP_DROP(u64 a)
 {
-	if (CAVIUM_IS_MODEL(CAVIUM_CN9XXX) && (a <= 3))
-		return 0xd8 + 0x40000 * ((a) & 0x3);
-	return -1;
+	return 0xd8 + 0x40000 * a;
 }
 
 /**
@@ -667,9 +647,7 @@ static inline u64 CAVM_CGXX_CMRX_RX_BP_OFF(u64 a)
 	__attribute__ ((pure, always_inline));
 static inline u64 CAVM_CGXX_CMRX_RX_BP_OFF(u64 a)
 {
-	if (CAVIUM_IS_MODEL(CAVIUM_CN9XXX) && (a <= 3))
-		return 0xe8 + 0x40000 * ((a) & 0x3);
-	return -1;
+	return 0xe8 + 0x40000 * a;
 }
 
 /**
@@ -690,9 +668,7 @@ static inline u64 CAVM_CGXX_CMRX_RX_BP_ON(u64 a)
 	__attribute__ ((pure, always_inline));
 static inline u64 CAVM_CGXX_CMRX_RX_BP_ON(u64 a)
 {
-	if (CAVIUM_IS_MODEL(CAVIUM_CN9XXX) && (a <= 3))
-		return 0xe0 + 0x40000 * ((a) & 0x3);
-	return -1;
+	return 0xe0 + 0x40000 * a;
 }
 
 /**
@@ -713,9 +689,7 @@ static inline u64 CAVM_CGXX_CMRX_RX_BP_STATUS(u64 a)
 	__attribute__ ((pure, always_inline));
 static inline u64 CAVM_CGXX_CMRX_RX_BP_STATUS(u64 a)
 {
-	if (CAVIUM_IS_MODEL(CAVIUM_CN9XXX) && (a <= 3))
-		return 0xf0 + 0x40000 * ((a) & 0x3);
-	return -1;
+	return 0xf0 + 0x40000 * a;
 }
 
 /**
@@ -771,9 +745,7 @@ static inline u64 CAVM_CGXX_CMRX_RX_DMAC_CTL0(u64 a)
 	__attribute__ ((pure, always_inline));
 static inline u64 CAVM_CGXX_CMRX_RX_DMAC_CTL0(u64 a)
 {
-	if (CAVIUM_IS_MODEL(CAVIUM_CN9XXX) && (a <= 3))
-		return 0x1f8 + 0x40000 * ((a) & 0x3);
-	return -1;
+	return 0x1f8 + 0x40000 * a;
 }
 
 /**
@@ -804,9 +776,7 @@ static inline u64 CAVM_CGXX_CMRX_RX_DMAC_CTL1(u64 a)
 	__attribute__ ((pure, always_inline));
 static inline u64 CAVM_CGXX_CMRX_RX_DMAC_CTL1(u64 a)
 {
-	if (CAVIUM_IS_MODEL(CAVIUM_CN9XXX) && (a <= 3))
-		return 0x3f8 + 0x40000 * ((a) & 0x3);
-	return -1;
+	return 0x3f8 + 0x40000 * a;
 }
 
 /**
@@ -830,9 +800,7 @@ static inline u64 CAVM_CGXX_CMRX_RX_FIFO_LEN(u64 a)
 	__attribute__ ((pure, always_inline));
 static inline u64 CAVM_CGXX_CMRX_RX_FIFO_LEN(u64 a)
 {
-	if (CAVIUM_IS_MODEL(CAVIUM_CN9XXX) && (a <= 3))
-		return 0x108 + 0x40000 * ((a) & 0x3);
-	return -1;
+	return 0x108 + 0x40000 * a;
 }
 
 /**
@@ -856,9 +824,7 @@ static inline u64 CAVM_CGXX_CMRX_RX_ID_MAP(u64 a)
 	__attribute__ ((pure, always_inline));
 static inline u64 CAVM_CGXX_CMRX_RX_ID_MAP(u64 a)
 {
-	if (CAVIUM_IS_MODEL(CAVIUM_CN9XXX) && (a <= 3))
-		return 0x60 + 0x40000 * ((a) & 0x3);
-	return -1;
+	return 0x60 + 0x40000 * a;
 }
 
 /**
@@ -879,9 +845,7 @@ static inline u64 CAVM_CGXX_CMRX_RX_LOGL_XOFF(u64 a)
 	__attribute__ ((pure, always_inline));
 static inline u64 CAVM_CGXX_CMRX_RX_LOGL_XOFF(u64 a)
 {
-	if (CAVIUM_IS_MODEL(CAVIUM_CN9XXX) && (a <= 3))
-		return 0xf8 + 0x40000 * ((a) & 0x3);
-	return -1;
+	return 0xf8 + 0x40000 * a;
 }
 
 /**
@@ -902,9 +866,7 @@ static inline u64 CAVM_CGXX_CMRX_RX_LOGL_XON(u64 a)
 	__attribute__ ((pure, always_inline));
 static inline u64 CAVM_CGXX_CMRX_RX_LOGL_XON(u64 a)
 {
-	if (CAVIUM_IS_MODEL(CAVIUM_CN9XXX) && (a <= 3))
-		return 0x100 + 0x40000 * ((a) & 0x3);
-	return -1;
+	return 0x100 + 0x40000 * a;
 }
 
 /**
@@ -925,9 +887,7 @@ static inline u64 CAVM_CGXX_CMRX_RX_MERGE_STAT0(u64 a)
 	__attribute__ ((pure, always_inline));
 static inline u64 CAVM_CGXX_CMRX_RX_MERGE_STAT0(u64 a)
 {
-	if (CAVIUM_IS_MODEL(CAVIUM_CN9XXX) && (a <= 3))
-		return 0x138 + 0x40000 * ((a) & 0x3);
-	return -1;
+	return 0x138 + 0x40000 * a;
 }
 
 /**
@@ -948,9 +908,7 @@ static inline u64 CAVM_CGXX_CMRX_RX_MERGE_STAT1(u64 a)
 	__attribute__ ((pure, always_inline));
 static inline u64 CAVM_CGXX_CMRX_RX_MERGE_STAT1(u64 a)
 {
-	if (CAVIUM_IS_MODEL(CAVIUM_CN9XXX) && (a <= 3))
-		return 0x140 + 0x40000 * ((a) & 0x3);
-	return -1;
+	return 0x140 + 0x40000 * a;
 }
 
 /**
@@ -971,9 +929,7 @@ static inline u64 CAVM_CGXX_CMRX_RX_MERGE_STAT2(u64 a)
 	__attribute__ ((pure, always_inline));
 static inline u64 CAVM_CGXX_CMRX_RX_MERGE_STAT2(u64 a)
 {
-	if (CAVIUM_IS_MODEL(CAVIUM_CN9XXX) && (a <= 3))
-		return 0x148 + 0x40000 * ((a) & 0x3);
-	return -1;
+	return 0x148 + 0x40000 * a;
 }
 
 /**
@@ -994,9 +950,7 @@ static inline u64 CAVM_CGXX_CMRX_RX_MERGE_STAT3(u64 a)
 	__attribute__ ((pure, always_inline));
 static inline u64 CAVM_CGXX_CMRX_RX_MERGE_STAT3(u64 a)
 {
-	if (CAVIUM_IS_MODEL(CAVIUM_CN9XXX) && (a <= 3))
-		return 0x150 + 0x40000 * ((a) & 0x3);
-	return -1;
+	return 0x150 + 0x40000 * a;
 }
 
 /**
@@ -1017,9 +971,7 @@ static inline u64 CAVM_CGXX_CMRX_RX_MERGE_STAT4(u64 a)
 	__attribute__ ((pure, always_inline));
 static inline u64 CAVM_CGXX_CMRX_RX_MERGE_STAT4(u64 a)
 {
-	if (CAVIUM_IS_MODEL(CAVIUM_CN9XXX) && (a <= 3))
-		return 0x158 + 0x40000 * ((a) & 0x3);
-	return -1;
+	return 0x158 + 0x40000 * a;
 }
 
 /**
@@ -1041,9 +993,7 @@ static inline u64 CAVM_CGXX_CMRX_RX_PAUSE_DROP_TIME(u64 a)
 	__attribute__ ((pure, always_inline));
 static inline u64 CAVM_CGXX_CMRX_RX_PAUSE_DROP_TIME(u64 a)
 {
-	if (CAVIUM_IS_MODEL(CAVIUM_CN9XXX) && (a <= 3))
-		return 0x68 + 0x40000 * ((a) & 0x3);
-	return -1;
+	return 0x68 + 0x40000 * a;
 }
 
 /**
@@ -1085,9 +1035,7 @@ static inline u64 CAVM_CGXX_CMRX_RX_STAT0(u64 a)
 	__attribute__ ((pure, always_inline));
 static inline u64 CAVM_CGXX_CMRX_RX_STAT0(u64 a)
 {
-	if (CAVIUM_IS_MODEL(CAVIUM_CN9XXX) && (a <= 3))
-		return 0x70 + 0x40000 * ((a) & 0x3);
-	return -1;
+	return 0x70 + 0x40000 * a;
 }
 
 /**
@@ -1109,9 +1057,7 @@ static inline u64 CAVM_CGXX_CMRX_RX_STAT1(u64 a)
 	__attribute__ ((pure, always_inline));
 static inline u64 CAVM_CGXX_CMRX_RX_STAT1(u64 a)
 {
-	if (CAVIUM_IS_MODEL(CAVIUM_CN9XXX) && (a <= 3))
-		return 0x78 + 0x40000 * ((a) & 0x3);
-	return -1;
+	return 0x78 + 0x40000 * a;
 }
 
 /**
@@ -1139,9 +1085,7 @@ static inline u64 CAVM_CGXX_CMRX_RX_STAT2(u64 a)
 	__attribute__ ((pure, always_inline));
 static inline u64 CAVM_CGXX_CMRX_RX_STAT2(u64 a)
 {
-	if (CAVIUM_IS_MODEL(CAVIUM_CN9XXX) && (a <= 3))
-		return 0x80 + 0x40000 * ((a) & 0x3);
-	return -1;
+	return 0x80 + 0x40000 * a;
 }
 
 /**
@@ -1163,9 +1107,7 @@ static inline u64 CAVM_CGXX_CMRX_RX_STAT3(u64 a)
 	__attribute__ ((pure, always_inline));
 static inline u64 CAVM_CGXX_CMRX_RX_STAT3(u64 a)
 {
-	if (CAVIUM_IS_MODEL(CAVIUM_CN9XXX) && (a <= 3))
-		return 0x88 + 0x40000 * ((a) & 0x3);
-	return -1;
+	return 0x88 + 0x40000 * a;
 }
 
 /**
@@ -1197,9 +1139,7 @@ static inline u64 CAVM_CGXX_CMRX_RX_STAT4(u64 a)
 	__attribute__ ((pure, always_inline));
 static inline u64 CAVM_CGXX_CMRX_RX_STAT4(u64 a)
 {
-	if (CAVIUM_IS_MODEL(CAVIUM_CN9XXX) && (a <= 3))
-		return 0x90 + 0x40000 * ((a) & 0x3);
-	return -1;
+	return 0x90 + 0x40000 * a;
 }
 
 /**
@@ -1221,9 +1161,7 @@ static inline u64 CAVM_CGXX_CMRX_RX_STAT5(u64 a)
 	__attribute__ ((pure, always_inline));
 static inline u64 CAVM_CGXX_CMRX_RX_STAT5(u64 a)
 {
-	if (CAVIUM_IS_MODEL(CAVIUM_CN9XXX) && (a <= 3))
-		return 0x98 + 0x40000 * ((a) & 0x3);
-	return -1;
+	return 0x98 + 0x40000 * a;
 }
 
 /**
@@ -1252,9 +1190,7 @@ static inline u64 CAVM_CGXX_CMRX_RX_STAT6(u64 a)
 	__attribute__ ((pure, always_inline));
 static inline u64 CAVM_CGXX_CMRX_RX_STAT6(u64 a)
 {
-	if (CAVIUM_IS_MODEL(CAVIUM_CN9XXX) && (a <= 3))
-		return 0xa0 + 0x40000 * ((a) & 0x3);
-	return -1;
+	return 0xa0 + 0x40000 * a;
 }
 
 /**
@@ -1277,9 +1213,7 @@ static inline u64 CAVM_CGXX_CMRX_RX_STAT7(u64 a)
 	__attribute__ ((pure, always_inline));
 static inline u64 CAVM_CGXX_CMRX_RX_STAT7(u64 a)
 {
-	if (CAVIUM_IS_MODEL(CAVIUM_CN9XXX) && (a <= 3))
-		return 0xa8 + 0x40000 * ((a) & 0x3);
-	return -1;
+	return 0xa8 + 0x40000 * a;
 }
 
 /**
@@ -1302,9 +1236,7 @@ static inline u64 CAVM_CGXX_CMRX_RX_STAT8(u64 a)
 	__attribute__ ((pure, always_inline));
 static inline u64 CAVM_CGXX_CMRX_RX_STAT8(u64 a)
 {
-	if (CAVIUM_IS_MODEL(CAVIUM_CN9XXX) && (a <= 3))
-		return 0xb0 + 0x40000 * ((a) & 0x3);
-	return -1;
+	return 0xb0 + 0x40000 * a;
 }
 
 /**
@@ -1325,9 +1257,7 @@ static inline u64 CAVM_CGXX_CMRX_RX_STAT_PRIX_XOFF(u64 a, u64 b)
 	__attribute__ ((pure, always_inline));
 static inline u64 CAVM_CGXX_CMRX_RX_STAT_PRIX_XOFF(u64 a, u64 b)
 {
-	if (CAVIUM_IS_MODEL(CAVIUM_CN9XXX) && ((a <= 3) && (b <= 7)))
-		return 0x7c0 + 0x40000 * ((a) & 0x3) + 8 * ((b) & 0x7);
-	return -1;
+	return 0x7c0 + 0x40000 * a + 8 * b;
 }
 
 /**
@@ -1347,9 +1277,7 @@ static inline u64 CAVM_CGXX_CMRX_SCRATCHX(u64 a, u64 b)
 	__attribute__ ((pure, always_inline));
 static inline u64 CAVM_CGXX_CMRX_SCRATCHX(u64 a, u64 b)
 {
-	if (CAVIUM_IS_MODEL(CAVIUM_CN9XXX) && ((a <= 3) && (b <= 1)))
-		return 0x1050 + 0x40000 * ((a) & 0x3) + 8 * ((b) & 0x1);
-	return -1;
+	return 0x1050 + 0x40000 * a + 8 * b;
 }
 
 /**
@@ -1370,9 +1298,7 @@ static inline u64 CAVM_CGXX_CMRX_TX_CHANNEL(u64 a)
 	__attribute__ ((pure, always_inline));
 static inline u64 CAVM_CGXX_CMRX_TX_CHANNEL(u64 a)
 {
-	if (CAVIUM_IS_MODEL(CAVIUM_CN9XXX) && (a <= 3))
-		return 0x600 + 0x40000 * ((a) & 0x3);
-	return -1;
+	return 0x600 + 0x40000 * a;
 }
 
 /**
@@ -1396,9 +1322,7 @@ static inline u64 CAVM_CGXX_CMRX_TX_FIFO_LEN(u64 a)
 	__attribute__ ((pure, always_inline));
 static inline u64 CAVM_CGXX_CMRX_TX_FIFO_LEN(u64 a)
 {
-	if (CAVIUM_IS_MODEL(CAVIUM_CN9XXX) && (a <= 3))
-		return 0x618 + 0x40000 * ((a) & 0x3);
-	return -1;
+	return 0x618 + 0x40000 * a;
 }
 
 /**
@@ -1420,9 +1344,7 @@ static inline u64 CAVM_CGXX_CMRX_TX_HG2_STATUS(u64 a)
 	__attribute__ ((pure, always_inline));
 static inline u64 CAVM_CGXX_CMRX_TX_HG2_STATUS(u64 a)
 {
-	if (CAVIUM_IS_MODEL(CAVIUM_CN9XXX) && (a <= 3))
-		return 0x610 + 0x40000 * ((a) & 0x3);
-	return -1;
+	return 0x610 + 0x40000 * a;
 }
 
 /**
@@ -1443,9 +1365,7 @@ static inline u64 CAVM_CGXX_CMRX_TX_MERGE_STAT0(u64 a)
 	__attribute__ ((pure, always_inline));
 static inline u64 CAVM_CGXX_CMRX_TX_MERGE_STAT0(u64 a)
 {
-	if (CAVIUM_IS_MODEL(CAVIUM_CN9XXX) && (a <= 3))
-		return 0x160 + 0x40000 * ((a) & 0x3);
-	return -1;
+	return 0x160 + 0x40000 * a;
 }
 
 /**
@@ -1466,9 +1386,7 @@ static inline u64 CAVM_CGXX_CMRX_TX_OVR_BP(u64 a)
 	__attribute__ ((pure, always_inline));
 static inline u64 CAVM_CGXX_CMRX_TX_OVR_BP(u64 a)
 {
-	if (CAVIUM_IS_MODEL(CAVIUM_CN9XXX) && (a <= 3))
-		return 0x620 + 0x40000 * ((a) & 0x3);
-	return -1;
+	return 0x620 + 0x40000 * a;
 }
 
 /**
@@ -1489,9 +1407,7 @@ static inline u64 CAVM_CGXX_CMRX_TX_STAT0(u64 a)
 	__attribute__ ((pure, always_inline));
 static inline u64 CAVM_CGXX_CMRX_TX_STAT0(u64 a)
 {
-	if (CAVIUM_IS_MODEL(CAVIUM_CN9XXX) && (a <= 3))
-		return 0x700 + 0x40000 * ((a) & 0x3);
-	return -1;
+	return 0x700 + 0x40000 * a;
 }
 
 /**
@@ -1512,9 +1428,7 @@ static inline u64 CAVM_CGXX_CMRX_TX_STAT1(u64 a)
 	__attribute__ ((pure, always_inline));
 static inline u64 CAVM_CGXX_CMRX_TX_STAT1(u64 a)
 {
-	if (CAVIUM_IS_MODEL(CAVIUM_CN9XXX) && (a <= 3))
-		return 0x708 + 0x40000 * ((a) & 0x3);
-	return -1;
+	return 0x708 + 0x40000 * a;
 }
 
 /**
@@ -1535,9 +1449,7 @@ static inline u64 CAVM_CGXX_CMRX_TX_STAT10(u64 a)
 	__attribute__ ((pure, always_inline));
 static inline u64 CAVM_CGXX_CMRX_TX_STAT10(u64 a)
 {
-	if (CAVIUM_IS_MODEL(CAVIUM_CN9XXX) && (a <= 3))
-		return 0x750 + 0x40000 * ((a) & 0x3);
-	return -1;
+	return 0x750 + 0x40000 * a;
 }
 
 /**
@@ -1558,9 +1470,7 @@ static inline u64 CAVM_CGXX_CMRX_TX_STAT11(u64 a)
 	__attribute__ ((pure, always_inline));
 static inline u64 CAVM_CGXX_CMRX_TX_STAT11(u64 a)
 {
-	if (CAVIUM_IS_MODEL(CAVIUM_CN9XXX) && (a <= 3))
-		return 0x758 + 0x40000 * ((a) & 0x3);
-	return -1;
+	return 0x758 + 0x40000 * a;
 }
 
 /**
@@ -1581,9 +1491,7 @@ static inline u64 CAVM_CGXX_CMRX_TX_STAT12(u64 a)
 	__attribute__ ((pure, always_inline));
 static inline u64 CAVM_CGXX_CMRX_TX_STAT12(u64 a)
 {
-	if (CAVIUM_IS_MODEL(CAVIUM_CN9XXX) && (a <= 3))
-		return 0x760 + 0x40000 * ((a) & 0x3);
-	return -1;
+	return 0x760 + 0x40000 * a;
 }
 
 /**
@@ -1604,9 +1512,7 @@ static inline u64 CAVM_CGXX_CMRX_TX_STAT13(u64 a)
 	__attribute__ ((pure, always_inline));
 static inline u64 CAVM_CGXX_CMRX_TX_STAT13(u64 a)
 {
-	if (CAVIUM_IS_MODEL(CAVIUM_CN9XXX) && (a <= 3))
-		return 0x768 + 0x40000 * ((a) & 0x3);
-	return -1;
+	return 0x768 + 0x40000 * a;
 }
 
 /**
@@ -1627,9 +1533,7 @@ static inline u64 CAVM_CGXX_CMRX_TX_STAT14(u64 a)
 	__attribute__ ((pure, always_inline));
 static inline u64 CAVM_CGXX_CMRX_TX_STAT14(u64 a)
 {
-	if (CAVIUM_IS_MODEL(CAVIUM_CN9XXX) && (a <= 3))
-		return 0x770 + 0x40000 * ((a) & 0x3);
-	return -1;
+	return 0x770 + 0x40000 * a;
 }
 
 /**
@@ -1650,9 +1554,7 @@ static inline u64 CAVM_CGXX_CMRX_TX_STAT15(u64 a)
 	__attribute__ ((pure, always_inline));
 static inline u64 CAVM_CGXX_CMRX_TX_STAT15(u64 a)
 {
-	if (CAVIUM_IS_MODEL(CAVIUM_CN9XXX) && (a <= 3))
-		return 0x778 + 0x40000 * ((a) & 0x3);
-	return -1;
+	return 0x778 + 0x40000 * a;
 }
 
 /**
@@ -1673,9 +1575,7 @@ static inline u64 CAVM_CGXX_CMRX_TX_STAT16(u64 a)
 	__attribute__ ((pure, always_inline));
 static inline u64 CAVM_CGXX_CMRX_TX_STAT16(u64 a)
 {
-	if (CAVIUM_IS_MODEL(CAVIUM_CN9XXX) && (a <= 3))
-		return 0x780 + 0x40000 * ((a) & 0x3);
-	return -1;
+	return 0x780 + 0x40000 * a;
 }
 
 /**
@@ -1696,9 +1596,7 @@ static inline u64 CAVM_CGXX_CMRX_TX_STAT17(u64 a)
 	__attribute__ ((pure, always_inline));
 static inline u64 CAVM_CGXX_CMRX_TX_STAT17(u64 a)
 {
-	if (CAVIUM_IS_MODEL(CAVIUM_CN9XXX) && (a <= 3))
-		return 0x788 + 0x40000 * ((a) & 0x3);
-	return -1;
+	return 0x788 + 0x40000 * a;
 }
 
 /**
@@ -1719,9 +1617,7 @@ static inline u64 CAVM_CGXX_CMRX_TX_STAT2(u64 a)
 	__attribute__ ((pure, always_inline));
 static inline u64 CAVM_CGXX_CMRX_TX_STAT2(u64 a)
 {
-	if (CAVIUM_IS_MODEL(CAVIUM_CN9XXX) && (a <= 3))
-		return 0x710 + 0x40000 * ((a) & 0x3);
-	return -1;
+	return 0x710 + 0x40000 * a;
 }
 
 /**
@@ -1742,9 +1638,7 @@ static inline u64 CAVM_CGXX_CMRX_TX_STAT3(u64 a)
 	__attribute__ ((pure, always_inline));
 static inline u64 CAVM_CGXX_CMRX_TX_STAT3(u64 a)
 {
-	if (CAVIUM_IS_MODEL(CAVIUM_CN9XXX) && (a <= 3))
-		return 0x718 + 0x40000 * ((a) & 0x3);
-	return -1;
+	return 0x718 + 0x40000 * a;
 }
 
 /**
@@ -1765,9 +1659,7 @@ static inline u64 CAVM_CGXX_CMRX_TX_STAT4(u64 a)
 	__attribute__ ((pure, always_inline));
 static inline u64 CAVM_CGXX_CMRX_TX_STAT4(u64 a)
 {
-	if (CAVIUM_IS_MODEL(CAVIUM_CN9XXX) && (a <= 3))
-		return 0x720 + 0x40000 * ((a) & 0x3);
-	return -1;
+	return 0x720 + 0x40000 * a;
 }
 
 /**
@@ -1788,9 +1680,7 @@ static inline u64 CAVM_CGXX_CMRX_TX_STAT5(u64 a)
 	__attribute__ ((pure, always_inline));
 static inline u64 CAVM_CGXX_CMRX_TX_STAT5(u64 a)
 {
-	if (CAVIUM_IS_MODEL(CAVIUM_CN9XXX) && (a <= 3))
-		return 0x728 + 0x40000 * ((a) & 0x3);
-	return -1;
+	return 0x728 + 0x40000 * a;
 }
 
 /**
@@ -1811,9 +1701,7 @@ static inline u64 CAVM_CGXX_CMRX_TX_STAT6(u64 a)
 	__attribute__ ((pure, always_inline));
 static inline u64 CAVM_CGXX_CMRX_TX_STAT6(u64 a)
 {
-	if (CAVIUM_IS_MODEL(CAVIUM_CN9XXX) && (a <= 3))
-		return 0x730 + 0x40000 * ((a) & 0x3);
-	return -1;
+	return 0x730 + 0x40000 * a;
 }
 
 /**
@@ -1834,9 +1722,7 @@ static inline u64 CAVM_CGXX_CMRX_TX_STAT7(u64 a)
 	__attribute__ ((pure, always_inline));
 static inline u64 CAVM_CGXX_CMRX_TX_STAT7(u64 a)
 {
-	if (CAVIUM_IS_MODEL(CAVIUM_CN9XXX) && (a <= 3))
-		return 0x738 + 0x40000 * ((a) & 0x3);
-	return -1;
+	return 0x738 + 0x40000 * a;
 }
 
 /**
@@ -1857,9 +1743,7 @@ static inline u64 CAVM_CGXX_CMRX_TX_STAT8(u64 a)
 	__attribute__ ((pure, always_inline));
 static inline u64 CAVM_CGXX_CMRX_TX_STAT8(u64 a)
 {
-	if (CAVIUM_IS_MODEL(CAVIUM_CN9XXX) && (a <= 3))
-		return 0x740 + 0x40000 * ((a) & 0x3);
-	return -1;
+	return 0x740 + 0x40000 * a;
 }
 
 /**
@@ -1880,9 +1764,7 @@ static inline u64 CAVM_CGXX_CMRX_TX_STAT9(u64 a)
 	__attribute__ ((pure, always_inline));
 static inline u64 CAVM_CGXX_CMRX_TX_STAT9(u64 a)
 {
-	if (CAVIUM_IS_MODEL(CAVIUM_CN9XXX) && (a <= 3))
-		return 0x748 + 0x40000 * ((a) & 0x3);
-	return -1;
+	return 0x748 + 0x40000 * a;
 }
 
 /**
@@ -1903,9 +1785,7 @@ static inline u64 CAVM_CGXX_CMRX_TX_STAT_PRIX_XOFF(u64 a, u64 b)
 	__attribute__ ((pure, always_inline));
 static inline u64 CAVM_CGXX_CMRX_TX_STAT_PRIX_XOFF(u64 a, u64 b)
 {
-	if (CAVIUM_IS_MODEL(CAVIUM_CN9XXX) && ((a <= 3) && (b <= 7)))
-		return 0x800 + 0x40000 * ((a) & 0x3) + 8 * ((b) & 0x7);
-	return -1;
+	return 0x800 + 0x40000 * a + 8 * b;
 }
 
 /**
@@ -1926,9 +1806,7 @@ static inline u64 CAVM_CGXX_CMR_BAD(void)
 	__attribute__ ((pure, always_inline));
 static inline u64 CAVM_CGXX_CMR_BAD(void)
 {
-	if (CAVIUM_IS_MODEL(CAVIUM_CN9XXX))
-		return 0x1020;
-	return -1;
+	return 0x1020;
 }
 
 /**
@@ -1948,9 +1826,7 @@ static inline u64 CAVM_CGXX_CMR_CHAN_MSK_AND(void)
 	__attribute__ ((pure, always_inline));
 static inline u64 CAVM_CGXX_CMR_CHAN_MSK_AND(void)
 {
-	if (CAVIUM_IS_MODEL(CAVIUM_CN9XXX))
-		return 0x110;
-	return -1;
+	return 0x110;
 }
 
 /**
@@ -1970,9 +1846,7 @@ static inline u64 CAVM_CGXX_CMR_CHAN_MSK_OR(void)
 	__attribute__ ((pure, always_inline));
 static inline u64 CAVM_CGXX_CMR_CHAN_MSK_OR(void)
 {
-	if (CAVIUM_IS_MODEL(CAVIUM_CN9XXX))
-		return 0x118;
-	return -1;
+	return 0x118;
 }
 
 /**
@@ -1993,9 +1867,7 @@ static inline u64 CAVM_CGXX_CMR_ECO(void)
 	__attribute__ ((pure, always_inline));
 static inline u64 CAVM_CGXX_CMR_ECO(void)
 {
-	if (CAVIUM_IS_MODEL(CAVIUM_CN9XXX))
-		return 0x1028;
-	return -1;
+	return 0x1028;
 }
 
 /**
@@ -2026,9 +1898,7 @@ static inline u64 CAVM_CGXX_CMR_GLOBAL_CONFIG(void)
 	__attribute__ ((pure, always_inline));
 static inline u64 CAVM_CGXX_CMR_GLOBAL_CONFIG(void)
 {
-	if (CAVIUM_IS_MODEL(CAVIUM_CN9XXX))
-		return 8;
-	return -1;
+	return 8;
 }
 
 /**
@@ -2050,9 +1920,7 @@ static inline u64 CAVM_CGXX_CMR_MEM_INT(void)
 	__attribute__ ((pure, always_inline));
 static inline u64 CAVM_CGXX_CMR_MEM_INT(void)
 {
-	if (CAVIUM_IS_MODEL(CAVIUM_CN9XXX))
-		return 0x10;
-	return -1;
+	return 0x10;
 }
 
 /**
@@ -2075,9 +1943,7 @@ static inline u64 CAVM_CGXX_CMR_MEM_INT_ENA_W1C(void)
 	__attribute__ ((pure, always_inline));
 static inline u64 CAVM_CGXX_CMR_MEM_INT_ENA_W1C(void)
 {
-	if (CAVIUM_IS_MODEL(CAVIUM_CN9XXX))
-		return 0x20;
-	return -1;
+	return 0x20;
 }
 
 /**
@@ -2100,9 +1966,7 @@ static inline u64 CAVM_CGXX_CMR_MEM_INT_ENA_W1S(void)
 	__attribute__ ((pure, always_inline));
 static inline u64 CAVM_CGXX_CMR_MEM_INT_ENA_W1S(void)
 {
-	if (CAVIUM_IS_MODEL(CAVIUM_CN9XXX))
-		return 0x28;
-	return -1;
+	return 0x28;
 }
 
 /**
@@ -2125,9 +1989,7 @@ static inline u64 CAVM_CGXX_CMR_MEM_INT_W1S(void)
 	__attribute__ ((pure, always_inline));
 static inline u64 CAVM_CGXX_CMR_MEM_INT_W1S(void)
 {
-	if (CAVIUM_IS_MODEL(CAVIUM_CN9XXX))
-		return 0x18;
-	return -1;
+	return 0x18;
 }
 
 /**
@@ -2149,9 +2011,7 @@ static inline u64 CAVM_CGXX_CMR_NIC_NXC_ADR(void)
 	__attribute__ ((pure, always_inline));
 static inline u64 CAVM_CGXX_CMR_NIC_NXC_ADR(void)
 {
-	if (CAVIUM_IS_MODEL(CAVIUM_CN9XXX))
-		return 0x1030;
-	return -1;
+	return 0x1030;
 }
 
 /**
@@ -2175,9 +2035,7 @@ static inline u64 CAVM_CGXX_CMR_NIX0_NXC_ADR(void)
 	__attribute__ ((pure, always_inline));
 static inline u64 CAVM_CGXX_CMR_NIX0_NXC_ADR(void)
 {
-	if (CAVIUM_IS_MODEL(CAVIUM_CN9XXX))
-		return 0x1038;
-	return -1;
+	return 0x1038;
 }
 
 /**
@@ -2201,9 +2059,7 @@ static inline u64 CAVM_CGXX_CMR_NIX1_NXC_ADR(void)
 	__attribute__ ((pure, always_inline));
 static inline u64 CAVM_CGXX_CMR_NIX1_NXC_ADR(void)
 {
-	if (CAVIUM_IS_MODEL(CAVIUM_CN9XXX))
-		return 0x1040;
-	return -1;
+	return 0x1040;
 }
 
 /**
@@ -2223,9 +2079,7 @@ static inline u64 CAVM_CGXX_CMR_P2XX_COUNT(u64 a)
 	__attribute__ ((pure, always_inline));
 static inline u64 CAVM_CGXX_CMR_P2XX_COUNT(u64 a)
 {
-	if (CAVIUM_IS_MODEL(CAVIUM_CN9XXX) && (a <= 2))
-		return 0x168 + 0x1000 * ((a) & 0x3);
-	return -1;
+	return 0x168 + 0x1000 * a;
 }
 
 /**
@@ -2250,9 +2104,7 @@ static inline u64 CAVM_CGXX_CMR_RX_DMACX_CAM0(u64 a)
 	__attribute__ ((pure, always_inline));
 static inline u64 CAVM_CGXX_CMR_RX_DMACX_CAM0(u64 a)
 {
-	if (CAVIUM_IS_MODEL(CAVIUM_CN9XXX) && (a <= 31))
-		return 0x200 + 8 * ((a) & 0x1f);
-	return -1;
+	return 0x200 + 8 * a;
 }
 
 /**
@@ -2278,9 +2130,7 @@ static inline u64 CAVM_CGXX_CMR_RX_DMACX_CAM1(u64 a)
 	__attribute__ ((pure, always_inline));
 static inline u64 CAVM_CGXX_CMR_RX_DMACX_CAM1(u64 a)
 {
-	if (CAVIUM_IS_MODEL(CAVIUM_CN9XXX) && (a <= 31))
-		return 0x400 + 8 * ((a) & 0x1f);
-	return -1;
+	return 0x400 + 8 * a;
 }
 
 /**
@@ -2301,9 +2151,7 @@ static inline u64 CAVM_CGXX_CMR_RX_LMACS(void)
 	__attribute__ ((pure, always_inline));
 static inline u64 CAVM_CGXX_CMR_RX_LMACS(void)
 {
-	if (CAVIUM_IS_MODEL(CAVIUM_CN9XXX))
-		return 0x128;
-	return -1;
+	return 0x128;
 }
 
 /**
@@ -2333,9 +2181,7 @@ static inline u64 CAVM_CGXX_CMR_RX_OVR_BP(void)
 	__attribute__ ((pure, always_inline));
 static inline u64 CAVM_CGXX_CMR_RX_OVR_BP(void)
 {
-	if (CAVIUM_IS_MODEL(CAVIUM_CN9XXX))
-		return 0x130;
-	return -1;
+	return 0x130;
 }
 
 /**
@@ -2357,9 +2203,7 @@ static inline u64 CAVM_CGXX_CMR_RX_STAT10(void)
 	__attribute__ ((pure, always_inline));
 static inline u64 CAVM_CGXX_CMR_RX_STAT10(void)
 {
-	if (CAVIUM_IS_MODEL(CAVIUM_CN9XXX))
-		return 0xc0;
-	return -1;
+	return 0xc0;
 }
 
 /**
@@ -2384,9 +2228,7 @@ static inline u64 CAVM_CGXX_CMR_RX_STAT11(void)
 	__attribute__ ((pure, always_inline));
 static inline u64 CAVM_CGXX_CMR_RX_STAT11(void)
 {
-	if (CAVIUM_IS_MODEL(CAVIUM_CN9XXX))
-		return 0xc8;
-	return -1;
+	return 0xc8;
 }
 
 /**
@@ -2408,9 +2250,7 @@ static inline u64 CAVM_CGXX_CMR_RX_STAT12(void)
 	__attribute__ ((pure, always_inline));
 static inline u64 CAVM_CGXX_CMR_RX_STAT12(void)
 {
-	if (CAVIUM_IS_MODEL(CAVIUM_CN9XXX))
-		return 0xd0;
-	return -1;
+	return 0xd0;
 }
 
 /**
@@ -2441,9 +2281,7 @@ static inline u64 CAVM_CGXX_CMR_RX_STAT9(void)
 	__attribute__ ((pure, always_inline));
 static inline u64 CAVM_CGXX_CMR_RX_STAT9(void)
 {
-	if (CAVIUM_IS_MODEL(CAVIUM_CN9XXX))
-		return 0xb8;
-	return -1;
+	return 0xb8;
 }
 
 /**
@@ -2495,9 +2333,7 @@ static inline u64 CAVM_CGXX_CMR_RX_STEERING0X(u64 a)
 	__attribute__ ((pure, always_inline));
 static inline u64 CAVM_CGXX_CMR_RX_STEERING0X(u64 a)
 {
-	if (CAVIUM_IS_MODEL(CAVIUM_CN9XXX) && (a <= 7))
-		return 0x300 + 8 * ((a) & 0x7);
-	return -1;
+	return 0x300 + 8 * a;
 }
 
 /**
@@ -2530,9 +2366,7 @@ static inline u64 CAVM_CGXX_CMR_RX_STEERING1X(u64 a)
 	__attribute__ ((pure, always_inline));
 static inline u64 CAVM_CGXX_CMR_RX_STEERING1X(u64 a)
 {
-	if (CAVIUM_IS_MODEL(CAVIUM_CN9XXX) && (a <= 7))
-		return 0x500 + 8 * ((a) & 0x7);
-	return -1;
+	return 0x500 + 8 * a;
 }
 
 /**
@@ -2557,9 +2391,7 @@ static inline u64 CAVM_CGXX_CMR_RX_STEERING_DEFAULT0(void)
 	__attribute__ ((pure, always_inline));
 static inline u64 CAVM_CGXX_CMR_RX_STEERING_DEFAULT0(void)
 {
-	if (CAVIUM_IS_MODEL(CAVIUM_CN9XXX))
-		return 0x3f0;
-	return -1;
+	return 0x3f0;
 }
 
 /**
@@ -2585,9 +2417,7 @@ static inline u64 CAVM_CGXX_CMR_RX_STEERING_DEFAULT1(void)
 	__attribute__ ((pure, always_inline));
 static inline u64 CAVM_CGXX_CMR_RX_STEERING_DEFAULT1(void)
 {
-	if (CAVIUM_IS_MODEL(CAVIUM_CN9XXX))
-		return 0x5e0;
-	return -1;
+	return 0x5e0;
 }
 
 /**
@@ -2613,9 +2443,7 @@ static inline u64 CAVM_CGXX_CMR_RX_STEERING_VETYPE0X(u64 a)
 	__attribute__ ((pure, always_inline));
 static inline u64 CAVM_CGXX_CMR_RX_STEERING_VETYPE0X(u64 a)
 {
-	if (CAVIUM_IS_MODEL(CAVIUM_CN9XXX) && (a <= 7))
-		return 0x380 + 8 * ((a) & 0x7);
-	return -1;
+	return 0x380 + 8 * a;
 }
 
 /**
@@ -2642,9 +2470,7 @@ static inline u64 CAVM_CGXX_CMR_RX_STEERING_VETYPE1X(u64 a)
 	__attribute__ ((pure, always_inline));
 static inline u64 CAVM_CGXX_CMR_RX_STEERING_VETYPE1X(u64 a)
 {
-	if (CAVIUM_IS_MODEL(CAVIUM_CN9XXX) && (a <= 7))
-		return 0x580 + 8 * ((a) & 0x7);
-	return -1;
+	return 0x580 + 8 * a;
 }
 
 /**
@@ -2667,9 +2493,7 @@ static inline u64 CAVM_CGXX_CMR_TX_LMACS(void)
 	__attribute__ ((pure, always_inline));
 static inline u64 CAVM_CGXX_CMR_TX_LMACS(void)
 {
-	if (CAVIUM_IS_MODEL(CAVIUM_CN9XXX))
-		return 0x1000;
-	return -1;
+	return 0x1000;
 }
 
 /**
@@ -2689,9 +2513,7 @@ static inline u64 CAVM_CGXX_CMR_X2PX_COUNT(u64 a)
 	__attribute__ ((pure, always_inline));
 static inline u64 CAVM_CGXX_CMR_X2PX_COUNT(u64 a)
 {
-	if (CAVIUM_IS_MODEL(CAVIUM_CN9XXX) && (a <= 2))
-		return 0x170 + 0x1000 * ((a) & 0x3);
-	return -1;
+	return 0x170 + 0x1000 * a;
 }
 
 /**
@@ -2715,9 +2537,7 @@ static inline u64 CAVM_CGXX_CONST(void)
 	__attribute__ ((pure, always_inline));
 static inline u64 CAVM_CGXX_CONST(void)
 {
-	if (CAVIUM_IS_MODEL(CAVIUM_CN9XXX))
-		return 0x2000;
-	return -1;
+	return 0x2000;
 }
 
 /**
@@ -2740,9 +2560,7 @@ static inline u64 CAVM_CGXX_CONST1(void)
 	__attribute__ ((pure, always_inline));
 static inline u64 CAVM_CGXX_CONST1(void)
 {
-	if (CAVIUM_IS_MODEL(CAVIUM_CN9XXX))
-		return 0x2008;
-	return -1;
+	return 0x2008;
 }
 
 /**
@@ -2764,9 +2582,7 @@ static inline u64 CAVM_CGXX_GMP_GMIX_RX_WOL_CTRL0(u64 a)
 	__attribute__ ((pure, always_inline));
 static inline u64 CAVM_CGXX_GMP_GMIX_RX_WOL_CTRL0(u64 a)
 {
-	if (CAVIUM_IS_MODEL(CAVIUM_CN9XXX) && (a <= 3))
-		return 0x38a00 + 0x40000 * ((a) & 0x3);
-	return -1;
+	return 0x38a00 + 0x40000 * a;
 }
 
 /**
@@ -2786,9 +2602,7 @@ static inline u64 CAVM_CGXX_GMP_GMIX_RX_WOL_CTRL1(u64 a)
 	__attribute__ ((pure, always_inline));
 static inline u64 CAVM_CGXX_GMP_GMIX_RX_WOL_CTRL1(u64 a)
 {
-	if (CAVIUM_IS_MODEL(CAVIUM_CN9XXX) && (a <= 3))
-		return 0x38a08 + 0x40000 * ((a) & 0x3);
-	return -1;
+	return 0x38a08 + 0x40000 * a;
 }
 
 /**
@@ -2822,9 +2636,7 @@ static inline u64 CAVM_CGXX_GMP_GMIX_TX_EEE(u64 a)
 	__attribute__ ((pure, always_inline));
 static inline u64 CAVM_CGXX_GMP_GMIX_TX_EEE(u64 a)
 {
-	if (CAVIUM_IS_MODEL(CAVIUM_CN9XXX) && (a <= 3))
-		return 0x38800 + 0x40000 * ((a) & 0x3);
-	return -1;
+	return 0x38800 + 0x40000 * a;
 }
 
 /**
@@ -2861,9 +2673,7 @@ static inline u64 CAVM_CGXX_GMP_GMIX_TX_EEE_CFG1(u64 a)
 	__attribute__ ((pure, always_inline));
 static inline u64 CAVM_CGXX_GMP_GMIX_TX_EEE_CFG1(u64 a)
 {
-	if (CAVIUM_IS_MODEL(CAVIUM_CN9XXX) && (a <= 3))
-		return 0x38808 + 0x40000 * ((a) & 0x3);
-	return -1;
+	return 0x38808 + 0x40000 * a;
 }
 
 /**
@@ -2885,9 +2695,7 @@ static inline u64 CAVM_CGXX_GMP_GMIX_WOL_INT(u64 a)
 	__attribute__ ((pure, always_inline));
 static inline u64 CAVM_CGXX_GMP_GMIX_WOL_INT(u64 a)
 {
-	if (CAVIUM_IS_MODEL(CAVIUM_CN9XXX) && (a <= 3))
-		return 0x38a80 + 0x40000 * ((a) & 0x3);
-	return -1;
+	return 0x38a80 + 0x40000 * a;
 }
 
 /**
@@ -2909,9 +2717,7 @@ static inline u64 CAVM_CGXX_GMP_GMIX_WOL_INT_ENA_W1C(u64 a)
 	__attribute__ ((pure, always_inline));
 static inline u64 CAVM_CGXX_GMP_GMIX_WOL_INT_ENA_W1C(u64 a)
 {
-	if (CAVIUM_IS_MODEL(CAVIUM_CN9XXX) && (a <= 3))
-		return 0x38a90 + 0x40000 * ((a) & 0x3);
-	return -1;
+	return 0x38a90 + 0x40000 * a;
 }
 
 /**
@@ -2933,9 +2739,7 @@ static inline u64 CAVM_CGXX_GMP_GMIX_WOL_INT_ENA_W1S(u64 a)
 	__attribute__ ((pure, always_inline));
 static inline u64 CAVM_CGXX_GMP_GMIX_WOL_INT_ENA_W1S(u64 a)
 {
-	if (CAVIUM_IS_MODEL(CAVIUM_CN9XXX) && (a <= 3))
-		return 0x38a98 + 0x40000 * ((a) & 0x3);
-	return -1;
+	return 0x38a98 + 0x40000 * a;
 }
 
 /**
@@ -2957,9 +2761,7 @@ static inline u64 CAVM_CGXX_GMP_GMIX_WOL_INT_W1S(u64 a)
 	__attribute__ ((pure, always_inline));
 static inline u64 CAVM_CGXX_GMP_GMIX_WOL_INT_W1S(u64 a)
 {
-	if (CAVIUM_IS_MODEL(CAVIUM_CN9XXX) && (a <= 3))
-		return 0x38a88 + 0x40000 * ((a) & 0x3);
-	return -1;
+	return 0x38a88 + 0x40000 * a;
 }
 
 /**
@@ -2989,9 +2791,7 @@ static inline u64 CAVM_CGXX_GMP_GMI_PRTX_CFG(u64 a)
 	__attribute__ ((pure, always_inline));
 static inline u64 CAVM_CGXX_GMP_GMI_PRTX_CFG(u64 a)
 {
-	if (CAVIUM_IS_MODEL(CAVIUM_CN9XXX) && (a <= 3))
-		return 0x38020 + 0x40000 * ((a) & 0x3);
-	return -1;
+	return 0x38020 + 0x40000 * a;
 }
 
 /**
@@ -3023,7 +2823,7 @@ static inline u64 CAVM_CGXX_GMP_GMI_PRTX_CFG(u64 a)
  * _   L2 Size \>= [CNT] - Accept packet.
  *
  * where L2_size = MAX(0, total_packet_size - CGX()_GMP_GMI_RX()_UDD_SKP[LEN] -
- *                        ((CGX()_GMP_GMI_RX()_FRM_CTL[PRE_CHK]==1)*8))
+ *                        ((CGX()_GMP_GMI_RX()_FRM_CTL[PRE_CHK]==1)*8)).
  */
 union cavm_cgxx_gmp_gmi_rxx_decision {
 	u64 u;
@@ -3038,9 +2838,7 @@ static inline u64 CAVM_CGXX_GMP_GMI_RXX_DECISION(u64 a)
 	__attribute__ ((pure, always_inline));
 static inline u64 CAVM_CGXX_GMP_GMI_RXX_DECISION(u64 a)
 {
-	if (CAVIUM_IS_MODEL(CAVIUM_CN9XXX) && (a <= 3))
-		return 0x38040 + 0x40000 * ((a) & 0x3);
-	return -1;
+	return 0x38040 + 0x40000 * a;
 }
 
 /**
@@ -3068,9 +2866,7 @@ static inline u64 CAVM_CGXX_GMP_GMI_RXX_FRM_CHK(u64 a)
 	__attribute__ ((pure, always_inline));
 static inline u64 CAVM_CGXX_GMP_GMI_RXX_FRM_CHK(u64 a)
 {
-	if (CAVIUM_IS_MODEL(CAVIUM_CN9XXX) && (a <= 3))
-		return 0x38030 + 0x40000 * ((a) & 0x3);
-	return -1;
+	return 0x38030 + 0x40000 * a;
 }
 
 /**
@@ -3142,9 +2938,7 @@ static inline u64 CAVM_CGXX_GMP_GMI_RXX_FRM_CTL(u64 a)
 	__attribute__ ((pure, always_inline));
 static inline u64 CAVM_CGXX_GMP_GMI_RXX_FRM_CTL(u64 a)
 {
-	if (CAVIUM_IS_MODEL(CAVIUM_CN9XXX) && (a <= 3))
-		return 0x38028 + 0x40000 * ((a) & 0x3);
-	return -1;
+	return 0x38028 + 0x40000 * a;
 }
 
 /**
@@ -3166,9 +2960,7 @@ static inline u64 CAVM_CGXX_GMP_GMI_RXX_IFG(u64 a)
 	__attribute__ ((pure, always_inline));
 static inline u64 CAVM_CGXX_GMP_GMI_RXX_IFG(u64 a)
 {
-	if (CAVIUM_IS_MODEL(CAVIUM_CN9XXX) && (a <= 3))
-		return 0x38058 + 0x40000 * ((a) & 0x3);
-	return -1;
+	return 0x38058 + 0x40000 * a;
 }
 
 /**
@@ -3275,9 +3067,7 @@ static inline u64 CAVM_CGXX_GMP_GMI_RXX_INT(u64 a)
 	__attribute__ ((pure, always_inline));
 static inline u64 CAVM_CGXX_GMP_GMI_RXX_INT(u64 a)
 {
-	if (CAVIUM_IS_MODEL(CAVIUM_CN9XXX) && (a <= 3))
-		return 0x38000 + 0x40000 * ((a) & 0x3);
-	return -1;
+	return 0x38000 + 0x40000 * a;
 }
 
 /**
@@ -3325,9 +3115,7 @@ static inline u64 CAVM_CGXX_GMP_GMI_RXX_INT_ENA_W1C(u64 a)
 	__attribute__ ((pure, always_inline));
 static inline u64 CAVM_CGXX_GMP_GMI_RXX_INT_ENA_W1C(u64 a)
 {
-	if (CAVIUM_IS_MODEL(CAVIUM_CN9XXX) && (a <= 3))
-		return 0x38010 + 0x40000 * ((a) & 0x3);
-	return -1;
+	return 0x38010 + 0x40000 * a;
 }
 
 /**
@@ -3375,9 +3163,7 @@ static inline u64 CAVM_CGXX_GMP_GMI_RXX_INT_ENA_W1S(u64 a)
 	__attribute__ ((pure, always_inline));
 static inline u64 CAVM_CGXX_GMP_GMI_RXX_INT_ENA_W1S(u64 a)
 {
-	if (CAVIUM_IS_MODEL(CAVIUM_CN9XXX) && (a <= 3))
-		return 0x38018 + 0x40000 * ((a) & 0x3);
-	return -1;
+	return 0x38018 + 0x40000 * a;
 }
 
 /**
@@ -3425,9 +3211,7 @@ static inline u64 CAVM_CGXX_GMP_GMI_RXX_INT_W1S(u64 a)
 	__attribute__ ((pure, always_inline));
 static inline u64 CAVM_CGXX_GMP_GMI_RXX_INT_W1S(u64 a)
 {
-	if (CAVIUM_IS_MODEL(CAVIUM_CN9XXX) && (a <= 3))
-		return 0x38008 + 0x40000 * ((a) & 0x3);
-	return -1;
+	return 0x38008 + 0x40000 * a;
 }
 
 /**
@@ -3449,9 +3233,7 @@ static inline u64 CAVM_CGXX_GMP_GMI_RXX_JABBER(u64 a)
 	__attribute__ ((pure, always_inline));
 static inline u64 CAVM_CGXX_GMP_GMI_RXX_JABBER(u64 a)
 {
-	if (CAVIUM_IS_MODEL(CAVIUM_CN9XXX) && (a <= 3))
-		return 0x38038 + 0x40000 * ((a) & 0x3);
-	return -1;
+	return 0x38038 + 0x40000 * a;
 }
 
 /**
@@ -3500,9 +3282,7 @@ static inline u64 CAVM_CGXX_GMP_GMI_RXX_UDD_SKP(u64 a)
 	__attribute__ ((pure, always_inline));
 static inline u64 CAVM_CGXX_GMP_GMI_RXX_UDD_SKP(u64 a)
 {
-	if (CAVIUM_IS_MODEL(CAVIUM_CN9XXX) && (a <= 3))
-		return 0x38048 + 0x40000 * ((a) & 0x3);
-	return -1;
+	return 0x38048 + 0x40000 * a;
 }
 
 /**
@@ -3523,9 +3303,7 @@ static inline u64 CAVM_CGXX_GMP_GMI_SMACX(u64 a)
 	__attribute__ ((pure, always_inline));
 static inline u64 CAVM_CGXX_GMP_GMI_SMACX(u64 a)
 {
-	if (CAVIUM_IS_MODEL(CAVIUM_CN9XXX) && (a <= 3))
-		return 0x38230 + 0x40000 * ((a) & 0x3);
-	return -1;
+	return 0x38230 + 0x40000 * a;
 }
 
 /**
@@ -3549,9 +3327,7 @@ static inline u64 CAVM_CGXX_GMP_GMI_TXX_APPEND(u64 a)
 	__attribute__ ((pure, always_inline));
 static inline u64 CAVM_CGXX_GMP_GMI_TXX_APPEND(u64 a)
 {
-	if (CAVIUM_IS_MODEL(CAVIUM_CN9XXX) && (a <= 3))
-		return 0x38218 + 0x40000 * ((a) & 0x3);
-	return -1;
+	return 0x38218 + 0x40000 * a;
 }
 
 /**
@@ -3572,9 +3348,7 @@ static inline u64 CAVM_CGXX_GMP_GMI_TXX_BURST(u64 a)
 	__attribute__ ((pure, always_inline));
 static inline u64 CAVM_CGXX_GMP_GMI_TXX_BURST(u64 a)
 {
-	if (CAVIUM_IS_MODEL(CAVIUM_CN9XXX) && (a <= 3))
-		return 0x38228 + 0x40000 * ((a) & 0x3);
-	return -1;
+	return 0x38228 + 0x40000 * a;
 }
 
 /**
@@ -3598,9 +3372,7 @@ static inline u64 CAVM_CGXX_GMP_GMI_TXX_CTL(u64 a)
 	__attribute__ ((pure, always_inline));
 static inline u64 CAVM_CGXX_GMP_GMI_TXX_CTL(u64 a)
 {
-	if (CAVIUM_IS_MODEL(CAVIUM_CN9XXX) && (a <= 3))
-		return 0x38270 + 0x40000 * ((a) & 0x3);
-	return -1;
+	return 0x38270 + 0x40000 * a;
 }
 
 /**
@@ -3634,9 +3406,7 @@ static inline u64 CAVM_CGXX_GMP_GMI_TXX_INT(u64 a)
 	__attribute__ ((pure, always_inline));
 static inline u64 CAVM_CGXX_GMP_GMI_TXX_INT(u64 a)
 {
-	if (CAVIUM_IS_MODEL(CAVIUM_CN9XXX) && (a <= 3))
-		return 0x38500 + 0x40000 * ((a) & 0x3);
-	return -1;
+	return 0x38500 + 0x40000 * a;
 }
 
 /**
@@ -3671,9 +3441,7 @@ static inline u64 CAVM_CGXX_GMP_GMI_TXX_INT_ENA_W1C(u64 a)
 	__attribute__ ((pure, always_inline));
 static inline u64 CAVM_CGXX_GMP_GMI_TXX_INT_ENA_W1C(u64 a)
 {
-	if (CAVIUM_IS_MODEL(CAVIUM_CN9XXX) && (a <= 3))
-		return 0x38510 + 0x40000 * ((a) & 0x3);
-	return -1;
+	return 0x38510 + 0x40000 * a;
 }
 
 /**
@@ -3708,9 +3476,7 @@ static inline u64 CAVM_CGXX_GMP_GMI_TXX_INT_ENA_W1S(u64 a)
 	__attribute__ ((pure, always_inline));
 static inline u64 CAVM_CGXX_GMP_GMI_TXX_INT_ENA_W1S(u64 a)
 {
-	if (CAVIUM_IS_MODEL(CAVIUM_CN9XXX) && (a <= 3))
-		return 0x38518 + 0x40000 * ((a) & 0x3);
-	return -1;
+	return 0x38518 + 0x40000 * a;
 }
 
 /**
@@ -3745,9 +3511,7 @@ static inline u64 CAVM_CGXX_GMP_GMI_TXX_INT_W1S(u64 a)
 	__attribute__ ((pure, always_inline));
 static inline u64 CAVM_CGXX_GMP_GMI_TXX_INT_W1S(u64 a)
 {
-	if (CAVIUM_IS_MODEL(CAVIUM_CN9XXX) && (a <= 3))
-		return 0x38508 + 0x40000 * ((a) & 0x3);
-	return -1;
+	return 0x38508 + 0x40000 * a;
 }
 
 /**
@@ -3768,9 +3532,7 @@ static inline u64 CAVM_CGXX_GMP_GMI_TXX_MIN_PKT(u64 a)
 	__attribute__ ((pure, always_inline));
 static inline u64 CAVM_CGXX_GMP_GMI_TXX_MIN_PKT(u64 a)
 {
-	if (CAVIUM_IS_MODEL(CAVIUM_CN9XXX) && (a <= 3))
-		return 0x38240 + 0x40000 * ((a) & 0x3);
-	return -1;
+	return 0x38240 + 0x40000 * a;
 }
 
 /**
@@ -3811,9 +3573,7 @@ static inline u64 CAVM_CGXX_GMP_GMI_TXX_PAUSE_PKT_INTERVAL(u64 a)
 	__attribute__ ((pure, always_inline));
 static inline u64 CAVM_CGXX_GMP_GMI_TXX_PAUSE_PKT_INTERVAL(u64 a)
 {
-	if (CAVIUM_IS_MODEL(CAVIUM_CN9XXX) && (a <= 3))
-		return 0x38248 + 0x40000 * ((a) & 0x3);
-	return -1;
+	return 0x38248 + 0x40000 * a;
 }
 
 /**
@@ -3834,9 +3594,7 @@ static inline u64 CAVM_CGXX_GMP_GMI_TXX_PAUSE_PKT_TIME(u64 a)
 	__attribute__ ((pure, always_inline));
 static inline u64 CAVM_CGXX_GMP_GMI_TXX_PAUSE_PKT_TIME(u64 a)
 {
-	if (CAVIUM_IS_MODEL(CAVIUM_CN9XXX) && (a <= 3))
-		return 0x38238 + 0x40000 * ((a) & 0x3);
-	return -1;
+	return 0x38238 + 0x40000 * a;
 }
 
 /**
@@ -3857,9 +3615,7 @@ static inline u64 CAVM_CGXX_GMP_GMI_TXX_PAUSE_TOGO(u64 a)
 	__attribute__ ((pure, always_inline));
 static inline u64 CAVM_CGXX_GMP_GMI_TXX_PAUSE_TOGO(u64 a)
 {
-	if (CAVIUM_IS_MODEL(CAVIUM_CN9XXX) && (a <= 3))
-		return 0x38258 + 0x40000 * ((a) & 0x3);
-	return -1;
+	return 0x38258 + 0x40000 * a;
 }
 
 /**
@@ -3880,9 +3636,7 @@ static inline u64 CAVM_CGXX_GMP_GMI_TXX_PAUSE_ZERO(u64 a)
 	__attribute__ ((pure, always_inline));
 static inline u64 CAVM_CGXX_GMP_GMI_TXX_PAUSE_ZERO(u64 a)
 {
-	if (CAVIUM_IS_MODEL(CAVIUM_CN9XXX) && (a <= 3))
-		return 0x38260 + 0x40000 * ((a) & 0x3);
-	return -1;
+	return 0x38260 + 0x40000 * a;
 }
 
 /**
@@ -3903,9 +3657,7 @@ static inline u64 CAVM_CGXX_GMP_GMI_TXX_SGMII_CTL(u64 a)
 	__attribute__ ((pure, always_inline));
 static inline u64 CAVM_CGXX_GMP_GMI_TXX_SGMII_CTL(u64 a)
 {
-	if (CAVIUM_IS_MODEL(CAVIUM_CN9XXX) && (a <= 3))
-		return 0x38300 + 0x40000 * ((a) & 0x3);
-	return -1;
+	return 0x38300 + 0x40000 * a;
 }
 
 /**
@@ -3926,9 +3678,7 @@ static inline u64 CAVM_CGXX_GMP_GMI_TXX_SLOT(u64 a)
 	__attribute__ ((pure, always_inline));
 static inline u64 CAVM_CGXX_GMP_GMI_TXX_SLOT(u64 a)
 {
-	if (CAVIUM_IS_MODEL(CAVIUM_CN9XXX) && (a <= 3))
-		return 0x38220 + 0x40000 * ((a) & 0x3);
-	return -1;
+	return 0x38220 + 0x40000 * a;
 }
 
 /**
@@ -3949,9 +3699,7 @@ static inline u64 CAVM_CGXX_GMP_GMI_TXX_SOFT_PAUSE(u64 a)
 	__attribute__ ((pure, always_inline));
 static inline u64 CAVM_CGXX_GMP_GMI_TXX_SOFT_PAUSE(u64 a)
 {
-	if (CAVIUM_IS_MODEL(CAVIUM_CN9XXX) && (a <= 3))
-		return 0x38250 + 0x40000 * ((a) & 0x3);
-	return -1;
+	return 0x38250 + 0x40000 * a;
 }
 
 /**
@@ -3972,9 +3720,7 @@ static inline u64 CAVM_CGXX_GMP_GMI_TXX_THRESH(u64 a)
 	__attribute__ ((pure, always_inline));
 static inline u64 CAVM_CGXX_GMP_GMI_TXX_THRESH(u64 a)
 {
-	if (CAVIUM_IS_MODEL(CAVIUM_CN9XXX) && (a <= 3))
-		return 0x38210 + 0x40000 * ((a) & 0x3);
-	return -1;
+	return 0x38210 + 0x40000 * a;
 }
 
 /**
@@ -3995,9 +3741,7 @@ static inline u64 CAVM_CGXX_GMP_GMI_TX_COL_ATTEMPT(void)
 	__attribute__ ((pure, always_inline));
 static inline u64 CAVM_CGXX_GMP_GMI_TX_COL_ATTEMPT(void)
 {
-	if (CAVIUM_IS_MODEL(CAVIUM_CN9XXX))
-		return 0x39010;
-	return -1;
+	return 0x39010;
 }
 
 /**
@@ -4026,9 +3770,7 @@ static inline u64 CAVM_CGXX_GMP_GMI_TX_IFG(void)
 	__attribute__ ((pure, always_inline));
 static inline u64 CAVM_CGXX_GMP_GMI_TX_IFG(void)
 {
-	if (CAVIUM_IS_MODEL(CAVIUM_CN9XXX))
-		return 0x39000;
-	return -1;
+	return 0x39000;
 }
 
 /**
@@ -4050,9 +3792,7 @@ static inline u64 CAVM_CGXX_GMP_GMI_TX_JAM(void)
 	__attribute__ ((pure, always_inline));
 static inline u64 CAVM_CGXX_GMP_GMI_TX_JAM(void)
 {
-	if (CAVIUM_IS_MODEL(CAVIUM_CN9XXX))
-		return 0x39008;
-	return -1;
+	return 0x39008;
 }
 
 /**
@@ -4075,9 +3815,7 @@ static inline u64 CAVM_CGXX_GMP_GMI_TX_LFSR(void)
 	__attribute__ ((pure, always_inline));
 static inline u64 CAVM_CGXX_GMP_GMI_TX_LFSR(void)
 {
-	if (CAVIUM_IS_MODEL(CAVIUM_CN9XXX))
-		return 0x39028;
-	return -1;
+	return 0x39028;
 }
 
 /**
@@ -4098,9 +3836,7 @@ static inline u64 CAVM_CGXX_GMP_GMI_TX_PAUSE_PKT_DMAC(void)
 	__attribute__ ((pure, always_inline));
 static inline u64 CAVM_CGXX_GMP_GMI_TX_PAUSE_PKT_DMAC(void)
 {
-	if (CAVIUM_IS_MODEL(CAVIUM_CN9XXX))
-		return 0x39018;
-	return -1;
+	return 0x39018;
 }
 
 /**
@@ -4122,9 +3858,7 @@ static inline u64 CAVM_CGXX_GMP_GMI_TX_PAUSE_PKT_TYPE(void)
 	__attribute__ ((pure, always_inline));
 static inline u64 CAVM_CGXX_GMP_GMI_TX_PAUSE_PKT_TYPE(void)
 {
-	if (CAVIUM_IS_MODEL(CAVIUM_CN9XXX))
-		return 0x39020;
-	return -1;
+	return 0x39020;
 }
 
 /**
@@ -4165,9 +3899,7 @@ static inline u64 CAVM_CGXX_GMP_MISCX_CFG(u64 a)
 	__attribute__ ((pure, always_inline));
 static inline u64 CAVM_CGXX_GMP_MISCX_CFG(u64 a)
 {
-	if (CAVIUM_IS_MODEL(CAVIUM_CN9XXX) && (a <= 3))
-		return 0x34000 + 0x40000 * ((a) & 0x3);
-	return -1;
+	return 0x34000 + 0x40000 * a;
 }
 
 /**
@@ -4191,9 +3923,7 @@ static inline u64 CAVM_CGXX_GMP_PCSX_AN_EXPANSION(u64 a)
 	__attribute__ ((pure, always_inline));
 static inline u64 CAVM_CGXX_GMP_PCSX_AN_EXPANSION(u64 a)
 {
-	if (CAVIUM_IS_MODEL(CAVIUM_CN9XXX) && (a <= 3))
-		return 0x30a60 + 0x40000 * ((a) & 0x3);
-	return -1;
+	return 0x30a60 + 0x40000 * a;
 }
 
 /**
@@ -4221,9 +3951,7 @@ static inline u64 CAVM_CGXX_GMP_PCSX_AN_LP_ABIL_NP(u64 a)
 	__attribute__ ((pure, always_inline));
 static inline u64 CAVM_CGXX_GMP_PCSX_AN_LP_ABIL_NP(u64 a)
 {
-	if (CAVIUM_IS_MODEL(CAVIUM_CN9XXX) && (a <= 3))
-		return 0x30a80 + 0x40000 * ((a) & 0x3);
-	return -1;
+	return 0x30a80 + 0x40000 * a;
 }
 
 /**
@@ -4255,9 +3983,7 @@ static inline u64 CAVM_CGXX_GMP_PCSX_AN_NP_TX(u64 a)
 	__attribute__ ((pure, always_inline));
 static inline u64 CAVM_CGXX_GMP_PCSX_AN_NP_TX(u64 a)
 {
-	if (CAVIUM_IS_MODEL(CAVIUM_CN9XXX) && (a <= 3))
-		return 0x30a70 + 0x40000 * ((a) & 0x3);
-	return -1;
+	return 0x30a70 + 0x40000 * a;
 }
 
 /**
@@ -4278,9 +4004,7 @@ static inline u64 CAVM_CGXX_GMP_PCSX_DBG_CONTROL(u64 a)
 	__attribute__ ((pure, always_inline));
 static inline u64 CAVM_CGXX_GMP_PCSX_DBG_CONTROL(u64 a)
 {
-	if (CAVIUM_IS_MODEL(CAVIUM_CN9XXX) && (a <= 3))
-		return 0x31000 + 0x40000 * ((a) & 0x3);
-	return -1;
+	return 0x31000 + 0x40000 * a;
 }
 
 /**
@@ -4310,9 +4034,7 @@ static inline u64 CAVM_CGXX_GMP_PCSX_RX_EEE_WAKE(u64 a)
 	__attribute__ ((pure, always_inline));
 static inline u64 CAVM_CGXX_GMP_PCSX_RX_EEE_WAKE(u64 a)
 {
-	if (CAVIUM_IS_MODEL(CAVIUM_CN9XXX) && (a <= 3))
-		return 0x30910 + 0x40000 * ((a) & 0x3);
-	return -1;
+	return 0x30910 + 0x40000 * a;
 }
 
 /**
@@ -4340,9 +4062,7 @@ static inline u64 CAVM_CGXX_GMP_PCSX_RX_LPI_TIMING(u64 a)
 	__attribute__ ((pure, always_inline));
 static inline u64 CAVM_CGXX_GMP_PCSX_RX_LPI_TIMING(u64 a)
 {
-	if (CAVIUM_IS_MODEL(CAVIUM_CN9XXX) && (a <= 3))
-		return 0x30900 + 0x40000 * ((a) & 0x3);
-	return -1;
+	return 0x30900 + 0x40000 * a;
 }
 
 /**
@@ -4370,9 +4090,7 @@ static inline u64 CAVM_CGXX_GMP_PCSX_STATUS1(u64 a)
 	__attribute__ ((pure, always_inline));
 static inline u64 CAVM_CGXX_GMP_PCSX_STATUS1(u64 a)
 {
-	if (CAVIUM_IS_MODEL(CAVIUM_CN9XXX) && (a <= 3))
-		return 0x30880 + 0x40000 * ((a) & 0x3);
-	return -1;
+	return 0x30880 + 0x40000 * a;
 }
 
 /**
@@ -4401,9 +4119,7 @@ static inline u64 CAVM_CGXX_GMP_PCSX_TX_LPI_TIMING(u64 a)
 	__attribute__ ((pure, always_inline));
 static inline u64 CAVM_CGXX_GMP_PCSX_TX_LPI_TIMING(u64 a)
 {
-	if (CAVIUM_IS_MODEL(CAVIUM_CN9XXX) && (a <= 3))
-		return 0x30800 + 0x40000 * ((a) & 0x3);
-	return -1;
+	return 0x30800 + 0x40000 * a;
 }
 
 /**
@@ -4431,9 +4147,7 @@ static inline u64 CAVM_CGXX_GMP_PCS_ANX_ADV(u64 a)
 	__attribute__ ((pure, always_inline));
 static inline u64 CAVM_CGXX_GMP_PCS_ANX_ADV(u64 a)
 {
-	if (CAVIUM_IS_MODEL(CAVIUM_CN9XXX) && (a <= 3))
-		return 0x30010 + 0x40000 * ((a) & 0x3);
-	return -1;
+	return 0x30010 + 0x40000 * a;
 }
 
 /**
@@ -4458,9 +4172,7 @@ static inline u64 CAVM_CGXX_GMP_PCS_ANX_EXT_ST(u64 a)
 	__attribute__ ((pure, always_inline));
 static inline u64 CAVM_CGXX_GMP_PCS_ANX_EXT_ST(u64 a)
 {
-	if (CAVIUM_IS_MODEL(CAVIUM_CN9XXX) && (a <= 3))
-		return 0x30028 + 0x40000 * ((a) & 0x3);
-	return -1;
+	return 0x30028 + 0x40000 * a;
 }
 
 /**
@@ -4489,9 +4201,7 @@ static inline u64 CAVM_CGXX_GMP_PCS_ANX_LP_ABIL(u64 a)
 	__attribute__ ((pure, always_inline));
 static inline u64 CAVM_CGXX_GMP_PCS_ANX_LP_ABIL(u64 a)
 {
-	if (CAVIUM_IS_MODEL(CAVIUM_CN9XXX) && (a <= 3))
-		return 0x30018 + 0x40000 * ((a) & 0x3);
-	return -1;
+	return 0x30018 + 0x40000 * a;
 }
 
 /**
@@ -4519,9 +4229,7 @@ static inline u64 CAVM_CGXX_GMP_PCS_ANX_RESULTS(u64 a)
 	__attribute__ ((pure, always_inline));
 static inline u64 CAVM_CGXX_GMP_PCS_ANX_RESULTS(u64 a)
 {
-	if (CAVIUM_IS_MODEL(CAVIUM_CN9XXX) && (a <= 3))
-		return 0x30020 + 0x40000 * ((a) & 0x3);
-	return -1;
+	return 0x30020 + 0x40000 * a;
 }
 
 /**
@@ -4561,9 +4269,7 @@ static inline u64 CAVM_CGXX_GMP_PCS_INTX(u64 a)
 	__attribute__ ((pure, always_inline));
 static inline u64 CAVM_CGXX_GMP_PCS_INTX(u64 a)
 {
-	if (CAVIUM_IS_MODEL(CAVIUM_CN9XXX) && (a <= 3))
-		return 0x30080 + 0x40000 * ((a) & 0x3);
-	return -1;
+	return 0x30080 + 0x40000 * a;
 }
 
 /**
@@ -4604,9 +4310,7 @@ static inline u64 CAVM_CGXX_GMP_PCS_INTX_ENA_W1C(u64 a)
 	__attribute__ ((pure, always_inline));
 static inline u64 CAVM_CGXX_GMP_PCS_INTX_ENA_W1C(u64 a)
 {
-	if (CAVIUM_IS_MODEL(CAVIUM_CN9XXX) && (a <= 3))
-		return 0x30090 + 0x40000 * ((a) & 0x3);
-	return -1;
+	return 0x30090 + 0x40000 * a;
 }
 
 /**
@@ -4647,9 +4351,7 @@ static inline u64 CAVM_CGXX_GMP_PCS_INTX_ENA_W1S(u64 a)
 	__attribute__ ((pure, always_inline));
 static inline u64 CAVM_CGXX_GMP_PCS_INTX_ENA_W1S(u64 a)
 {
-	if (CAVIUM_IS_MODEL(CAVIUM_CN9XXX) && (a <= 3))
-		return 0x30098 + 0x40000 * ((a) & 0x3);
-	return -1;
+	return 0x30098 + 0x40000 * a;
 }
 
 /**
@@ -4690,9 +4392,7 @@ static inline u64 CAVM_CGXX_GMP_PCS_INTX_W1S(u64 a)
 	__attribute__ ((pure, always_inline));
 static inline u64 CAVM_CGXX_GMP_PCS_INTX_W1S(u64 a)
 {
-	if (CAVIUM_IS_MODEL(CAVIUM_CN9XXX) && (a <= 3))
-		return 0x30088 + 0x40000 * ((a) & 0x3);
-	return -1;
+	return 0x30088 + 0x40000 * a;
 }
 
 /**
@@ -4714,9 +4414,7 @@ static inline u64 CAVM_CGXX_GMP_PCS_LINKX_TIMER(u64 a)
 	__attribute__ ((pure, always_inline));
 static inline u64 CAVM_CGXX_GMP_PCS_LINKX_TIMER(u64 a)
 {
-	if (CAVIUM_IS_MODEL(CAVIUM_CN9XXX) && (a <= 3))
-		return 0x30040 + 0x40000 * ((a) & 0x3);
-	return -1;
+	return 0x30040 + 0x40000 * a;
 }
 
 /**
@@ -4769,9 +4467,7 @@ static inline u64 CAVM_CGXX_GMP_PCS_MISCX_CTL(u64 a)
 	__attribute__ ((pure, always_inline));
 static inline u64 CAVM_CGXX_GMP_PCS_MISCX_CTL(u64 a)
 {
-	if (CAVIUM_IS_MODEL(CAVIUM_CN9XXX) && (a <= 3))
-		return 0x30078 + 0x40000 * ((a) & 0x3);
-	return -1;
+	return 0x30078 + 0x40000 * a;
 }
 
 /**
@@ -4803,9 +4499,7 @@ static inline u64 CAVM_CGXX_GMP_PCS_MRX_CONTROL(u64 a)
 	__attribute__ ((pure, always_inline));
 static inline u64 CAVM_CGXX_GMP_PCS_MRX_CONTROL(u64 a)
 {
-	if (CAVIUM_IS_MODEL(CAVIUM_CN9XXX) && (a <= 3))
-		return 0x30000 + 0x40000 * ((a) & 0x3);
-	return -1;
+	return 0x30000 + 0x40000 * a;
 }
 
 /**
@@ -4845,9 +4539,7 @@ static inline u64 CAVM_CGXX_GMP_PCS_MRX_STATUS(u64 a)
 	__attribute__ ((pure, always_inline));
 static inline u64 CAVM_CGXX_GMP_PCS_MRX_STATUS(u64 a)
 {
-	if (CAVIUM_IS_MODEL(CAVIUM_CN9XXX) && (a <= 3))
-		return 0x30008 + 0x40000 * ((a) & 0x3);
-	return -1;
+	return 0x30008 + 0x40000 * a;
 }
 
 /**
@@ -4873,9 +4565,7 @@ static inline u64 CAVM_CGXX_GMP_PCS_RXX_STATES(u64 a)
 	__attribute__ ((pure, always_inline));
 static inline u64 CAVM_CGXX_GMP_PCS_RXX_STATES(u64 a)
 {
-	if (CAVIUM_IS_MODEL(CAVIUM_CN9XXX) && (a <= 3))
-		return 0x30058 + 0x40000 * ((a) & 0x3);
-	return -1;
+	return 0x30058 + 0x40000 * a;
 }
 
 /**
@@ -4897,9 +4587,7 @@ static inline u64 CAVM_CGXX_GMP_PCS_RXX_SYNC(u64 a)
 	__attribute__ ((pure, always_inline));
 static inline u64 CAVM_CGXX_GMP_PCS_RXX_SYNC(u64 a)
 {
-	if (CAVIUM_IS_MODEL(CAVIUM_CN9XXX) && (a <= 3))
-		return 0x30050 + 0x40000 * ((a) & 0x3);
-	return -1;
+	return 0x30050 + 0x40000 * a;
 }
 
 /**
@@ -4931,9 +4619,7 @@ static inline u64 CAVM_CGXX_GMP_PCS_SGMX_AN_ADV(u64 a)
 	__attribute__ ((pure, always_inline));
 static inline u64 CAVM_CGXX_GMP_PCS_SGMX_AN_ADV(u64 a)
 {
-	if (CAVIUM_IS_MODEL(CAVIUM_CN9XXX) && (a <= 3))
-		return 0x30068 + 0x40000 * ((a) & 0x3);
-	return -1;
+	return 0x30068 + 0x40000 * a;
 }
 
 /**
@@ -4970,9 +4656,7 @@ static inline u64 CAVM_CGXX_GMP_PCS_SGMX_LP_ADV(u64 a)
 	__attribute__ ((pure, always_inline));
 static inline u64 CAVM_CGXX_GMP_PCS_SGMX_LP_ADV(u64 a)
 {
-	if (CAVIUM_IS_MODEL(CAVIUM_CN9XXX) && (a <= 3))
-		return 0x30070 + 0x40000 * ((a) & 0x3);
-	return -1;
+	return 0x30070 + 0x40000 * a;
 }
 
 /**
@@ -4995,9 +4679,7 @@ static inline u64 CAVM_CGXX_GMP_PCS_TXX_STATES(u64 a)
 	__attribute__ ((pure, always_inline));
 static inline u64 CAVM_CGXX_GMP_PCS_TXX_STATES(u64 a)
 {
-	if (CAVIUM_IS_MODEL(CAVIUM_CN9XXX) && (a <= 3))
-		return 0x30060 + 0x40000 * ((a) & 0x3);
-	return -1;
+	return 0x30060 + 0x40000 * a;
 }
 
 /**
@@ -5024,9 +4706,7 @@ static inline u64 CAVM_CGXX_GMP_PCS_TX_RXX_POLARITY(u64 a)
 	__attribute__ ((pure, always_inline));
 static inline u64 CAVM_CGXX_GMP_PCS_TX_RXX_POLARITY(u64 a)
 {
-	if (CAVIUM_IS_MODEL(CAVIUM_CN9XXX) && (a <= 3))
-		return 0x30048 + 0x40000 * ((a) & 0x3);
-	return -1;
+	return 0x30048 + 0x40000 * a;
 }
 
 /**
@@ -5048,9 +4728,7 @@ static inline u64 CAVM_CGXX_MSIX_PBAX(u64 a)
 	__attribute__ ((pure, always_inline));
 static inline u64 CAVM_CGXX_MSIX_PBAX(u64 a)
 {
-	if (CAVIUM_IS_MODEL(CAVIUM_CN9XXX) && (a == 0))
-		return 0xf0000 + 8 * ((a) & 0x0);
-	return -1;
+	return 0xf0000 + 8 * a;
 }
 
 /**
@@ -5074,9 +4752,7 @@ static inline u64 CAVM_CGXX_MSIX_VECX_ADDR(u64 a)
 	__attribute__ ((pure, always_inline));
 static inline u64 CAVM_CGXX_MSIX_VECX_ADDR(u64 a)
 {
-	if (CAVIUM_IS_MODEL(CAVIUM_CN9XXX) && (a <= 37))
-		return 0 + 0x10 * ((a) & 0x3f);
-	return -1;
+	return 0 + 0x10 * a;
 }
 
 /**
@@ -5099,9 +4775,7 @@ static inline u64 CAVM_CGXX_MSIX_VECX_CTL(u64 a)
 	__attribute__ ((pure, always_inline));
 static inline u64 CAVM_CGXX_MSIX_VECX_CTL(u64 a)
 {
-	if (CAVIUM_IS_MODEL(CAVIUM_CN9XXX) && (a <= 37))
-		return 8 + 0x10 * ((a) & 0x3f);
-	return -1;
+	return 8 + 0x10 * a;
 }
 
 /**
@@ -5126,9 +4800,7 @@ static inline u64 CAVM_CGXX_SMUX_BP_TEST(u64 a)
 	__attribute__ ((pure, always_inline));
 static inline u64 CAVM_CGXX_SMUX_BP_TEST(u64 a)
 {
-	if (CAVIUM_IS_MODEL(CAVIUM_CN9XXX) && (a <= 3))
-		return 0x20230 + 0x40000 * ((a) & 0x3);
-	return -1;
+	return 0x20230 + 0x40000 * a;
 }
 
 /**
@@ -5157,9 +4829,7 @@ static inline u64 CAVM_CGXX_SMUX_CBFC_CTL(u64 a)
 	__attribute__ ((pure, always_inline));
 static inline u64 CAVM_CGXX_SMUX_CBFC_CTL(u64 a)
 {
-	if (CAVIUM_IS_MODEL(CAVIUM_CN9XXX) && (a <= 3))
-		return 0x20218 + 0x40000 * ((a) & 0x3);
-	return -1;
+	return 0x20218 + 0x40000 * a;
 }
 
 /**
@@ -5181,9 +4851,7 @@ static inline u64 CAVM_CGXX_SMUX_CTRL(u64 a)
 	__attribute__ ((pure, always_inline));
 static inline u64 CAVM_CGXX_SMUX_CTRL(u64 a)
 {
-	if (CAVIUM_IS_MODEL(CAVIUM_CN9XXX) && (a <= 3))
-		return 0x20200 + 0x40000 * ((a) & 0x3);
-	return -1;
+	return 0x20200 + 0x40000 * a;
 }
 
 /**
@@ -5210,9 +4878,7 @@ static inline u64 CAVM_CGXX_SMUX_EXT_LOOPBACK(u64 a)
 	__attribute__ ((pure, always_inline));
 static inline u64 CAVM_CGXX_SMUX_EXT_LOOPBACK(u64 a)
 {
-	if (CAVIUM_IS_MODEL(CAVIUM_CN9XXX) && (a <= 3))
-		return 0x20208 + 0x40000 * ((a) & 0x3);
-	return -1;
+	return 0x20208 + 0x40000 * a;
 }
 
 /**
@@ -5253,9 +4919,7 @@ static inline u64 CAVM_CGXX_SMUX_HG2_CONTROL(u64 a)
 	__attribute__ ((pure, always_inline));
 static inline u64 CAVM_CGXX_SMUX_HG2_CONTROL(u64 a)
 {
-	if (CAVIUM_IS_MODEL(CAVIUM_CN9XXX) && (a <= 3))
-		return 0x20210 + 0x40000 * ((a) & 0x3);
-	return -1;
+	return 0x20210 + 0x40000 * a;
 }
 
 /**
@@ -5283,9 +4947,7 @@ static inline u64 CAVM_CGXX_SMUX_MMSI_CTL_STA(u64 a)
 	__attribute__ ((pure, always_inline));
 static inline u64 CAVM_CGXX_SMUX_MMSI_CTL_STA(u64 a)
 {
-	if (CAVIUM_IS_MODEL(CAVIUM_CN9XXX) && (a <= 3))
-		return 0x20220 + 0x40000 * ((a) & 0x3);
-	return -1;
+	return 0x20220 + 0x40000 * a;
 }
 
 /**
@@ -5308,9 +4970,7 @@ static inline u64 CAVM_CGXX_SMUX_RX_BAD_COL_CTRL(u64 a)
 	__attribute__ ((pure, always_inline));
 static inline u64 CAVM_CGXX_SMUX_RX_BAD_COL_CTRL(u64 a)
 {
-	if (CAVIUM_IS_MODEL(CAVIUM_CN9XXX) && (a <= 3))
-		return 0x20060 + 0x40000 * ((a) & 0x3);
-	return -1;
+	return 0x20060 + 0x40000 * a;
 }
 
 /**
@@ -5330,9 +4990,7 @@ static inline u64 CAVM_CGXX_SMUX_RX_BAD_COL_DATA_HI(u64 a)
 	__attribute__ ((pure, always_inline));
 static inline u64 CAVM_CGXX_SMUX_RX_BAD_COL_DATA_HI(u64 a)
 {
-	if (CAVIUM_IS_MODEL(CAVIUM_CN9XXX) && (a <= 3))
-		return 0x20058 + 0x40000 * ((a) & 0x3);
-	return -1;
+	return 0x20058 + 0x40000 * a;
 }
 
 /**
@@ -5352,9 +5010,7 @@ static inline u64 CAVM_CGXX_SMUX_RX_BAD_COL_DATA_LO(u64 a)
 	__attribute__ ((pure, always_inline));
 static inline u64 CAVM_CGXX_SMUX_RX_BAD_COL_DATA_LO(u64 a)
 {
-	if (CAVIUM_IS_MODEL(CAVIUM_CN9XXX) && (a <= 3))
-		return 0x20050 + 0x40000 * ((a) & 0x3);
-	return -1;
+	return 0x20050 + 0x40000 * a;
 }
 
 /**
@@ -5375,9 +5031,7 @@ static inline u64 CAVM_CGXX_SMUX_RX_CTL(u64 a)
 	__attribute__ ((pure, always_inline));
 static inline u64 CAVM_CGXX_SMUX_RX_CTL(u64 a)
 {
-	if (CAVIUM_IS_MODEL(CAVIUM_CN9XXX) && (a <= 3))
-		return 0x20048 + 0x40000 * ((a) & 0x3);
-	return -1;
+	return 0x20048 + 0x40000 * a;
 }
 
 /**
@@ -5403,9 +5057,7 @@ static inline u64 CAVM_CGXX_SMUX_RX_DECISION(u64 a)
 	__attribute__ ((pure, always_inline));
 static inline u64 CAVM_CGXX_SMUX_RX_DECISION(u64 a)
 {
-	if (CAVIUM_IS_MODEL(CAVIUM_CN9XXX) && (a <= 3))
-		return 0x20038 + 0x40000 * ((a) & 0x3);
-	return -1;
+	return 0x20038 + 0x40000 * a;
 }
 
 /**
@@ -5433,9 +5085,7 @@ static inline u64 CAVM_CGXX_SMUX_RX_FRM_CHK(u64 a)
 	__attribute__ ((pure, always_inline));
 static inline u64 CAVM_CGXX_SMUX_RX_FRM_CHK(u64 a)
 {
-	if (CAVIUM_IS_MODEL(CAVIUM_CN9XXX) && (a <= 3))
-		return 0x20028 + 0x40000 * ((a) & 0x3);
-	return -1;
+	return 0x20028 + 0x40000 * a;
 }
 
 /**
@@ -5475,9 +5125,7 @@ static inline u64 CAVM_CGXX_SMUX_RX_FRM_CTL(u64 a)
 	__attribute__ ((pure, always_inline));
 static inline u64 CAVM_CGXX_SMUX_RX_FRM_CTL(u64 a)
 {
-	if (CAVIUM_IS_MODEL(CAVIUM_CN9XXX) && (a <= 3))
-		return 0x20020 + 0x40000 * ((a) & 0x3);
-	return -1;
+	return 0x20020 + 0x40000 * a;
 }
 
 /**
@@ -5516,9 +5164,7 @@ static inline u64 CAVM_CGXX_SMUX_RX_INT(u64 a)
 	__attribute__ ((pure, always_inline));
 static inline u64 CAVM_CGXX_SMUX_RX_INT(u64 a)
 {
-	if (CAVIUM_IS_MODEL(CAVIUM_CN9XXX) && (a <= 3))
-		return 0x20000 + 0x40000 * ((a) & 0x3);
-	return -1;
+	return 0x20000 + 0x40000 * a;
 }
 
 /**
@@ -5553,9 +5199,7 @@ static inline u64 CAVM_CGXX_SMUX_RX_INT_ENA_W1C(u64 a)
 	__attribute__ ((pure, always_inline));
 static inline u64 CAVM_CGXX_SMUX_RX_INT_ENA_W1C(u64 a)
 {
-	if (CAVIUM_IS_MODEL(CAVIUM_CN9XXX) && (a <= 3))
-		return 0x20010 + 0x40000 * ((a) & 0x3);
-	return -1;
+	return 0x20010 + 0x40000 * a;
 }
 
 /**
@@ -5590,9 +5234,7 @@ static inline u64 CAVM_CGXX_SMUX_RX_INT_ENA_W1S(u64 a)
 	__attribute__ ((pure, always_inline));
 static inline u64 CAVM_CGXX_SMUX_RX_INT_ENA_W1S(u64 a)
 {
-	if (CAVIUM_IS_MODEL(CAVIUM_CN9XXX) && (a <= 3))
-		return 0x20018 + 0x40000 * ((a) & 0x3);
-	return -1;
+	return 0x20018 + 0x40000 * a;
 }
 
 /**
@@ -5627,9 +5269,7 @@ static inline u64 CAVM_CGXX_SMUX_RX_INT_W1S(u64 a)
 	__attribute__ ((pure, always_inline));
 static inline u64 CAVM_CGXX_SMUX_RX_INT_W1S(u64 a)
 {
-	if (CAVIUM_IS_MODEL(CAVIUM_CN9XXX) && (a <= 3))
-		return 0x20008 + 0x40000 * ((a) & 0x3);
-	return -1;
+	return 0x20008 + 0x40000 * a;
 }
 
 /**
@@ -5655,9 +5295,7 @@ static inline u64 CAVM_CGXX_SMUX_RX_JABBER(u64 a)
 	__attribute__ ((pure, always_inline));
 static inline u64 CAVM_CGXX_SMUX_RX_JABBER(u64 a)
 {
-	if (CAVIUM_IS_MODEL(CAVIUM_CN9XXX) && (a <= 3))
-		return 0x20030 + 0x40000 * ((a) & 0x3);
-	return -1;
+	return 0x20030 + 0x40000 * a;
 }
 
 /**
@@ -5698,9 +5336,7 @@ static inline u64 CAVM_CGXX_SMUX_RX_UDD_SKP(u64 a)
 	__attribute__ ((pure, always_inline));
 static inline u64 CAVM_CGXX_SMUX_RX_UDD_SKP(u64 a)
 {
-	if (CAVIUM_IS_MODEL(CAVIUM_CN9XXX) && (a <= 3))
-		return 0x20040 + 0x40000 * ((a) & 0x3);
-	return -1;
+	return 0x20040 + 0x40000 * a;
 }
 
 /**
@@ -5722,9 +5358,7 @@ static inline u64 CAVM_CGXX_SMUX_RX_WOL_CTRL0(u64 a)
 	__attribute__ ((pure, always_inline));
 static inline u64 CAVM_CGXX_SMUX_RX_WOL_CTRL0(u64 a)
 {
-	if (CAVIUM_IS_MODEL(CAVIUM_CN9XXX) && (a <= 3))
-		return 0x20068 + 0x40000 * ((a) & 0x3);
-	return -1;
+	return 0x20068 + 0x40000 * a;
 }
 
 /**
@@ -5744,9 +5378,7 @@ static inline u64 CAVM_CGXX_SMUX_RX_WOL_CTRL1(u64 a)
 	__attribute__ ((pure, always_inline));
 static inline u64 CAVM_CGXX_SMUX_RX_WOL_CTRL1(u64 a)
 {
-	if (CAVIUM_IS_MODEL(CAVIUM_CN9XXX) && (a <= 3))
-		return 0x20070 + 0x40000 * ((a) & 0x3);
-	return -1;
+	return 0x20070 + 0x40000 * a;
 }
 
 /**
@@ -5768,9 +5400,7 @@ static inline u64 CAVM_CGXX_SMUX_RX_WOL_INT(u64 a)
 	__attribute__ ((pure, always_inline));
 static inline u64 CAVM_CGXX_SMUX_RX_WOL_INT(u64 a)
 {
-	if (CAVIUM_IS_MODEL(CAVIUM_CN9XXX) && (a <= 3))
-		return 0x20078 + 0x40000 * ((a) & 0x3);
-	return -1;
+	return 0x20078 + 0x40000 * a;
 }
 
 /**
@@ -5792,9 +5422,7 @@ static inline u64 CAVM_CGXX_SMUX_RX_WOL_INT_ENA_W1C(u64 a)
 	__attribute__ ((pure, always_inline));
 static inline u64 CAVM_CGXX_SMUX_RX_WOL_INT_ENA_W1C(u64 a)
 {
-	if (CAVIUM_IS_MODEL(CAVIUM_CN9XXX) && (a <= 3))
-		return 0x20088 + 0x40000 * ((a) & 0x3);
-	return -1;
+	return 0x20088 + 0x40000 * a;
 }
 
 /**
@@ -5816,9 +5444,7 @@ static inline u64 CAVM_CGXX_SMUX_RX_WOL_INT_ENA_W1S(u64 a)
 	__attribute__ ((pure, always_inline));
 static inline u64 CAVM_CGXX_SMUX_RX_WOL_INT_ENA_W1S(u64 a)
 {
-	if (CAVIUM_IS_MODEL(CAVIUM_CN9XXX) && (a <= 3))
-		return 0x20090 + 0x40000 * ((a) & 0x3);
-	return -1;
+	return 0x20090 + 0x40000 * a;
 }
 
 /**
@@ -5840,9 +5466,7 @@ static inline u64 CAVM_CGXX_SMUX_RX_WOL_INT_W1S(u64 a)
 	__attribute__ ((pure, always_inline));
 static inline u64 CAVM_CGXX_SMUX_RX_WOL_INT_W1S(u64 a)
 {
-	if (CAVIUM_IS_MODEL(CAVIUM_CN9XXX) && (a <= 3))
-		return 0x20080 + 0x40000 * ((a) & 0x3);
-	return -1;
+	return 0x20080 + 0x40000 * a;
 }
 
 /**
@@ -5863,9 +5487,7 @@ static inline u64 CAVM_CGXX_SMUX_SMAC(u64 a)
 	__attribute__ ((pure, always_inline));
 static inline u64 CAVM_CGXX_SMUX_SMAC(u64 a)
 {
-	if (CAVIUM_IS_MODEL(CAVIUM_CN9XXX) && (a <= 3))
-		return 0x20108 + 0x40000 * ((a) & 0x3);
-	return -1;
+	return 0x20108 + 0x40000 * a;
 }
 
 /**
@@ -5891,9 +5513,7 @@ static inline u64 CAVM_CGXX_SMUX_TX_APPEND(u64 a)
 	__attribute__ ((pure, always_inline));
 static inline u64 CAVM_CGXX_SMUX_TX_APPEND(u64 a)
 {
-	if (CAVIUM_IS_MODEL(CAVIUM_CN9XXX) && (a <= 3))
-		return 0x20100 + 0x40000 * ((a) & 0x3);
-	return -1;
+	return 0x20100 + 0x40000 * a;
 }
 
 /**
@@ -5922,9 +5542,7 @@ static inline u64 CAVM_CGXX_SMUX_TX_CTL(u64 a)
 	__attribute__ ((pure, always_inline));
 static inline u64 CAVM_CGXX_SMUX_TX_CTL(u64 a)
 {
-	if (CAVIUM_IS_MODEL(CAVIUM_CN9XXX) && (a <= 3))
-		return 0x20178 + 0x40000 * ((a) & 0x3);
-	return -1;
+	return 0x20178 + 0x40000 * a;
 }
 
 /**
@@ -5945,9 +5563,7 @@ static inline u64 CAVM_CGXX_SMUX_TX_DACK(u64 a)
 	__attribute__ ((pure, always_inline));
 static inline u64 CAVM_CGXX_SMUX_TX_DACK(u64 a)
 {
-	if (CAVIUM_IS_MODEL(CAVIUM_CN9XXX) && (a <= 3))
-		return 0x201b0 + 0x40000 * ((a) & 0x3);
-	return -1;
+	return 0x201b0 + 0x40000 * a;
 }
 
 /**
@@ -5968,9 +5584,7 @@ static inline u64 CAVM_CGXX_SMUX_TX_DCNT(u64 a)
 	__attribute__ ((pure, always_inline));
 static inline u64 CAVM_CGXX_SMUX_TX_DCNT(u64 a)
 {
-	if (CAVIUM_IS_MODEL(CAVIUM_CN9XXX) && (a <= 3))
-		return 0x201a8 + 0x40000 * ((a) & 0x3);
-	return -1;
+	return 0x201a8 + 0x40000 * a;
 }
 
 /**
@@ -6003,9 +5617,7 @@ static inline u64 CAVM_CGXX_SMUX_TX_EEE(u64 a)
 	__attribute__ ((pure, always_inline));
 static inline u64 CAVM_CGXX_SMUX_TX_EEE(u64 a)
 {
-	if (CAVIUM_IS_MODEL(CAVIUM_CN9XXX) && (a <= 3))
-		return 0x20190 + 0x40000 * ((a) & 0x3);
-	return -1;
+	return 0x20190 + 0x40000 * a;
 }
 
 /**
@@ -6034,9 +5646,7 @@ static inline u64 CAVM_CGXX_SMUX_TX_EEE_TIMER_STATUS(u64 a)
 	__attribute__ ((pure, always_inline));
 static inline u64 CAVM_CGXX_SMUX_TX_EEE_TIMER_STATUS(u64 a)
 {
-	if (CAVIUM_IS_MODEL(CAVIUM_CN9XXX) && (a <= 3))
-		return 0x201a0 + 0x40000 * ((a) & 0x3);
-	return -1;
+	return 0x201a0 + 0x40000 * a;
 }
 
 /**
@@ -6063,9 +5673,7 @@ static inline u64 CAVM_CGXX_SMUX_TX_EEE_TIMING(u64 a)
 	__attribute__ ((pure, always_inline));
 static inline u64 CAVM_CGXX_SMUX_TX_EEE_TIMING(u64 a)
 {
-	if (CAVIUM_IS_MODEL(CAVIUM_CN9XXX) && (a <= 3))
-		return 0x20198 + 0x40000 * ((a) & 0x3);
-	return -1;
+	return 0x20198 + 0x40000 * a;
 }
 
 /**
@@ -6106,9 +5714,7 @@ static inline u64 CAVM_CGXX_SMUX_TX_IFG(u64 a)
 	__attribute__ ((pure, always_inline));
 static inline u64 CAVM_CGXX_SMUX_TX_IFG(u64 a)
 {
-	if (CAVIUM_IS_MODEL(CAVIUM_CN9XXX) && (a <= 3))
-		return 0x20160 + 0x40000 * ((a) & 0x3);
-	return -1;
+	return 0x20160 + 0x40000 * a;
 }
 
 /**
@@ -6134,9 +5740,7 @@ static inline u64 CAVM_CGXX_SMUX_TX_INT(u64 a)
 	__attribute__ ((pure, always_inline));
 static inline u64 CAVM_CGXX_SMUX_TX_INT(u64 a)
 {
-	if (CAVIUM_IS_MODEL(CAVIUM_CN9XXX) && (a <= 3))
-		return 0x20140 + 0x40000 * ((a) & 0x3);
-	return -1;
+	return 0x20140 + 0x40000 * a;
 }
 
 /**
@@ -6163,9 +5767,7 @@ static inline u64 CAVM_CGXX_SMUX_TX_INT_ENA_W1C(u64 a)
 	__attribute__ ((pure, always_inline));
 static inline u64 CAVM_CGXX_SMUX_TX_INT_ENA_W1C(u64 a)
 {
-	if (CAVIUM_IS_MODEL(CAVIUM_CN9XXX) && (a <= 3))
-		return 0x20150 + 0x40000 * ((a) & 0x3);
-	return -1;
+	return 0x20150 + 0x40000 * a;
 }
 
 /**
@@ -6192,9 +5794,7 @@ static inline u64 CAVM_CGXX_SMUX_TX_INT_ENA_W1S(u64 a)
 	__attribute__ ((pure, always_inline));
 static inline u64 CAVM_CGXX_SMUX_TX_INT_ENA_W1S(u64 a)
 {
-	if (CAVIUM_IS_MODEL(CAVIUM_CN9XXX) && (a <= 3))
-		return 0x20158 + 0x40000 * ((a) & 0x3);
-	return -1;
+	return 0x20158 + 0x40000 * a;
 }
 
 /**
@@ -6221,9 +5821,7 @@ static inline u64 CAVM_CGXX_SMUX_TX_INT_W1S(u64 a)
 	__attribute__ ((pure, always_inline));
 static inline u64 CAVM_CGXX_SMUX_TX_INT_W1S(u64 a)
 {
-	if (CAVIUM_IS_MODEL(CAVIUM_CN9XXX) && (a <= 3))
-		return 0x20148 + 0x40000 * ((a) & 0x3);
-	return -1;
+	return 0x20148 + 0x40000 * a;
 }
 
 /**
@@ -6246,9 +5844,7 @@ static inline u64 CAVM_CGXX_SMUX_TX_MIN_PKT(u64 a)
 	__attribute__ ((pure, always_inline));
 static inline u64 CAVM_CGXX_SMUX_TX_MIN_PKT(u64 a)
 {
-	if (CAVIUM_IS_MODEL(CAVIUM_CN9XXX) && (a <= 3))
-		return 0x20118 + 0x40000 * ((a) & 0x3);
-	return -1;
+	return 0x20118 + 0x40000 * a;
 }
 
 /**
@@ -6270,9 +5866,7 @@ static inline u64 CAVM_CGXX_SMUX_TX_PAUSE_PKT_DMAC(u64 a)
 	__attribute__ ((pure, always_inline));
 static inline u64 CAVM_CGXX_SMUX_TX_PAUSE_PKT_DMAC(u64 a)
 {
-	if (CAVIUM_IS_MODEL(CAVIUM_CN9XXX) && (a <= 3))
-		return 0x20168 + 0x40000 * ((a) & 0x3);
-	return -1;
+	return 0x20168 + 0x40000 * a;
 }
 
 /**
@@ -6296,9 +5890,7 @@ static inline u64 CAVM_CGXX_SMUX_TX_PAUSE_PKT_INTERVAL(u64 a)
 	__attribute__ ((pure, always_inline));
 static inline u64 CAVM_CGXX_SMUX_TX_PAUSE_PKT_INTERVAL(u64 a)
 {
-	if (CAVIUM_IS_MODEL(CAVIUM_CN9XXX) && (a <= 3))
-		return 0x20120 + 0x40000 * ((a) & 0x3);
-	return -1;
+	return 0x20120 + 0x40000 * a;
 }
 
 /**
@@ -6319,9 +5911,7 @@ static inline u64 CAVM_CGXX_SMUX_TX_PAUSE_PKT_TIME(u64 a)
 	__attribute__ ((pure, always_inline));
 static inline u64 CAVM_CGXX_SMUX_TX_PAUSE_PKT_TIME(u64 a)
 {
-	if (CAVIUM_IS_MODEL(CAVIUM_CN9XXX) && (a <= 3))
-		return 0x20110 + 0x40000 * ((a) & 0x3);
-	return -1;
+	return 0x20110 + 0x40000 * a;
 }
 
 /**
@@ -6343,9 +5933,7 @@ static inline u64 CAVM_CGXX_SMUX_TX_PAUSE_PKT_TYPE(u64 a)
 	__attribute__ ((pure, always_inline));
 static inline u64 CAVM_CGXX_SMUX_TX_PAUSE_PKT_TYPE(u64 a)
 {
-	if (CAVIUM_IS_MODEL(CAVIUM_CN9XXX) && (a <= 3))
-		return 0x20170 + 0x40000 * ((a) & 0x3);
-	return -1;
+	return 0x20170 + 0x40000 * a;
 }
 
 /**
@@ -6367,9 +5955,7 @@ static inline u64 CAVM_CGXX_SMUX_TX_PAUSE_TOGO(u64 a)
 	__attribute__ ((pure, always_inline));
 static inline u64 CAVM_CGXX_SMUX_TX_PAUSE_TOGO(u64 a)
 {
-	if (CAVIUM_IS_MODEL(CAVIUM_CN9XXX) && (a <= 3))
-		return 0x20130 + 0x40000 * ((a) & 0x3);
-	return -1;
+	return 0x20130 + 0x40000 * a;
 }
 
 /**
@@ -6390,9 +5976,7 @@ static inline u64 CAVM_CGXX_SMUX_TX_PAUSE_ZERO(u64 a)
 	__attribute__ ((pure, always_inline));
 static inline u64 CAVM_CGXX_SMUX_TX_PAUSE_ZERO(u64 a)
 {
-	if (CAVIUM_IS_MODEL(CAVIUM_CN9XXX) && (a <= 3))
-		return 0x20138 + 0x40000 * ((a) & 0x3);
-	return -1;
+	return 0x20138 + 0x40000 * a;
 }
 
 /**
@@ -6413,9 +5997,7 @@ static inline u64 CAVM_CGXX_SMUX_TX_SOFT_PAUSE(u64 a)
 	__attribute__ ((pure, always_inline));
 static inline u64 CAVM_CGXX_SMUX_TX_SOFT_PAUSE(u64 a)
 {
-	if (CAVIUM_IS_MODEL(CAVIUM_CN9XXX) && (a <= 3))
-		return 0x20128 + 0x40000 * ((a) & 0x3);
-	return -1;
+	return 0x20128 + 0x40000 * a;
 }
 
 /**
@@ -6442,9 +6024,7 @@ static inline u64 CAVM_CGXX_SMUX_TX_THRESH(u64 a)
 	__attribute__ ((pure, always_inline));
 static inline u64 CAVM_CGXX_SMUX_TX_THRESH(u64 a)
 {
-	if (CAVIUM_IS_MODEL(CAVIUM_CN9XXX) && (a <= 3))
-		return 0x20180 + 0x40000 * ((a) & 0x3);
-	return -1;
+	return 0x20180 + 0x40000 * a;
 }
 
 /**
@@ -6497,9 +6077,7 @@ static inline u64 CAVM_CGXX_SPUX_AN_ADV(u64 a)
 	__attribute__ ((pure, always_inline));
 static inline u64 CAVM_CGXX_SPUX_AN_ADV(u64 a)
 {
-	if (CAVIUM_IS_MODEL(CAVIUM_CN9XXX) && (a <= 3))
-		return 0x10198 + 0x40000 * ((a) & 0x3);
-	return -1;
+	return 0x10198 + 0x40000 * a;
 }
 
 /**
@@ -6519,17 +6097,21 @@ union cavm_cgxx_spux_an_bp_status {
 		u64 n1g_kx                           : 1;
 		u64 n10g_kx4                         : 1;
 		u64 n10g_kr                          : 1;
+		u64 n25g_kr1                         : 1;
+		u64 n25g_cr1                         : 1;
 		u64 n25g_krs_crs                     : 1;
 		u64 n25g_kr_cr                       : 1;
 		u64 n40g_kr4                         : 1;
 		u64 n40g_cr4                         : 1;
+		u64 n50g_kr2                         : 1;
+		u64 n50g_cr2                         : 1;
 		u64 n100g_cr10                       : 1;
 		u64 n100g_kp4                        : 1;
 		u64 n100g_kr4                        : 1;
 		u64 n100g_cr4                        : 1;
 		u64 fec                              : 1;
 		u64 rs_fec                           : 1;
-		u64 reserved_14_63                   : 50;
+		u64 reserved_18_63                   : 46;
 	} s;
 	/* struct cavm_cgxx_spux_an_bp_status_s cn; */
 };
@@ -6538,9 +6120,7 @@ static inline u64 CAVM_CGXX_SPUX_AN_BP_STATUS(u64 a)
 	__attribute__ ((pure, always_inline));
 static inline u64 CAVM_CGXX_SPUX_AN_BP_STATUS(u64 a)
 {
-	if (CAVIUM_IS_MODEL(CAVIUM_CN9XXX) && (a <= 3))
-		return 0x101b8 + 0x40000 * ((a) & 0x3);
-	return -1;
+	return 0x101b8 + 0x40000 * a;
 }
 
 /**
@@ -6569,9 +6149,7 @@ static inline u64 CAVM_CGXX_SPUX_AN_CONTROL(u64 a)
 	__attribute__ ((pure, always_inline));
 static inline u64 CAVM_CGXX_SPUX_AN_CONTROL(u64 a)
 {
-	if (CAVIUM_IS_MODEL(CAVIUM_CN9XXX) && (a <= 3))
-		return 0x10188 + 0x40000 * ((a) & 0x3);
-	return -1;
+	return 0x10188 + 0x40000 * a;
 }
 
 /**
@@ -6619,9 +6197,7 @@ static inline u64 CAVM_CGXX_SPUX_AN_LP_BASE(u64 a)
 	__attribute__ ((pure, always_inline));
 static inline u64 CAVM_CGXX_SPUX_AN_LP_BASE(u64 a)
 {
-	if (CAVIUM_IS_MODEL(CAVIUM_CN9XXX) && (a <= 3))
-		return 0x101a0 + 0x40000 * ((a) & 0x3);
-	return -1;
+	return 0x101a0 + 0x40000 * a;
 }
 
 /**
@@ -6650,9 +6226,7 @@ static inline u64 CAVM_CGXX_SPUX_AN_LP_XNP(u64 a)
 	__attribute__ ((pure, always_inline));
 static inline u64 CAVM_CGXX_SPUX_AN_LP_XNP(u64 a)
 {
-	if (CAVIUM_IS_MODEL(CAVIUM_CN9XXX) && (a <= 3))
-		return 0x101b0 + 0x40000 * ((a) & 0x3);
-	return -1;
+	return 0x101b0 + 0x40000 * a;
 }
 
 /**
@@ -6682,9 +6256,7 @@ static inline u64 CAVM_CGXX_SPUX_AN_STATUS(u64 a)
 	__attribute__ ((pure, always_inline));
 static inline u64 CAVM_CGXX_SPUX_AN_STATUS(u64 a)
 {
-	if (CAVIUM_IS_MODEL(CAVIUM_CN9XXX) && (a <= 3))
-		return 0x10190 + 0x40000 * ((a) & 0x3);
-	return -1;
+	return 0x10190 + 0x40000 * a;
 }
 
 /**
@@ -6717,9 +6289,7 @@ static inline u64 CAVM_CGXX_SPUX_AN_XNP_TX(u64 a)
 	__attribute__ ((pure, always_inline));
 static inline u64 CAVM_CGXX_SPUX_AN_XNP_TX(u64 a)
 {
-	if (CAVIUM_IS_MODEL(CAVIUM_CN9XXX) && (a <= 3))
-		return 0x101a8 + 0x40000 * ((a) & 0x3);
-	return -1;
+	return 0x101a8 + 0x40000 * a;
 }
 
 /**
@@ -6753,9 +6323,7 @@ static inline u64 CAVM_CGXX_SPUX_BR_ALGN_STATUS(u64 a)
 	__attribute__ ((pure, always_inline));
 static inline u64 CAVM_CGXX_SPUX_BR_ALGN_STATUS(u64 a)
 {
-	if (CAVIUM_IS_MODEL(CAVIUM_CN9XXX) && (a <= 3))
-		return 0x10050 + 0x40000 * ((a) & 0x3);
-	return -1;
+	return 0x10050 + 0x40000 * a;
 }
 
 /**
@@ -6800,9 +6368,7 @@ static inline u64 CAVM_CGXX_SPUX_BR_LANE_MAPX(u64 a, u64 b)
 	__attribute__ ((pure, always_inline));
 static inline u64 CAVM_CGXX_SPUX_BR_LANE_MAPX(u64 a, u64 b)
 {
-	if (CAVIUM_IS_MODEL(CAVIUM_CN9XXX) && ((a <= 3) && (b <= 19)))
-		return 0x10600 + 0x40000 * ((a) & 0x3) + 8 * ((b) & 0x1f);
-	return -1;
+	return 0x10600 + 0x40000 * a + 8 * b;
 }
 
 /**
@@ -6825,9 +6391,7 @@ static inline u64 CAVM_CGXX_SPUX_BR_PMD_CONTROL(u64 a)
 	__attribute__ ((pure, always_inline));
 static inline u64 CAVM_CGXX_SPUX_BR_PMD_CONTROL(u64 a)
 {
-	if (CAVIUM_IS_MODEL(CAVIUM_CN9XXX) && (a <= 3))
-		return 0x100a8 + 0x40000 * ((a) & 0x3);
-	return -1;
+	return 0x100a8 + 0x40000 * a;
 }
 
 /**
@@ -6867,9 +6431,7 @@ static inline u64 CAVM_CGXX_SPUX_BR_PMD_LD_CUP(u64 a)
 	__attribute__ ((pure, always_inline));
 static inline u64 CAVM_CGXX_SPUX_BR_PMD_LD_CUP(u64 a)
 {
-	if (CAVIUM_IS_MODEL(CAVIUM_CN9XXX) && (a <= 3))
-		return 0x100c8 + 0x40000 * ((a) & 0x3);
-	return -1;
+	return 0x100c8 + 0x40000 * a;
 }
 
 /**
@@ -6909,9 +6471,7 @@ static inline u64 CAVM_CGXX_SPUX_BR_PMD_LD_REP(u64 a)
 	__attribute__ ((pure, always_inline));
 static inline u64 CAVM_CGXX_SPUX_BR_PMD_LD_REP(u64 a)
 {
-	if (CAVIUM_IS_MODEL(CAVIUM_CN9XXX) && (a <= 3))
-		return 0x100d0 + 0x40000 * ((a) & 0x3);
-	return -1;
+	return 0x100d0 + 0x40000 * a;
 }
 
 /**
@@ -6945,9 +6505,7 @@ static inline u64 CAVM_CGXX_SPUX_BR_PMD_LP_CUP(u64 a)
 	__attribute__ ((pure, always_inline));
 static inline u64 CAVM_CGXX_SPUX_BR_PMD_LP_CUP(u64 a)
 {
-	if (CAVIUM_IS_MODEL(CAVIUM_CN9XXX) && (a <= 3))
-		return 0x100b8 + 0x40000 * ((a) & 0x3);
-	return -1;
+	return 0x100b8 + 0x40000 * a;
 }
 
 /**
@@ -6981,9 +6539,7 @@ static inline u64 CAVM_CGXX_SPUX_BR_PMD_LP_REP(u64 a)
 	__attribute__ ((pure, always_inline));
 static inline u64 CAVM_CGXX_SPUX_BR_PMD_LP_REP(u64 a)
 {
-	if (CAVIUM_IS_MODEL(CAVIUM_CN9XXX) && (a <= 3))
-		return 0x100c0 + 0x40000 * ((a) & 0x3);
-	return -1;
+	return 0x100c0 + 0x40000 * a;
 }
 
 /**
@@ -7011,9 +6567,7 @@ static inline u64 CAVM_CGXX_SPUX_BR_PMD_STATUS(u64 a)
 	__attribute__ ((pure, always_inline));
 static inline u64 CAVM_CGXX_SPUX_BR_PMD_STATUS(u64 a)
 {
-	if (CAVIUM_IS_MODEL(CAVIUM_CN9XXX) && (a <= 3))
-		return 0x100b0 + 0x40000 * ((a) & 0x3);
-	return -1;
+	return 0x100b0 + 0x40000 * a;
 }
 
 /**
@@ -7039,9 +6593,7 @@ static inline u64 CAVM_CGXX_SPUX_BR_STATUS1(u64 a)
 	__attribute__ ((pure, always_inline));
 static inline u64 CAVM_CGXX_SPUX_BR_STATUS1(u64 a)
 {
-	if (CAVIUM_IS_MODEL(CAVIUM_CN9XXX) && (a <= 3))
-		return 0x10030 + 0x40000 * ((a) & 0x3);
-	return -1;
+	return 0x10030 + 0x40000 * a;
 }
 
 /**
@@ -7077,9 +6629,7 @@ static inline u64 CAVM_CGXX_SPUX_BR_STATUS2(u64 a)
 	__attribute__ ((pure, always_inline));
 static inline u64 CAVM_CGXX_SPUX_BR_STATUS2(u64 a)
 {
-	if (CAVIUM_IS_MODEL(CAVIUM_CN9XXX) && (a <= 3))
-		return 0x10038 + 0x40000 * ((a) & 0x3);
-	return -1;
+	return 0x10038 + 0x40000 * a;
 }
 
 /**
@@ -7109,9 +6659,7 @@ static inline u64 CAVM_CGXX_SPUX_BR_TP_CONTROL(u64 a)
 	__attribute__ ((pure, always_inline));
 static inline u64 CAVM_CGXX_SPUX_BR_TP_CONTROL(u64 a)
 {
-	if (CAVIUM_IS_MODEL(CAVIUM_CN9XXX) && (a <= 3))
-		return 0x10040 + 0x40000 * ((a) & 0x3);
-	return -1;
+	return 0x10040 + 0x40000 * a;
 }
 
 /**
@@ -7133,9 +6681,7 @@ static inline u64 CAVM_CGXX_SPUX_BR_TP_ERR_CNT(u64 a)
 	__attribute__ ((pure, always_inline));
 static inline u64 CAVM_CGXX_SPUX_BR_TP_ERR_CNT(u64 a)
 {
-	if (CAVIUM_IS_MODEL(CAVIUM_CN9XXX) && (a <= 3))
-		return 0x10048 + 0x40000 * ((a) & 0x3);
-	return -1;
+	return 0x10048 + 0x40000 * a;
 }
 
 /**
@@ -7157,9 +6703,7 @@ static inline u64 CAVM_CGXX_SPUX_BR_TP_SEED_A(u64 a)
 	__attribute__ ((pure, always_inline));
 static inline u64 CAVM_CGXX_SPUX_BR_TP_SEED_A(u64 a)
 {
-	if (CAVIUM_IS_MODEL(CAVIUM_CN9XXX) && (a <= 3))
-		return 0x10060 + 0x40000 * ((a) & 0x3);
-	return -1;
+	return 0x10060 + 0x40000 * a;
 }
 
 /**
@@ -7181,9 +6725,7 @@ static inline u64 CAVM_CGXX_SPUX_BR_TP_SEED_B(u64 a)
 	__attribute__ ((pure, always_inline));
 static inline u64 CAVM_CGXX_SPUX_BR_TP_SEED_B(u64 a)
 {
-	if (CAVIUM_IS_MODEL(CAVIUM_CN9XXX) && (a <= 3))
-		return 0x10068 + 0x40000 * ((a) & 0x3);
-	return -1;
+	return 0x10068 + 0x40000 * a;
 }
 
 /**
@@ -7207,9 +6749,7 @@ static inline u64 CAVM_CGXX_SPUX_BX_STATUS(u64 a)
 	__attribute__ ((pure, always_inline));
 static inline u64 CAVM_CGXX_SPUX_BX_STATUS(u64 a)
 {
-	if (CAVIUM_IS_MODEL(CAVIUM_CN9XXX) && (a <= 3))
-		return 0x10028 + 0x40000 * ((a) & 0x3);
-	return -1;
+	return 0x10028 + 0x40000 * a;
 }
 
 /**
@@ -7240,9 +6780,7 @@ static inline u64 CAVM_CGXX_SPUX_CONTROL1(u64 a)
 	__attribute__ ((pure, always_inline));
 static inline u64 CAVM_CGXX_SPUX_CONTROL1(u64 a)
 {
-	if (CAVIUM_IS_MODEL(CAVIUM_CN9XXX) && (a <= 3))
-		return 0x10000 + 0x40000 * ((a) & 0x3);
-	return -1;
+	return 0x10000 + 0x40000 * a;
 }
 
 /**
@@ -7263,9 +6801,7 @@ static inline u64 CAVM_CGXX_SPUX_CONTROL2(u64 a)
 	__attribute__ ((pure, always_inline));
 static inline u64 CAVM_CGXX_SPUX_CONTROL2(u64 a)
 {
-	if (CAVIUM_IS_MODEL(CAVIUM_CN9XXX) && (a <= 3))
-		return 0x10018 + 0x40000 * ((a) & 0x3);
-	return -1;
+	return 0x10018 + 0x40000 * a;
 }
 
 /**
@@ -7287,9 +6823,7 @@ static inline u64 CAVM_CGXX_SPUX_FEC_ABIL(u64 a)
 	__attribute__ ((pure, always_inline));
 static inline u64 CAVM_CGXX_SPUX_FEC_ABIL(u64 a)
 {
-	if (CAVIUM_IS_MODEL(CAVIUM_CN9XXX) && (a <= 3))
-		return 0x100d8 + 0x40000 * ((a) & 0x3);
-	return -1;
+	return 0x100d8 + 0x40000 * a;
 }
 
 /**
@@ -7313,9 +6847,7 @@ static inline u64 CAVM_CGXX_SPUX_FEC_CONTROL(u64 a)
 	__attribute__ ((pure, always_inline));
 static inline u64 CAVM_CGXX_SPUX_FEC_CONTROL(u64 a)
 {
-	if (CAVIUM_IS_MODEL(CAVIUM_CN9XXX) && (a <= 3))
-		return 0x100e0 + 0x40000 * ((a) & 0x3);
-	return -1;
+	return 0x100e0 + 0x40000 * a;
 }
 
 /**
@@ -7346,9 +6878,7 @@ static inline u64 CAVM_CGXX_SPUX_FEC_LNX_RSFEC_ERR(u64 a, u64 b)
 	__attribute__ ((pure, always_inline));
 static inline u64 CAVM_CGXX_SPUX_FEC_LNX_RSFEC_ERR(u64 a, u64 b)
 {
-	if (CAVIUM_IS_MODEL(CAVIUM_CN9XXX) && ((a <= 3) && (b <= 3)))
-		return 0x10900 + 0x40000 * ((a) & 0x3) + 8 * ((b) & 0x3);
-	return -1;
+	return 0x10900 + 0x40000 * a + 8 * b;
 }
 
 /**
@@ -7389,9 +6919,7 @@ static inline u64 CAVM_CGXX_SPUX_INT(u64 a)
 	__attribute__ ((pure, always_inline));
 static inline u64 CAVM_CGXX_SPUX_INT(u64 a)
 {
-	if (CAVIUM_IS_MODEL(CAVIUM_CN9XXX) && (a <= 3))
-		return 0x10220 + 0x40000 * ((a) & 0x3);
-	return -1;
+	return 0x10220 + 0x40000 * a;
 }
 
 /**
@@ -7433,9 +6961,7 @@ static inline u64 CAVM_CGXX_SPUX_INT_ENA_W1C(u64 a)
 	__attribute__ ((pure, always_inline));
 static inline u64 CAVM_CGXX_SPUX_INT_ENA_W1C(u64 a)
 {
-	if (CAVIUM_IS_MODEL(CAVIUM_CN9XXX) && (a <= 3))
-		return 0x10230 + 0x40000 * ((a) & 0x3);
-	return -1;
+	return 0x10230 + 0x40000 * a;
 }
 
 /**
@@ -7477,9 +7003,7 @@ static inline u64 CAVM_CGXX_SPUX_INT_ENA_W1S(u64 a)
 	__attribute__ ((pure, always_inline));
 static inline u64 CAVM_CGXX_SPUX_INT_ENA_W1S(u64 a)
 {
-	if (CAVIUM_IS_MODEL(CAVIUM_CN9XXX) && (a <= 3))
-		return 0x10238 + 0x40000 * ((a) & 0x3);
-	return -1;
+	return 0x10238 + 0x40000 * a;
 }
 
 /**
@@ -7521,9 +7045,7 @@ static inline u64 CAVM_CGXX_SPUX_INT_W1S(u64 a)
 	__attribute__ ((pure, always_inline));
 static inline u64 CAVM_CGXX_SPUX_INT_W1S(u64 a)
 {
-	if (CAVIUM_IS_MODEL(CAVIUM_CN9XXX) && (a <= 3))
-		return 0x10228 + 0x40000 * ((a) & 0x3);
-	return -1;
+	return 0x10228 + 0x40000 * a;
 }
 
 /**
@@ -7557,9 +7079,7 @@ static inline u64 CAVM_CGXX_SPUX_LNX_BR_BIP_ERR_CNT(u64 a, u64 b)
 	__attribute__ ((pure, always_inline));
 static inline u64 CAVM_CGXX_SPUX_LNX_BR_BIP_ERR_CNT(u64 a, u64 b)
 {
-	if (CAVIUM_IS_MODEL(CAVIUM_CN9XXX) && ((a <= 3) && (b <= 19)))
-		return 0x10500 + 0x40000 * ((a) & 0x3) + 8 * ((b) & 0x1f);
-	return -1;
+	return 0x10500 + 0x40000 * a + 8 * b;
 }
 
 /**
@@ -7593,9 +7113,7 @@ static inline u64 CAVM_CGXX_SPUX_LNX_FEC_CORR_BLKS(u64 a, u64 b)
 	__attribute__ ((pure, always_inline));
 static inline u64 CAVM_CGXX_SPUX_LNX_FEC_CORR_BLKS(u64 a, u64 b)
 {
-	if (CAVIUM_IS_MODEL(CAVIUM_CN9XXX) && ((a <= 3) && (b <= 19)))
-		return 0x10700 + 0x40000 * ((a) & 0x3) + 8 * ((b) & 0x1f);
-	return -1;
+	return 0x10700 + 0x40000 * a + 8 * b;
 }
 
 /**
@@ -7629,9 +7147,7 @@ static inline u64 CAVM_CGXX_SPUX_LNX_FEC_UNCORR_BLKS(u64 a, u64 b)
 	__attribute__ ((pure, always_inline));
 static inline u64 CAVM_CGXX_SPUX_LNX_FEC_UNCORR_BLKS(u64 a, u64 b)
 {
-	if (CAVIUM_IS_MODEL(CAVIUM_CN9XXX) && ((a <= 3) && (b <= 19)))
-		return 0x10800 + 0x40000 * ((a) & 0x3) + 8 * ((b) & 0x1f);
-	return -1;
+	return 0x10800 + 0x40000 * a + 8 * b;
 }
 
 /**
@@ -7657,9 +7173,7 @@ static inline u64 CAVM_CGXX_SPUX_LPCS_STATES(u64 a)
 	__attribute__ ((pure, always_inline));
 static inline u64 CAVM_CGXX_SPUX_LPCS_STATES(u64 a)
 {
-	if (CAVIUM_IS_MODEL(CAVIUM_CN9XXX) && (a <= 3))
-		return 0x10208 + 0x40000 * ((a) & 0x3);
-	return -1;
+	return 0x10208 + 0x40000 * a;
 }
 
 /**
@@ -7693,9 +7207,7 @@ static inline u64 CAVM_CGXX_SPUX_MISC_CONTROL(u64 a)
 	__attribute__ ((pure, always_inline));
 static inline u64 CAVM_CGXX_SPUX_MISC_CONTROL(u64 a)
 {
-	if (CAVIUM_IS_MODEL(CAVIUM_CN9XXX) && (a <= 3))
-		return 0x10218 + 0x40000 * ((a) & 0x3);
-	return -1;
+	return 0x10218 + 0x40000 * a;
 }
 
 /**
@@ -7719,9 +7231,7 @@ static inline u64 CAVM_CGXX_SPUX_RSFEC_CORR(u64 a)
 	__attribute__ ((pure, always_inline));
 static inline u64 CAVM_CGXX_SPUX_RSFEC_CORR(u64 a)
 {
-	if (CAVIUM_IS_MODEL(CAVIUM_CN9XXX) && (a <= 3))
-		return 0x10088 + 0x40000 * ((a) & 0x3);
-	return -1;
+	return 0x10088 + 0x40000 * a;
 }
 
 /**
@@ -7750,9 +7260,7 @@ static inline u64 CAVM_CGXX_SPUX_RSFEC_STATUS(u64 a)
 	__attribute__ ((pure, always_inline));
 static inline u64 CAVM_CGXX_SPUX_RSFEC_STATUS(u64 a)
 {
-	if (CAVIUM_IS_MODEL(CAVIUM_CN9XXX) && (a <= 3))
-		return 0x10080 + 0x40000 * ((a) & 0x3);
-	return -1;
+	return 0x10080 + 0x40000 * a;
 }
 
 /**
@@ -7776,9 +7284,7 @@ static inline u64 CAVM_CGXX_SPUX_RSFEC_UNCORR(u64 a)
 	__attribute__ ((pure, always_inline));
 static inline u64 CAVM_CGXX_SPUX_RSFEC_UNCORR(u64 a)
 {
-	if (CAVIUM_IS_MODEL(CAVIUM_CN9XXX) && (a <= 3))
-		return 0x10090 + 0x40000 * ((a) & 0x3);
-	return -1;
+	return 0x10090 + 0x40000 * a;
 }
 
 /**
@@ -7804,9 +7310,7 @@ static inline u64 CAVM_CGXX_SPUX_RX_EEE_WAKE(u64 a)
 	__attribute__ ((pure, always_inline));
 static inline u64 CAVM_CGXX_SPUX_RX_EEE_WAKE(u64 a)
 {
-	if (CAVIUM_IS_MODEL(CAVIUM_CN9XXX) && (a <= 3))
-		return 0x103e0 + 8 * ((a) & 0x3);
-	return -1;
+	return 0x103e0 + 8 * a;
 }
 
 /**
@@ -7835,9 +7339,7 @@ static inline u64 CAVM_CGXX_SPUX_RX_LPI_TIMING(u64 a)
 	__attribute__ ((pure, always_inline));
 static inline u64 CAVM_CGXX_SPUX_RX_LPI_TIMING(u64 a)
 {
-	if (CAVIUM_IS_MODEL(CAVIUM_CN9XXX) && (a <= 3))
-		return 0x103c0 + 8 * ((a) & 0x3);
-	return -1;
+	return 0x103c0 + 8 * a;
 }
 
 /**
@@ -7862,9 +7364,7 @@ static inline u64 CAVM_CGXX_SPUX_RX_LPI_TIMING2(u64 a)
 	__attribute__ ((pure, always_inline));
 static inline u64 CAVM_CGXX_SPUX_RX_LPI_TIMING2(u64 a)
 {
-	if (CAVIUM_IS_MODEL(CAVIUM_CN9XXX) && (a <= 3))
-		return 0x10420 + 8 * ((a) & 0x3);
-	return -1;
+	return 0x10420 + 8 * a;
 }
 
 /**
@@ -7889,9 +7389,7 @@ static inline u64 CAVM_CGXX_SPUX_RX_MRK_CNT(u64 a)
 	__attribute__ ((pure, always_inline));
 static inline u64 CAVM_CGXX_SPUX_RX_MRK_CNT(u64 a)
 {
-	if (CAVIUM_IS_MODEL(CAVIUM_CN9XXX) && (a <= 3))
-		return 0x103a0 + 8 * ((a) & 0x3);
-	return -1;
+	return 0x103a0 + 8 * a;
 }
 
 /**
@@ -7918,9 +7416,7 @@ static inline u64 CAVM_CGXX_SPUX_SPD_ABIL(u64 a)
 	__attribute__ ((pure, always_inline));
 static inline u64 CAVM_CGXX_SPUX_SPD_ABIL(u64 a)
 {
-	if (CAVIUM_IS_MODEL(CAVIUM_CN9XXX) && (a <= 3))
-		return 0x10010 + 0x40000 * ((a) & 0x3);
-	return -1;
+	return 0x10010 + 0x40000 * a;
 }
 
 /**
@@ -7949,9 +7445,7 @@ static inline u64 CAVM_CGXX_SPUX_STATUS1(u64 a)
 	__attribute__ ((pure, always_inline));
 static inline u64 CAVM_CGXX_SPUX_STATUS1(u64 a)
 {
-	if (CAVIUM_IS_MODEL(CAVIUM_CN9XXX) && (a <= 3))
-		return 0x10008 + 0x40000 * ((a) & 0x3);
-	return -1;
+	return 0x10008 + 0x40000 * a;
 }
 
 /**
@@ -7985,9 +7479,7 @@ static inline u64 CAVM_CGXX_SPUX_STATUS2(u64 a)
 	__attribute__ ((pure, always_inline));
 static inline u64 CAVM_CGXX_SPUX_STATUS2(u64 a)
 {
-	if (CAVIUM_IS_MODEL(CAVIUM_CN9XXX) && (a <= 3))
-		return 0x10020 + 0x40000 * ((a) & 0x3);
-	return -1;
+	return 0x10020 + 0x40000 * a;
 }
 
 /**
@@ -8019,9 +7511,7 @@ static inline u64 CAVM_CGXX_SPUX_TX_LPI_TIMING(u64 a)
 	__attribute__ ((pure, always_inline));
 static inline u64 CAVM_CGXX_SPUX_TX_LPI_TIMING(u64 a)
 {
-	if (CAVIUM_IS_MODEL(CAVIUM_CN9XXX) && (a <= 3))
-		return 0x10400 + 8 * ((a) & 0x3);
-	return -1;
+	return 0x10400 + 8 * a;
 }
 
 /**
@@ -8052,9 +7542,7 @@ static inline u64 CAVM_CGXX_SPUX_TX_LPI_TIMING2(u64 a)
 	__attribute__ ((pure, always_inline));
 static inline u64 CAVM_CGXX_SPUX_TX_LPI_TIMING2(u64 a)
 {
-	if (CAVIUM_IS_MODEL(CAVIUM_CN9XXX) && (a <= 3))
-		return 0x10440 + 8 * ((a) & 0x3);
-	return -1;
+	return 0x10440 + 8 * a;
 }
 
 /**
@@ -8079,9 +7567,7 @@ static inline u64 CAVM_CGXX_SPUX_TX_MRK_CNT(u64 a)
 	__attribute__ ((pure, always_inline));
 static inline u64 CAVM_CGXX_SPUX_TX_MRK_CNT(u64 a)
 {
-	if (CAVIUM_IS_MODEL(CAVIUM_CN9XXX) && (a <= 3))
-		return 0x10380 + 8 * ((a) & 0x3);
-	return -1;
+	return 0x10380 + 8 * a;
 }
 
 /**
@@ -8115,9 +7601,7 @@ static inline u64 CAVM_CGXX_SPUX_USX_AN_ADV(u64 a)
 	__attribute__ ((pure, always_inline));
 static inline u64 CAVM_CGXX_SPUX_USX_AN_ADV(u64 a)
 {
-	if (CAVIUM_IS_MODEL(CAVIUM_CN9XXX) && (a <= 3))
-		return 0x101d0 + 0x40000 * ((a) & 0x3);
-	return -1;
+	return 0x101d0 + 0x40000 * a;
 }
 
 /**
@@ -8143,9 +7627,7 @@ static inline u64 CAVM_CGXX_SPUX_USX_AN_CONTROL(u64 a)
 	__attribute__ ((pure, always_inline));
 static inline u64 CAVM_CGXX_SPUX_USX_AN_CONTROL(u64 a)
 {
-	if (CAVIUM_IS_MODEL(CAVIUM_CN9XXX) && (a <= 3))
-		return 0x101c0 + 0x40000 * ((a) & 0x3);
-	return -1;
+	return 0x101c0 + 0x40000 * a;
 }
 
 /**
@@ -8169,9 +7651,7 @@ static inline u64 CAVM_CGXX_SPUX_USX_AN_EXPANSION(u64 a)
 	__attribute__ ((pure, always_inline));
 static inline u64 CAVM_CGXX_SPUX_USX_AN_EXPANSION(u64 a)
 {
-	if (CAVIUM_IS_MODEL(CAVIUM_CN9XXX) && (a <= 3))
-		return 0x101e0 + 0x40000 * ((a) & 0x3);
-	return -1;
+	return 0x101e0 + 0x40000 * a;
 }
 
 /**
@@ -8193,9 +7673,7 @@ static inline u64 CAVM_CGXX_SPUX_USX_AN_FLOW_CTRL(u64 a)
 	__attribute__ ((pure, always_inline));
 static inline u64 CAVM_CGXX_SPUX_USX_AN_FLOW_CTRL(u64 a)
 {
-	if (CAVIUM_IS_MODEL(CAVIUM_CN9XXX) && (a <= 3))
-		return 0x101e8 + 0x40000 * ((a) & 0x3);
-	return -1;
+	return 0x101e8 + 0x40000 * a;
 }
 
 /**
@@ -8217,9 +7695,7 @@ static inline u64 CAVM_CGXX_SPUX_USX_AN_LINK_TIMER(u64 a)
 	__attribute__ ((pure, always_inline));
 static inline u64 CAVM_CGXX_SPUX_USX_AN_LINK_TIMER(u64 a)
 {
-	if (CAVIUM_IS_MODEL(CAVIUM_CN9XXX) && (a <= 3))
-		return 0x101f0 + 0x40000 * ((a) & 0x3);
-	return -1;
+	return 0x101f0 + 0x40000 * a;
 }
 
 /**
@@ -8250,9 +7726,7 @@ static inline u64 CAVM_CGXX_SPUX_USX_AN_LP_ABIL(u64 a)
 	__attribute__ ((pure, always_inline));
 static inline u64 CAVM_CGXX_SPUX_USX_AN_LP_ABIL(u64 a)
 {
-	if (CAVIUM_IS_MODEL(CAVIUM_CN9XXX) && (a <= 3))
-		return 0x101d8 + 0x40000 * ((a) & 0x3);
-	return -1;
+	return 0x101d8 + 0x40000 * a;
 }
 
 /**
@@ -8278,9 +7752,7 @@ static inline u64 CAVM_CGXX_SPUX_USX_AN_STATUS(u64 a)
 	__attribute__ ((pure, always_inline));
 static inline u64 CAVM_CGXX_SPUX_USX_AN_STATUS(u64 a)
 {
-	if (CAVIUM_IS_MODEL(CAVIUM_CN9XXX) && (a <= 3))
-		return 0x101c8 + 0x40000 * ((a) & 0x3);
-	return -1;
+	return 0x101c8 + 0x40000 * a;
 }
 
 /**
@@ -8312,9 +7784,7 @@ static inline u64 CAVM_CGXX_SPU_DBG_CONTROL(void)
 	__attribute__ ((pure, always_inline));
 static inline u64 CAVM_CGXX_SPU_DBG_CONTROL(void)
 {
-	if (CAVIUM_IS_MODEL(CAVIUM_CN9XXX))
-		return 0x10300;
-	return -1;
+	return 0x10300;
 }
 
 /**
@@ -8336,9 +7806,7 @@ static inline u64 CAVM_CGXX_SPU_SDSX_SKEW_STATUS(u64 a)
 	__attribute__ ((pure, always_inline));
 static inline u64 CAVM_CGXX_SPU_SDSX_SKEW_STATUS(u64 a)
 {
-	if (CAVIUM_IS_MODEL(CAVIUM_CN9XXX) && (a <= 3))
-		return 0x10340 + 8 * ((a) & 0x3);
-	return -1;
+	return 0x10340 + 8 * a;
 }
 
 /**
@@ -8378,9 +7846,7 @@ static inline u64 CAVM_CGXX_SPU_SDSX_STATES(u64 a)
 	__attribute__ ((pure, always_inline));
 static inline u64 CAVM_CGXX_SPU_SDSX_STATES(u64 a)
 {
-	if (CAVIUM_IS_MODEL(CAVIUM_CN9XXX) && (a <= 3))
-		return 0x10360 + 8 * ((a) & 0x3);
-	return -1;
+	return 0x10360 + 8 * a;
 }
 
 /**
@@ -8406,9 +7872,7 @@ static inline u64 CAVM_CGXX_SPU_USXGMII_CONTROL(void)
 	__attribute__ ((pure, always_inline));
 static inline u64 CAVM_CGXX_SPU_USXGMII_CONTROL(void)
 {
-	if (CAVIUM_IS_MODEL(CAVIUM_CN9XXX))
-		return 0x10920;
-	return -1;
+	return 0x10920;
 }
 
 #endif /* __CAVM_CSRS_CGX_H__ */
diff --git a/drivers/net/cavium/octeontx2/cavm-csrs-lmt.h b/drivers/net/cavium/octeontx2/cavm-csrs-lmt.h
index 5e6422fb11..9c4451530e 100644
--- a/drivers/net/cavium/octeontx2/cavm-csrs-lmt.h
+++ b/drivers/net/cavium/octeontx2/cavm-csrs-lmt.h
@@ -68,9 +68,7 @@ static inline u64 CAVM_LMT_LF_LMTCANCEL(void)
 	__attribute__ ((pure, always_inline));
 static inline u64 CAVM_LMT_LF_LMTCANCEL(void)
 {
-	if (CAVIUM_IS_MODEL(CAVIUM_CN9XXX))
-		return 0x400;
-	return -1;
+	return 0x400;
 }
 
 /**
@@ -90,9 +88,7 @@ static inline u64 CAVM_LMT_LF_LMTLINEX(u64 a)
 	__attribute__ ((pure, always_inline));
 static inline u64 CAVM_LMT_LF_LMTLINEX(u64 a)
 {
-	if (CAVIUM_IS_MODEL(CAVIUM_CN9XXX) && (a <= 15))
-		return 0 + 8 * ((a) & 0xf);
-	return -1;
+	return 0 + 8 * a;
 }
 
 #endif /* __CAVM_CSRS_LMT_H__ */
diff --git a/drivers/net/cavium/octeontx2/cavm-csrs-nix.h b/drivers/net/cavium/octeontx2/cavm-csrs-nix.h
index 53c409bae8..890dca78eb 100644
--- a/drivers/net/cavium/octeontx2/cavm-csrs-nix.h
+++ b/drivers/net/cavium/octeontx2/cavm-csrs-nix.h
@@ -224,6 +224,7 @@
 #define CAVM_NIX_MNQERR_E_MAX_SQE_SIZE_ERR (7)
 #define CAVM_NIX_MNQERR_E_SQB_FAULT (2)
 #define CAVM_NIX_MNQERR_E_SQB_POISON (3)
+#define CAVM_NIX_MNQERR_E_SQE_SIZEM1_ZERO (9)
 #define CAVM_NIX_MNQERR_E_SQ_CTX_FAULT (0)
 #define CAVM_NIX_MNQERR_E_SQ_CTX_POISON (1)
 #define CAVM_NIX_MNQERR_E_TOTAL_ERR (4)
@@ -349,8 +350,6 @@
  *
  * NIX Send Completion Status Enumeration
  * Enumerates values of NIX_SEND_COMP_S[STATUS] and NIX_LF_SEND_ERR_DBG[ERRCODE].
- * Internal:
- * TODO.
  */
 #define CAVM_NIX_SEND_STATUS_E_DATA_FAULT (0x16)
 #define CAVM_NIX_SEND_STATUS_E_DATA_POISON (0x17)
@@ -493,6 +492,7 @@
 #define CAVM_NIX_SQOPERR_E_SQB_FAULT (7)
 #define CAVM_NIX_SQOPERR_E_SQB_NULL (6)
 #define CAVM_NIX_SQOPERR_E_SQE_OFLOW (5)
+#define CAVM_NIX_SQOPERR_E_SQE_SIZEM1_ZERO (8)
 #define CAVM_NIX_SQOPERR_E_SQ_CTX_FAULT (1)
 #define CAVM_NIX_SQOPERR_E_SQ_CTX_POISON (2)
 #define CAVM_NIX_SQOPERR_E_SQ_DISABLED (3)
@@ -1555,34 +1555,41 @@ union cavm_nix_send_work_s {
 union cavm_nix_sq_ctx_hw_s {
 	u64 u[16];
 	struct cavm_nix_sq_ctx_hw_s_s {
-		u64 gbl_ena                          : 1;
-		u64 gbl_substream                    : 20;
-		u64 gbl_max_sqe_size                 : 2;
-		u64 gbl_sqe_way_mask                 : 16;
-		u64 gbl_sqb_aura                     : 20;
+		u64 ena                              : 1;
+		u64 substream                        : 20;
+		u64 max_sqe_size                     : 2;
+		u64 sqe_way_mask                     : 16;
+		u64 sqb_aura                         : 20;
 		u64 gbl_rsvd1                        : 5;
-		u64 gbl_cq_id                        : 20;
-		u64 gbl_cq_ena                       : 1;
-		u64 qint_idx                         : 7;
+		u64 cq_id                            : 20;
+		u64 cq_ena                           : 1;
+		u64 qint_idx                         : 6;
+		u64 gbl_rsvd2                        : 1;
 		u64 sq_int                           : 8;
 		u64 sq_int_ena                       : 8;
 		u64 xoff                             : 1;
-		u64 send_lso_segnum                  : 8;
-		u64 gbl_rsvd                         : 11;
-		u64 sqb_enqueue_count                : 16;
 		u64 sqe_stype                        : 2;
+		u64 gbl_rsvd                         : 17;
+		u64 head_sqb                         : 64;
+		u64 head_offset                      : 6;
+		u64 sqb_dequeue_count                : 16;
+		u64 default_chan                     : 12;
+		u64 sdp_mcast                        : 1;
+		u64 sso_ena                          : 1;
+		u64 dse_rsvd1                        : 28;
+		u64 sqb_enqueue_count                : 16;
 		u64 tail_offset                      : 6;
 		u64 lmt_dis                          : 1;
 		u64 smq_rr_quantum                   : 24;
-		u64 dnq_rsvd1                        : 15;
+		u64 dnq_rsvd1                        : 17;
 		u64 tail_sqb                         : 64;
 		u64 next_sqb                         : 64;
 		u64 mnq_dis                          : 1;
-		u64 smq                              : 10;
+		u64 smq                              : 9;
 		u64 smq_pend                         : 1;
 		u64 smq_next_sq                      : 20;
 		u64 smq_next_sq_vld                  : 1;
-		u64 scm1_rsvd2                       : 31;
+		u64 scm1_rsvd2                       : 32;
 		u64 smenq_sqb                        : 64;
 		u64 smenq_offset                     : 6;
 		u64 cq_limit                         : 8;
@@ -1600,13 +1607,6 @@ union cavm_nix_sq_ctx_hw_s {
 		u64 smenq_next_sqb_vld               : 1;
 		u64 scm_dq_rsvd1                     : 9;
 		u64 smenq_next_sqb                   : 64;
-		u64 head_sqb                         : 64;
-		u64 head_offset                      : 6;
-		u64 sqb_dequeue_count                : 16;
-		u64 default_chan                     : 12;
-		u64 sdp_mcast                        : 1;
-		u64 sso_ena                          : 1;
-		u64 dse_rsvd1                        : 28;
 		u64 seb_rsvd1                        : 64;
 		u64 drop_pkts                        : 48;
 		u64 drop_octs_lsw                    : 16;
@@ -1633,113 +1633,64 @@ union cavm_nix_sq_ctx_s {
 	u64 u[16];
 	struct cavm_nix_sq_ctx_s_s {
 		u64 ena                              : 1;
-		u64 cq_ena                           : 1;
-		u64 max_sqe_size                     : 2;
+		u64 qint_idx                         : 6;
 		u64 substream                        : 20;
 		u64 sdp_mcast                        : 1;
-		u64 lmt_dis                          : 1;
-		u64 mnq_dis                          : 1;
-		u64 reserved_27_35                   : 9;
 		u64 cq                               : 20;
-		u64 cq_limit                         : 8;
-		u64 smq                              : 10;
+		u64 sqe_way_mask                     : 16;
+		u64 smq                              : 9;
+		u64 cq_ena                           : 1;
 		u64 xoff                             : 1;
 		u64 sso_ena                          : 1;
 		u64 smq_rr_quantum                   : 24;
 		u64 default_chan                     : 12;
 		u64 sqb_count                        : 16;
-		u64 sqe_way_mask                     : 16;
-		u64 reserved_144_171                 : 28;
+		u64 smq_rr_count                     : 25;
+		u64 sqb_aura                         : 20;
 		u64 sq_int                           : 8;
 		u64 sq_int_ena                       : 8;
 		u64 sqe_stype                        : 2;
-		u64 smq_pend                         : 1;
 		u64 reserved_191                     : 1;
-		u64 reserved_192_223                 : 32;
-		u64 send_lso_segnum                  : 8;
+		u64 max_sqe_size                     : 2;
+		u64 cq_limit                         : 8;
+		u64 lmt_dis                          : 1;
+		u64 mnq_dis                          : 1;
+		u64 smq_next_sq                      : 20;
 		u64 smq_lso_segnum                   : 8;
-		u64 qint_idx                         : 7;
-		u64 reserved_247_255                 : 9;
-		u64 next_sqb                         : 64;
-		u64 tail_sqb                         : 64;
-		u64 smenq_sqb                        : 64;
-		u64 head_sqb                         : 64;
 		u64 tail_offset                      : 6;
 		u64 smenq_offset                     : 6;
 		u64 head_offset                      : 6;
-		u64 reserved_530_539                 : 10;
-		u64 sqb_aura                         : 20;
-		u64 reserved_560_575                 : 16;
-		u64 smq_rr_count                     : 25;
 		u64 smenq_next_sqb_vld               : 1;
-		u64 smq_next_sq                      : 20;
-		u64 reserved_622_639                 : 18;
-		u64 octs                             : 48;
-		u64 reserved_688_703                 : 16;
-		u64 pkts                             : 48;
-		u64 reserved_752_767                 : 16;
-		u64 reserved_768_831                 : 64;
-		u64 smenq_next_sqb                   : 64;
-		u64 drop_octs                        : 48;
-		u64 reserved_944_959                 : 16;
-		u64 drop_pkts                        : 48;
-		u64 reserved_1008_1023               : 16;
-	} s;
-	struct cavm_nix_sq_ctx_s_cn {
-		u64 ena                              : 1;
-		u64 cq_ena                           : 1;
-		u64 max_sqe_size                     : 2;
-		u64 substream                        : 20;
-		u64 sdp_mcast                        : 1;
-		u64 lmt_dis                          : 1;
-		u64 mnq_dis                          : 1;
-		u64 reserved_27                      : 1;
-		u64 reserved_28_35                   : 8;
-		u64 cq                               : 20;
-		u64 cq_limit                         : 8;
-		u64 smq                              : 10;
-		u64 xoff                             : 1;
-		u64 sso_ena                          : 1;
-		u64 smq_rr_quantum                   : 24;
-		u64 default_chan                     : 12;
-		u64 sqb_count                        : 16;
-		u64 sqe_way_mask                     : 16;
-		u64 reserved_144_171                 : 28;
-		u64 sq_int                           : 8;
-		u64 sq_int_ena                       : 8;
-		u64 sqe_stype                        : 2;
 		u64 smq_pend                         : 1;
-		u64 reserved_191                     : 1;
-		u64 reserved_192_223                 : 32;
-		u64 send_lso_segnum                  : 8;
-		u64 smq_lso_segnum                   : 8;
-		u64 qint_idx                         : 7;
-		u64 reserved_247_255                 : 9;
+		u64 smq_next_sq_vld                  : 1;
+		u64 reserved_253_255                 : 3;
 		u64 next_sqb                         : 64;
 		u64 tail_sqb                         : 64;
 		u64 smenq_sqb                        : 64;
+		u64 smenq_next_sqb                   : 64;
 		u64 head_sqb                         : 64;
-		u64 tail_offset                      : 6;
-		u64 smenq_offset                     : 6;
-		u64 head_offset                      : 6;
-		u64 reserved_530_539                 : 10;
-		u64 sqb_aura                         : 20;
-		u64 reserved_560_575                 : 16;
-		u64 smq_rr_count                     : 25;
-		u64 smenq_next_sqb_vld               : 1;
-		u64 smq_next_sq                      : 20;
-		u64 reserved_622_639                 : 18;
+		u64 reserved_576_583                 : 8;
+		u64 vfi_lso_total                    : 18;
+		u64 vfi_lso_sizem1                   : 3;
+		u64 vfi_lso_sb                       : 8;
+		u64 vfi_lso_mps                      : 14;
+		u64 vfi_lso_vlan0_ins_ena            : 1;
+		u64 vfi_lso_vlan1_ins_ena            : 1;
+		u64 vfi_lso_vld                      : 1;
+		u64 reserved_630_639                 : 10;
+		u64 scm_lso_rem                      : 18;
+		u64 reserved_658_703                 : 46;
 		u64 octs                             : 48;
-		u64 reserved_688_703                 : 16;
-		u64 pkts                             : 48;
 		u64 reserved_752_767                 : 16;
-		u64 reserved_768_831                 : 64;
-		u64 smenq_next_sqb                   : 64;
+		u64 pkts                             : 48;
+		u64 reserved_816_831                 : 16;
+		u64 reserved_832_895                 : 64;
 		u64 drop_octs                        : 48;
 		u64 reserved_944_959                 : 16;
 		u64 drop_pkts                        : 48;
 		u64 reserved_1008_1023               : 16;
-	} cn;
+	} s;
+	/* struct cavm_nix_sq_ctx_s_s cn; */
 };
 
 /**
@@ -1840,9 +1791,7 @@ static inline u64 CAVM_NIXX_AF_AQ_BASE(void)
 	__attribute__ ((pure, always_inline));
 static inline u64 CAVM_NIXX_AF_AQ_BASE(void)
 {
-	if (CAVIUM_IS_MODEL(CAVIUM_CN9XXX))
-		return 0x410;
-	return -1;
+	return 0x410;
 }
 
 /**
@@ -1863,9 +1812,7 @@ static inline u64 CAVM_NIXX_AF_AQ_CFG(void)
 	__attribute__ ((pure, always_inline));
 static inline u64 CAVM_NIXX_AF_AQ_CFG(void)
 {
-	if (CAVIUM_IS_MODEL(CAVIUM_CN9XXX))
-		return 0x400;
-	return -1;
+	return 0x400;
 }
 
 /**
@@ -1886,9 +1833,7 @@ static inline u64 CAVM_NIXX_AF_AQ_DONE(void)
 	__attribute__ ((pure, always_inline));
 static inline u64 CAVM_NIXX_AF_AQ_DONE(void)
 {
-	if (CAVIUM_IS_MODEL(CAVIUM_CN9XXX))
-		return 0x450;
-	return -1;
+	return 0x450;
 }
 
 /**
@@ -1910,9 +1855,7 @@ static inline u64 CAVM_NIXX_AF_AQ_DONE_ACK(void)
 	__attribute__ ((pure, always_inline));
 static inline u64 CAVM_NIXX_AF_AQ_DONE_ACK(void)
 {
-	if (CAVIUM_IS_MODEL(CAVIUM_CN9XXX))
-		return 0x460;
-	return -1;
+	return 0x460;
 }
 
 /**
@@ -1934,9 +1877,7 @@ static inline u64 CAVM_NIXX_AF_AQ_DONE_ENA_W1C(void)
 	__attribute__ ((pure, always_inline));
 static inline u64 CAVM_NIXX_AF_AQ_DONE_ENA_W1C(void)
 {
-	if (CAVIUM_IS_MODEL(CAVIUM_CN9XXX))
-		return 0x498;
-	return -1;
+	return 0x498;
 }
 
 /**
@@ -1958,9 +1899,7 @@ static inline u64 CAVM_NIXX_AF_AQ_DONE_ENA_W1S(void)
 	__attribute__ ((pure, always_inline));
 static inline u64 CAVM_NIXX_AF_AQ_DONE_ENA_W1S(void)
 {
-	if (CAVIUM_IS_MODEL(CAVIUM_CN9XXX))
-		return 0x490;
-	return -1;
+	return 0x490;
 }
 
 /**
@@ -1981,9 +1920,7 @@ static inline u64 CAVM_NIXX_AF_AQ_DONE_INT(void)
 	__attribute__ ((pure, always_inline));
 static inline u64 CAVM_NIXX_AF_AQ_DONE_INT(void)
 {
-	if (CAVIUM_IS_MODEL(CAVIUM_CN9XXX))
-		return 0x480;
-	return -1;
+	return 0x480;
 }
 
 /**
@@ -2004,9 +1941,7 @@ static inline u64 CAVM_NIXX_AF_AQ_DONE_INT_W1S(void)
 	__attribute__ ((pure, always_inline));
 static inline u64 CAVM_NIXX_AF_AQ_DONE_INT_W1S(void)
 {
-	if (CAVIUM_IS_MODEL(CAVIUM_CN9XXX))
-		return 0x488;
-	return -1;
+	return 0x488;
 }
 
 /**
@@ -2027,9 +1962,7 @@ static inline u64 CAVM_NIXX_AF_AQ_DONE_TIMER(void)
 	__attribute__ ((pure, always_inline));
 static inline u64 CAVM_NIXX_AF_AQ_DONE_TIMER(void)
 {
-	if (CAVIUM_IS_MODEL(CAVIUM_CN9XXX))
-		return 0x470;
-	return -1;
+	return 0x470;
 }
 
 /**
@@ -2053,9 +1986,7 @@ static inline u64 CAVM_NIXX_AF_AQ_DONE_WAIT(void)
 	__attribute__ ((pure, always_inline));
 static inline u64 CAVM_NIXX_AF_AQ_DONE_WAIT(void)
 {
-	if (CAVIUM_IS_MODEL(CAVIUM_CN9XXX))
-		return 0x440;
-	return -1;
+	return 0x440;
 }
 
 /**
@@ -2077,9 +2008,7 @@ static inline u64 CAVM_NIXX_AF_AQ_DOOR(void)
 	__attribute__ ((pure, always_inline));
 static inline u64 CAVM_NIXX_AF_AQ_DOOR(void)
 {
-	if (CAVIUM_IS_MODEL(CAVIUM_CN9XXX))
-		return 0x430;
-	return -1;
+	return 0x430;
 }
 
 /**
@@ -2114,9 +2043,7 @@ static inline u64 CAVM_NIXX_AF_AQ_STATUS(void)
 	__attribute__ ((pure, always_inline));
 static inline u64 CAVM_NIXX_AF_AQ_STATUS(void)
 {
-	if (CAVIUM_IS_MODEL(CAVIUM_CN9XXX))
-		return 0x420;
-	return -1;
+	return 0x420;
 }
 
 /**
@@ -2139,9 +2066,7 @@ static inline u64 CAVM_NIXX_AF_AVG_DELAY(void)
 	__attribute__ ((pure, always_inline));
 static inline u64 CAVM_NIXX_AF_AVG_DELAY(void)
 {
-	if (CAVIUM_IS_MODEL(CAVIUM_CN9XXX))
-		return 0xe0;
-	return -1;
+	return 0xe0;
 }
 
 /**
@@ -2167,9 +2092,7 @@ static inline u64 CAVM_NIXX_AF_BAR2_ALIASX(u64 a)
 	__attribute__ ((pure, always_inline));
 static inline u64 CAVM_NIXX_AF_BAR2_ALIASX(u64 a)
 {
-	if (CAVIUM_IS_MODEL(CAVIUM_CN9XXX) && (a <= 131071))
-		return 0x9100000 + 8 * ((a) & 0x1ffff);
-	return -1;
+	return 0x9100000 + 8 * a;
 }
 
 /**
@@ -2195,9 +2118,7 @@ static inline u64 CAVM_NIXX_AF_BAR2_SEL(void)
 	__attribute__ ((pure, always_inline));
 static inline u64 CAVM_NIXX_AF_BAR2_SEL(void)
 {
-	if (CAVIUM_IS_MODEL(CAVIUM_CN9XXX))
-		return 0x9000000;
-	return -1;
+	return 0x9000000;
 }
 
 /**
@@ -2219,9 +2140,7 @@ static inline u64 CAVM_NIXX_AF_BLK_RST(void)
 	__attribute__ ((pure, always_inline));
 static inline u64 CAVM_NIXX_AF_BLK_RST(void)
 {
-	if (CAVIUM_IS_MODEL(CAVIUM_CN9XXX))
-		return 0xb0;
-	return -1;
+	return 0xb0;
 }
 
 /**
@@ -2233,10 +2152,17 @@ union cavm_nixx_af_cfg {
 	u64 u;
 	struct cavm_nixx_af_cfg_s {
 		u64 force_cond_clk_en                : 1;
+		u64 force_rx_gbl_clk_en              : 1;
+		u64 force_rx_strm_clk_en             : 1;
+		u64 force_cqm_clk_en                 : 1;
+		u64 force_seb_clk_en                 : 1;
+		u64 force_sqm_clk_en                 : 1;
+		u64 force_pse_clk_en                 : 1;
+		u64 reserved_7                       : 1;
 		u64 af_be                            : 1;
 		u64 calibrate_x2p                    : 1;
 		u64 force_intf_clk_en                : 1;
-		u64 reserved_4_63                    : 60;
+		u64 reserved_11_63                   : 53;
 	} s;
 	/* struct cavm_nixx_af_cfg_s cn; */
 };
@@ -2245,9 +2171,7 @@ static inline u64 CAVM_NIXX_AF_CFG(void)
 	__attribute__ ((pure, always_inline));
 static inline u64 CAVM_NIXX_AF_CFG(void)
 {
-	if (CAVIUM_IS_MODEL(CAVIUM_CN9XXX))
-		return 0;
-	return -1;
+	return 0;
 }
 
 /**
@@ -2270,9 +2194,7 @@ static inline u64 CAVM_NIXX_AF_CINT_DELAY(void)
 	__attribute__ ((pure, always_inline));
 static inline u64 CAVM_NIXX_AF_CINT_DELAY(void)
 {
-	if (CAVIUM_IS_MODEL(CAVIUM_CN9XXX))
-		return 0xf0;
-	return -1;
+	return 0xf0;
 }
 
 /**
@@ -2297,9 +2219,7 @@ static inline u64 CAVM_NIXX_AF_CINT_TIMERX(u64 a)
 	__attribute__ ((pure, always_inline));
 static inline u64 CAVM_NIXX_AF_CINT_TIMERX(u64 a)
 {
-	if (CAVIUM_IS_MODEL(CAVIUM_CN9XXX) && (a <= 255))
-		return 0x1a40 + 0x40000 * ((a) & 0xff);
-	return -1;
+	return 0x1a40 + 0x40000 * a;
 }
 
 /**
@@ -2330,9 +2250,7 @@ static inline u64 CAVM_NIXX_AF_CONST(void)
 	__attribute__ ((pure, always_inline));
 static inline u64 CAVM_NIXX_AF_CONST(void)
 {
-	if (CAVIUM_IS_MODEL(CAVIUM_CN9XXX))
-		return 0x20;
-	return -1;
+	return 0x20;
 }
 
 /**
@@ -2359,9 +2277,7 @@ static inline u64 CAVM_NIXX_AF_CONST1(void)
 	__attribute__ ((pure, always_inline));
 static inline u64 CAVM_NIXX_AF_CONST1(void)
 {
-	if (CAVIUM_IS_MODEL(CAVIUM_CN9XXX))
-		return 0x28;
-	return -1;
+	return 0x28;
 }
 
 /**
@@ -2385,9 +2301,7 @@ static inline u64 CAVM_NIXX_AF_CONST2(void)
 	__attribute__ ((pure, always_inline));
 static inline u64 CAVM_NIXX_AF_CONST2(void)
 {
-	if (CAVIUM_IS_MODEL(CAVIUM_CN9XXX))
-		return 0x30;
-	return -1;
+	return 0x30;
 }
 
 /**
@@ -2416,9 +2330,7 @@ static inline u64 CAVM_NIXX_AF_CONST3(void)
 	__attribute__ ((pure, always_inline));
 static inline u64 CAVM_NIXX_AF_CONST3(void)
 {
-	if (CAVIUM_IS_MODEL(CAVIUM_CN9XXX))
-		return 0x38;
-	return -1;
+	return 0x38;
 }
 
 /**
@@ -2440,9 +2352,71 @@ static inline u64 CAVM_NIXX_AF_CQ_CONST(void)
 	__attribute__ ((pure, always_inline));
 static inline u64 CAVM_NIXX_AF_CQ_CONST(void)
 {
-	if (CAVIUM_IS_MODEL(CAVIUM_CN9XXX))
-		return 0x48;
-	return -1;
+	return 0x48;
+}
+
+/**
+ * Register (RVU_PF_BAR0) nix#_af_cqm_bp_test
+ *
+ * INTERNAL: NIX AF CQM Backpressure Test Registers
+ */
+union cavm_nixx_af_cqm_bp_test {
+	u64 u;
+	struct cavm_nixx_af_cqm_bp_test_s {
+		u64 lfsr_freq                        : 12;
+		u64 reserved_12_15                   : 4;
+		u64 bp_cfg                           : 24;
+		u64 enable                           : 12;
+		u64 reserved_52_63                   : 12;
+	} s;
+	/* struct cavm_nixx_af_cqm_bp_test_s cn; */
+};
+
+static inline u64 CAVM_NIXX_AF_CQM_BP_TEST(void)
+	__attribute__ ((pure, always_inline));
+static inline u64 CAVM_NIXX_AF_CQM_BP_TEST(void)
+{
+	return 0x48c0;
+}
+
+/**
+ * Register (RVU_PF_BAR0) nix#_af_cqm_eco
+ *
+ * INTERNAL: AF CQM ECO Register
+ */
+union cavm_nixx_af_cqm_eco {
+	u64 u;
+	struct cavm_nixx_af_cqm_eco_s {
+		u64 eco_rw                           : 64;
+	} s;
+	/* struct cavm_nixx_af_cqm_eco_s cn; */
+};
+
+static inline u64 CAVM_NIXX_AF_CQM_ECO(void)
+	__attribute__ ((pure, always_inline));
+static inline u64 CAVM_NIXX_AF_CQM_ECO(void)
+{
+	return 0x590;
+}
+
+/**
+ * Register (RVU_PF_BAR0) nix#_af_csi_eco
+ *
+ * INTERNAL: AF CSI ECO Register
+ */
+union cavm_nixx_af_csi_eco {
+	u64 u;
+	struct cavm_nixx_af_csi_eco_s {
+		u64 eco_rw                           : 64;
+	} s;
+	/* struct cavm_nixx_af_csi_eco_s cn; */
+};
+
+static inline u64 CAVM_NIXX_AF_CSI_ECO(void)
+	__attribute__ ((pure, always_inline));
+static inline u64 CAVM_NIXX_AF_CSI_ECO(void)
+{
+	return 0x580;
 }
 
 /**
@@ -2459,7 +2433,8 @@ union cavm_nixx_af_err_int {
 		u64 rx_mirror_wqe_fault              : 1;
 		u64 rx_mce_fault                     : 1;
 		u64 rx_mce_list_err                  : 1;
-		u64 reserved_6_11                    : 6;
+		u64 rx_unmapped_pf_func              : 1;
+		u64 reserved_7_11                    : 5;
 		u64 aq_door_err                      : 1;
 		u64 aq_res_fault                     : 1;
 		u64 aq_inst_fault                    : 1;
@@ -2472,9 +2447,7 @@ static inline u64 CAVM_NIXX_AF_ERR_INT(void)
 	__attribute__ ((pure, always_inline));
 static inline u64 CAVM_NIXX_AF_ERR_INT(void)
 {
-	if (CAVIUM_IS_MODEL(CAVIUM_CN9XXX))
-		return 0x180;
-	return -1;
+	return 0x180;
 }
 
 /**
@@ -2492,7 +2465,8 @@ union cavm_nixx_af_err_int_ena_w1c {
 		u64 rx_mirror_wqe_fault              : 1;
 		u64 rx_mce_fault                     : 1;
 		u64 rx_mce_list_err                  : 1;
-		u64 reserved_6_11                    : 6;
+		u64 rx_unmapped_pf_func              : 1;
+		u64 reserved_7_11                    : 5;
 		u64 aq_door_err                      : 1;
 		u64 aq_res_fault                     : 1;
 		u64 aq_inst_fault                    : 1;
@@ -2505,9 +2479,7 @@ static inline u64 CAVM_NIXX_AF_ERR_INT_ENA_W1C(void)
 	__attribute__ ((pure, always_inline));
 static inline u64 CAVM_NIXX_AF_ERR_INT_ENA_W1C(void)
 {
-	if (CAVIUM_IS_MODEL(CAVIUM_CN9XXX))
-		return 0x198;
-	return -1;
+	return 0x198;
 }
 
 /**
@@ -2525,7 +2497,8 @@ union cavm_nixx_af_err_int_ena_w1s {
 		u64 rx_mirror_wqe_fault              : 1;
 		u64 rx_mce_fault                     : 1;
 		u64 rx_mce_list_err                  : 1;
-		u64 reserved_6_11                    : 6;
+		u64 rx_unmapped_pf_func              : 1;
+		u64 reserved_7_11                    : 5;
 		u64 aq_door_err                      : 1;
 		u64 aq_res_fault                     : 1;
 		u64 aq_inst_fault                    : 1;
@@ -2538,9 +2511,7 @@ static inline u64 CAVM_NIXX_AF_ERR_INT_ENA_W1S(void)
 	__attribute__ ((pure, always_inline));
 static inline u64 CAVM_NIXX_AF_ERR_INT_ENA_W1S(void)
 {
-	if (CAVIUM_IS_MODEL(CAVIUM_CN9XXX))
-		return 0x190;
-	return -1;
+	return 0x190;
 }
 
 /**
@@ -2558,7 +2529,8 @@ union cavm_nixx_af_err_int_w1s {
 		u64 rx_mirror_wqe_fault              : 1;
 		u64 rx_mce_fault                     : 1;
 		u64 rx_mce_list_err                  : 1;
-		u64 reserved_6_11                    : 6;
+		u64 rx_unmapped_pf_func              : 1;
+		u64 reserved_7_11                    : 5;
 		u64 aq_door_err                      : 1;
 		u64 aq_res_fault                     : 1;
 		u64 aq_inst_fault                    : 1;
@@ -2571,9 +2543,7 @@ static inline u64 CAVM_NIXX_AF_ERR_INT_W1S(void)
 	__attribute__ ((pure, always_inline));
 static inline u64 CAVM_NIXX_AF_ERR_INT_W1S(void)
 {
-	if (CAVIUM_IS_MODEL(CAVIUM_CN9XXX))
-		return 0x188;
-	return -1;
+	return 0x188;
 }
 
 /**
@@ -2595,9 +2565,7 @@ static inline u64 CAVM_NIXX_AF_EXPR_TX_FIFO_STATUS(void)
 	__attribute__ ((pure, always_inline));
 static inline u64 CAVM_NIXX_AF_EXPR_TX_FIFO_STATUS(void)
 {
-	if (CAVIUM_IS_MODEL(CAVIUM_CN9XXX))
-		return 0x640;
-	return -1;
+	return 0x640;
 }
 
 /**
@@ -2622,9 +2590,7 @@ static inline u64 CAVM_NIXX_AF_GEN_INT(void)
 	__attribute__ ((pure, always_inline));
 static inline u64 CAVM_NIXX_AF_GEN_INT(void)
 {
-	if (CAVIUM_IS_MODEL(CAVIUM_CN9XXX))
-		return 0x160;
-	return -1;
+	return 0x160;
 }
 
 /**
@@ -2650,9 +2616,7 @@ static inline u64 CAVM_NIXX_AF_GEN_INT_ENA_W1C(void)
 	__attribute__ ((pure, always_inline));
 static inline u64 CAVM_NIXX_AF_GEN_INT_ENA_W1C(void)
 {
-	if (CAVIUM_IS_MODEL(CAVIUM_CN9XXX))
-		return 0x178;
-	return -1;
+	return 0x178;
 }
 
 /**
@@ -2678,9 +2642,7 @@ static inline u64 CAVM_NIXX_AF_GEN_INT_ENA_W1S(void)
 	__attribute__ ((pure, always_inline));
 static inline u64 CAVM_NIXX_AF_GEN_INT_ENA_W1S(void)
 {
-	if (CAVIUM_IS_MODEL(CAVIUM_CN9XXX))
-		return 0x170;
-	return -1;
+	return 0x170;
 }
 
 /**
@@ -2706,9 +2668,7 @@ static inline u64 CAVM_NIXX_AF_GEN_INT_W1S(void)
 	__attribute__ ((pure, always_inline));
 static inline u64 CAVM_NIXX_AF_GEN_INT_W1S(void)
 {
-	if (CAVIUM_IS_MODEL(CAVIUM_CN9XXX))
-		return 0x168;
-	return -1;
+	return 0x168;
 }
 
 /**
@@ -2732,9 +2692,7 @@ static inline u64 CAVM_NIXX_AF_LFX_CFG(u64 a)
 	__attribute__ ((pure, always_inline));
 static inline u64 CAVM_NIXX_AF_LFX_CFG(u64 a)
 {
-	if (CAVIUM_IS_MODEL(CAVIUM_CN9XXX) && (a <= 127))
-		return 0x4000 + 0x20000 * ((a) & 0x7f);
-	return -1;
+	return 0x4000 + 0x20000 * a;
 }
 
 /**
@@ -2759,9 +2717,7 @@ static inline u64 CAVM_NIXX_AF_LFX_CINTS_BASE(u64 a)
 	__attribute__ ((pure, always_inline));
 static inline u64 CAVM_NIXX_AF_LFX_CINTS_BASE(u64 a)
 {
-	if (CAVIUM_IS_MODEL(CAVIUM_CN9XXX) && (a <= 127))
-		return 0x4130 + 0x20000 * ((a) & 0x7f);
-	return -1;
+	return 0x4130 + 0x20000 * a;
 }
 
 /**
@@ -2787,9 +2743,7 @@ static inline u64 CAVM_NIXX_AF_LFX_CINTS_CFG(u64 a)
 	__attribute__ ((pure, always_inline));
 static inline u64 CAVM_NIXX_AF_LFX_CINTS_CFG(u64 a)
 {
-	if (CAVIUM_IS_MODEL(CAVIUM_CN9XXX) && (a <= 127))
-		return 0x4120 + 0x20000 * ((a) & 0x7f);
-	return -1;
+	return 0x4120 + 0x20000 * a;
 }
 
 /**
@@ -2814,9 +2768,7 @@ static inline u64 CAVM_NIXX_AF_LFX_CQS_BASE(u64 a)
 	__attribute__ ((pure, always_inline));
 static inline u64 CAVM_NIXX_AF_LFX_CQS_BASE(u64 a)
 {
-	if (CAVIUM_IS_MODEL(CAVIUM_CN9XXX) && (a <= 127))
-		return 0x4070 + 0x20000 * ((a) & 0x7f);
-	return -1;
+	return 0x4070 + 0x20000 * a;
 }
 
 /**
@@ -2840,9 +2792,7 @@ static inline u64 CAVM_NIXX_AF_LFX_CQS_CFG(u64 a)
 	__attribute__ ((pure, always_inline));
 static inline u64 CAVM_NIXX_AF_LFX_CQS_CFG(u64 a)
 {
-	if (CAVIUM_IS_MODEL(CAVIUM_CN9XXX) && (a <= 127))
-		return 0x4060 + 0x20000 * ((a) & 0x7f);
-	return -1;
+	return 0x4060 + 0x20000 * a;
 }
 
 /**
@@ -2867,9 +2817,7 @@ static inline u64 CAVM_NIXX_AF_LFX_LOCKX(u64 a, u64 b)
 	__attribute__ ((pure, always_inline));
 static inline u64 CAVM_NIXX_AF_LFX_LOCKX(u64 a, u64 b)
 {
-	if (CAVIUM_IS_MODEL(CAVIUM_CN9XXX) && ((a <= 127) && (b <= 7)))
-		return 0x4300 + 0x20000 * ((a) & 0x7f) + 8 * ((b) & 0x7);
-	return -1;
+	return 0x4300 + 0x20000 * a + 8 * b;
 }
 
 /**
@@ -2894,9 +2842,7 @@ static inline u64 CAVM_NIXX_AF_LFX_QINTS_BASE(u64 a)
 	__attribute__ ((pure, always_inline));
 static inline u64 CAVM_NIXX_AF_LFX_QINTS_BASE(u64 a)
 {
-	if (CAVIUM_IS_MODEL(CAVIUM_CN9XXX) && (a <= 127))
-		return 0x4110 + 0x20000 * ((a) & 0x7f);
-	return -1;
+	return 0x4110 + 0x20000 * a;
 }
 
 /**
@@ -2922,9 +2868,7 @@ static inline u64 CAVM_NIXX_AF_LFX_QINTS_CFG(u64 a)
 	__attribute__ ((pure, always_inline));
 static inline u64 CAVM_NIXX_AF_LFX_QINTS_CFG(u64 a)
 {
-	if (CAVIUM_IS_MODEL(CAVIUM_CN9XXX) && (a <= 127))
-		return 0x4100 + 0x20000 * ((a) & 0x7f);
-	return -1;
+	return 0x4100 + 0x20000 * a;
 }
 
 /**
@@ -2949,9 +2893,7 @@ static inline u64 CAVM_NIXX_AF_LFX_RQS_BASE(u64 a)
 	__attribute__ ((pure, always_inline));
 static inline u64 CAVM_NIXX_AF_LFX_RQS_BASE(u64 a)
 {
-	if (CAVIUM_IS_MODEL(CAVIUM_CN9XXX) && (a <= 127))
-		return 0x4050 + 0x20000 * ((a) & 0x7f);
-	return -1;
+	return 0x4050 + 0x20000 * a;
 }
 
 /**
@@ -2975,9 +2917,7 @@ static inline u64 CAVM_NIXX_AF_LFX_RQS_CFG(u64 a)
 	__attribute__ ((pure, always_inline));
 static inline u64 CAVM_NIXX_AF_LFX_RQS_CFG(u64 a)
 {
-	if (CAVIUM_IS_MODEL(CAVIUM_CN9XXX) && (a <= 127))
-		return 0x4040 + 0x20000 * ((a) & 0x7f);
-	return -1;
+	return 0x4040 + 0x20000 * a;
 }
 
 /**
@@ -3004,9 +2944,7 @@ static inline u64 CAVM_NIXX_AF_LFX_RSS_BASE(u64 a)
 	__attribute__ ((pure, always_inline));
 static inline u64 CAVM_NIXX_AF_LFX_RSS_BASE(u64 a)
 {
-	if (CAVIUM_IS_MODEL(CAVIUM_CN9XXX) && (a <= 127))
-		return 0x40d0 + 0x20000 * ((a) & 0x7f);
-	return -1;
+	return 0x40d0 + 0x20000 * a;
 }
 
 /**
@@ -3032,9 +2970,7 @@ static inline u64 CAVM_NIXX_AF_LFX_RSS_CFG(u64 a)
 	__attribute__ ((pure, always_inline));
 static inline u64 CAVM_NIXX_AF_LFX_RSS_CFG(u64 a)
 {
-	if (CAVIUM_IS_MODEL(CAVIUM_CN9XXX) && (a <= 127))
-		return 0x40c0 + 0x20000 * ((a) & 0x7f);
-	return -1;
+	return 0x40c0 + 0x20000 * a;
 }
 
 /**
@@ -3066,9 +3002,7 @@ static inline u64 CAVM_NIXX_AF_LFX_RSS_GRPX(u64 a, u64 b)
 	__attribute__ ((pure, always_inline));
 static inline u64 CAVM_NIXX_AF_LFX_RSS_GRPX(u64 a, u64 b)
 {
-	if (CAVIUM_IS_MODEL(CAVIUM_CN9XXX) && ((a <= 127) && (b <= 7)))
-		return 0x4600 + 0x20000 * ((a) & 0x7f) + 8 * ((b) & 0x7);
-	return -1;
+	return 0x4600 + 0x20000 * a + 8 * b;
 }
 
 /**
@@ -3098,9 +3032,7 @@ static inline u64 CAVM_NIXX_AF_LFX_RX_CFG(u64 a)
 	__attribute__ ((pure, always_inline));
 static inline u64 CAVM_NIXX_AF_LFX_RX_CFG(u64 a)
 {
-	if (CAVIUM_IS_MODEL(CAVIUM_CN9XXX) && (a <= 127))
-		return 0x40a0 + 0x20000 * ((a) & 0x7f);
-	return -1;
+	return 0x40a0 + 0x20000 * a;
 }
 
 /**
@@ -3127,9 +3059,7 @@ static inline u64 CAVM_NIXX_AF_LFX_RX_IPSEC_CFG0(u64 a)
 	__attribute__ ((pure, always_inline));
 static inline u64 CAVM_NIXX_AF_LFX_RX_IPSEC_CFG0(u64 a)
 {
-	if (CAVIUM_IS_MODEL(CAVIUM_CN9XXX) && (a <= 127))
-		return 0x4140 + 0x20000 * ((a) & 0x7f);
-	return -1;
+	return 0x4140 + 0x20000 * a;
 }
 
 /**
@@ -3151,9 +3081,7 @@ static inline u64 CAVM_NIXX_AF_LFX_RX_IPSEC_CFG1(u64 a)
 	__attribute__ ((pure, always_inline));
 static inline u64 CAVM_NIXX_AF_LFX_RX_IPSEC_CFG1(u64 a)
 {
-	if (CAVIUM_IS_MODEL(CAVIUM_CN9XXX) && (a <= 127))
-		return 0x4148 + 0x20000 * ((a) & 0x7f);
-	return -1;
+	return 0x4148 + 0x20000 * a;
 }
 
 /**
@@ -3179,9 +3107,7 @@ static inline u64 CAVM_NIXX_AF_LFX_RX_IPSEC_DYNO_BASE(u64 a)
 	__attribute__ ((pure, always_inline));
 static inline u64 CAVM_NIXX_AF_LFX_RX_IPSEC_DYNO_BASE(u64 a)
 {
-	if (CAVIUM_IS_MODEL(CAVIUM_CN9XXX) && (a <= 127))
-		return 0x4158 + 0x20000 * ((a) & 0x7f);
-	return -1;
+	return 0x4158 + 0x20000 * a;
 }
 
 /**
@@ -3206,9 +3132,7 @@ static inline u64 CAVM_NIXX_AF_LFX_RX_IPSEC_DYNO_CFG(u64 a)
 	__attribute__ ((pure, always_inline));
 static inline u64 CAVM_NIXX_AF_LFX_RX_IPSEC_DYNO_CFG(u64 a)
 {
-	if (CAVIUM_IS_MODEL(CAVIUM_CN9XXX) && (a <= 127))
-		return 0x4150 + 0x20000 * ((a) & 0x7f);
-	return -1;
+	return 0x4150 + 0x20000 * a;
 }
 
 /**
@@ -3231,9 +3155,7 @@ static inline u64 CAVM_NIXX_AF_LFX_RX_IPSEC_SA_BASE(u64 a)
 	__attribute__ ((pure, always_inline));
 static inline u64 CAVM_NIXX_AF_LFX_RX_IPSEC_SA_BASE(u64 a)
 {
-	if (CAVIUM_IS_MODEL(CAVIUM_CN9XXX) && (a <= 127))
-		return 0x4170 + 0x20000 * ((a) & 0x7f);
-	return -1;
+	return 0x4170 + 0x20000 * a;
 }
 
 /**
@@ -3255,9 +3177,7 @@ static inline u64 CAVM_NIXX_AF_LFX_RX_STATX(u64 a, u64 b)
 	__attribute__ ((pure, always_inline));
 static inline u64 CAVM_NIXX_AF_LFX_RX_STATX(u64 a, u64 b)
 {
-	if (CAVIUM_IS_MODEL(CAVIUM_CN9XXX) && ((a <= 127) && (b <= 11)))
-		return 0x4500 + 0x20000 * ((a) & 0x7f) + 8 * ((b) & 0xf);
-	return -1;
+	return 0x4500 + 0x20000 * a + 8 * b;
 }
 
 /**
@@ -3270,8 +3190,8 @@ static inline u64 CAVM_NIXX_AF_LFX_RX_STATX(u64 a, u64 b)
 union cavm_nixx_af_lfx_rx_vtag_typex {
 	u64 u;
 	struct cavm_nixx_af_lfx_rx_vtag_typex_s {
-		u64 size                             : 3;
-		u64 reserved_3                       : 1;
+		u64 size                             : 1;
+		u64 reserved_1_3                     : 3;
 		u64 strip                            : 1;
 		u64 capture                          : 1;
 		u64 reserved_6_63                    : 58;
@@ -3283,9 +3203,7 @@ static inline u64 CAVM_NIXX_AF_LFX_RX_VTAG_TYPEX(u64 a, u64 b)
 	__attribute__ ((pure, always_inline));
 static inline u64 CAVM_NIXX_AF_LFX_RX_VTAG_TYPEX(u64 a, u64 b)
 {
-	if (CAVIUM_IS_MODEL(CAVIUM_CN9XXX) && ((a <= 127) && (b <= 7)))
-		return 0x4200 + 0x20000 * ((a) & 0x7f) + 8 * ((b) & 0x7);
-	return -1;
+	return 0x4200 + 0x20000 * a + 8 * b;
 }
 
 /**
@@ -3310,9 +3228,7 @@ static inline u64 CAVM_NIXX_AF_LFX_SQS_BASE(u64 a)
 	__attribute__ ((pure, always_inline));
 static inline u64 CAVM_NIXX_AF_LFX_SQS_BASE(u64 a)
 {
-	if (CAVIUM_IS_MODEL(CAVIUM_CN9XXX) && (a <= 127))
-		return 0x4030 + 0x20000 * ((a) & 0x7f);
-	return -1;
+	return 0x4030 + 0x20000 * a;
 }
 
 /**
@@ -3336,9 +3252,7 @@ static inline u64 CAVM_NIXX_AF_LFX_SQS_CFG(u64 a)
 	__attribute__ ((pure, always_inline));
 static inline u64 CAVM_NIXX_AF_LFX_SQS_CFG(u64 a)
 {
-	if (CAVIUM_IS_MODEL(CAVIUM_CN9XXX) && (a <= 127))
-		return 0x4020 + 0x20000 * ((a) & 0x7f);
-	return -1;
+	return 0x4020 + 0x20000 * a;
 }
 
 /**
@@ -3363,9 +3277,7 @@ static inline u64 CAVM_NIXX_AF_LFX_TX_CFG(u64 a)
 	__attribute__ ((pure, always_inline));
 static inline u64 CAVM_NIXX_AF_LFX_TX_CFG(u64 a)
 {
-	if (CAVIUM_IS_MODEL(CAVIUM_CN9XXX) && (a <= 127))
-		return 0x4080 + 0x20000 * ((a) & 0x7f);
-	return -1;
+	return 0x4080 + 0x20000 * a;
 }
 
 /**
@@ -3386,9 +3298,7 @@ static inline u64 CAVM_NIXX_AF_LFX_TX_CFG2(u64 a)
 	__attribute__ ((pure, always_inline));
 static inline u64 CAVM_NIXX_AF_LFX_TX_CFG2(u64 a)
 {
-	if (CAVIUM_IS_MODEL(CAVIUM_CN9XXX) && (a <= 127))
-		return 0x4028 + 0x20000 * ((a) & 0x7f);
-	return -1;
+	return 0x4028 + 0x20000 * a;
 }
 
 /**
@@ -3409,9 +3319,7 @@ static inline u64 CAVM_NIXX_AF_LFX_TX_PARSE_CFG(u64 a)
 	__attribute__ ((pure, always_inline));
 static inline u64 CAVM_NIXX_AF_LFX_TX_PARSE_CFG(u64 a)
 {
-	if (CAVIUM_IS_MODEL(CAVIUM_CN9XXX) && (a <= 127))
-		return 0x4090 + 0x20000 * ((a) & 0x7f);
-	return -1;
+	return 0x4090 + 0x20000 * a;
 }
 
 /**
@@ -3433,9 +3341,7 @@ static inline u64 CAVM_NIXX_AF_LFX_TX_STATX(u64 a, u64 b)
 	__attribute__ ((pure, always_inline));
 static inline u64 CAVM_NIXX_AF_LFX_TX_STATX(u64 a, u64 b)
 {
-	if (CAVIUM_IS_MODEL(CAVIUM_CN9XXX) && ((a <= 127) && (b <= 4)))
-		return 0x4400 + 0x20000 * ((a) & 0x7f) + 8 * ((b) & 0x7);
-	return -1;
+	return 0x4400 + 0x20000 * a + 8 * b;
 }
 
 /**
@@ -3456,9 +3362,7 @@ static inline u64 CAVM_NIXX_AF_LFX_TX_STATUS(u64 a)
 	__attribute__ ((pure, always_inline));
 static inline u64 CAVM_NIXX_AF_LFX_TX_STATUS(u64 a)
 {
-	if (CAVIUM_IS_MODEL(CAVIUM_CN9XXX) && (a <= 127))
-		return 0x4180 + 0x20000 * ((a) & 0x7f);
-	return -1;
+	return 0x4180 + 0x20000 * a;
 }
 
 /**
@@ -3481,9 +3385,7 @@ static inline u64 CAVM_NIXX_AF_LF_RST(void)
 	__attribute__ ((pure, always_inline));
 static inline u64 CAVM_NIXX_AF_LF_RST(void)
 {
-	if (CAVIUM_IS_MODEL(CAVIUM_CN9XXX))
-		return 0x150;
-	return -1;
+	return 0x150;
 }
 
 /**
@@ -3507,9 +3409,7 @@ static inline u64 CAVM_NIXX_AF_LSO_CFG(void)
 	__attribute__ ((pure, always_inline));
 static inline u64 CAVM_NIXX_AF_LSO_CFG(void)
 {
-	if (CAVIUM_IS_MODEL(CAVIUM_CN9XXX))
-		return 0xa8;
-	return -1;
+	return 0xa8;
 }
 
 /**
@@ -3545,9 +3445,7 @@ static inline u64 CAVM_NIXX_AF_LSO_FORMATX_FIELDX(u64 a, u64 b)
 	__attribute__ ((pure, always_inline));
 static inline u64 CAVM_NIXX_AF_LSO_FORMATX_FIELDX(u64 a, u64 b)
 {
-	if (CAVIUM_IS_MODEL(CAVIUM_CN9XXX) && ((a <= 31) && (b <= 7)))
-		return 0x1b00 + 0x10000 * ((a) & 0x1f) + 8 * ((b) & 0x7);
-	return -1;
+	return 0x1b00 + 0x10000 * a + 8 * b;
 }
 
 /**
@@ -3593,9 +3491,7 @@ static inline u64 CAVM_NIXX_AF_MARK_FORMATX_CTL(u64 a)
 	__attribute__ ((pure, always_inline));
 static inline u64 CAVM_NIXX_AF_MARK_FORMATX_CTL(u64 a)
 {
-	if (CAVIUM_IS_MODEL(CAVIUM_CN9XXX) && (a <= 127))
-		return 0x900 + 0x40000 * ((a) & 0x7f);
-	return -1;
+	return 0x900 + 0x40000 * a;
 }
 
 /**
@@ -3617,9 +3513,7 @@ static inline u64 CAVM_NIXX_AF_MC_MIRROR_CONST(void)
 	__attribute__ ((pure, always_inline));
 static inline u64 CAVM_NIXX_AF_MC_MIRROR_CONST(void)
 {
-	if (CAVIUM_IS_MODEL(CAVIUM_CN9XXX))
-		return 0x98;
-	return -1;
+	return 0x98;
 }
 
 /**
@@ -3647,9 +3541,7 @@ static inline u64 CAVM_NIXX_AF_MDQX_CIR(u64 a)
 	__attribute__ ((pure, always_inline));
 static inline u64 CAVM_NIXX_AF_MDQX_CIR(u64 a)
 {
-	if (CAVIUM_IS_MODEL(CAVIUM_CN9XXX) && (a <= 511))
-		return 0x1420 + 0x10000 * ((a) & 0x1ff);
-	return -1;
+	return 0x1420 + 0x10000 * a;
 }
 
 /**
@@ -3680,9 +3572,7 @@ static inline u64 CAVM_NIXX_AF_MDQX_MD_DEBUG(u64 a)
 	__attribute__ ((pure, always_inline));
 static inline u64 CAVM_NIXX_AF_MDQX_MD_DEBUG(u64 a)
 {
-	if (CAVIUM_IS_MODEL(CAVIUM_CN9XXX) && (a <= 511))
-		return 0x14c0 + 0x10000 * ((a) & 0x1ff);
-	return -1;
+	return 0x14c0 + 0x10000 * a;
 }
 
 /**
@@ -3704,9 +3594,7 @@ static inline u64 CAVM_NIXX_AF_MDQX_PARENT(u64 a)
 	__attribute__ ((pure, always_inline));
 static inline u64 CAVM_NIXX_AF_MDQX_PARENT(u64 a)
 {
-	if (CAVIUM_IS_MODEL(CAVIUM_CN9XXX) && (a <= 511))
-		return 0x1480 + 0x10000 * ((a) & 0x1ff);
-	return -1;
+	return 0x1480 + 0x10000 * a;
 }
 
 /**
@@ -3734,9 +3622,7 @@ static inline u64 CAVM_NIXX_AF_MDQX_PIR(u64 a)
 	__attribute__ ((pure, always_inline));
 static inline u64 CAVM_NIXX_AF_MDQX_PIR(u64 a)
 {
-	if (CAVIUM_IS_MODEL(CAVIUM_CN9XXX) && (a <= 511))
-		return 0x1430 + 0x10000 * ((a) & 0x1ff);
-	return -1;
+	return 0x1430 + 0x10000 * a;
 }
 
 /**
@@ -3761,9 +3647,7 @@ static inline u64 CAVM_NIXX_AF_MDQX_POINTERS(u64 a)
 	__attribute__ ((pure, always_inline));
 static inline u64 CAVM_NIXX_AF_MDQX_POINTERS(u64 a)
 {
-	if (CAVIUM_IS_MODEL(CAVIUM_CN9XXX) && (a <= 511))
-		return 0x1460 + 0x10000 * ((a) & 0x1ff);
-	return -1;
+	return 0x1460 + 0x10000 * a;
 }
 
 /**
@@ -3786,9 +3670,7 @@ static inline u64 CAVM_NIXX_AF_MDQX_PTR_FIFO(u64 a)
 	__attribute__ ((pure, always_inline));
 static inline u64 CAVM_NIXX_AF_MDQX_PTR_FIFO(u64 a)
 {
-	if (CAVIUM_IS_MODEL(CAVIUM_CN9XXX) && (a <= 511))
-		return 0x14d0 + 0x10000 * ((a) & 0x1ff);
-	return -1;
+	return 0x14d0 + 0x10000 * a;
 }
 
 /**
@@ -3810,9 +3692,7 @@ static inline u64 CAVM_NIXX_AF_MDQX_SCHED_STATE(u64 a)
 	__attribute__ ((pure, always_inline));
 static inline u64 CAVM_NIXX_AF_MDQX_SCHED_STATE(u64 a)
 {
-	if (CAVIUM_IS_MODEL(CAVIUM_CN9XXX) && (a <= 511))
-		return 0x1440 + 0x10000 * ((a) & 0x1ff);
-	return -1;
+	return 0x1440 + 0x10000 * a;
 }
 
 /**
@@ -3835,9 +3715,7 @@ static inline u64 CAVM_NIXX_AF_MDQX_SCHEDULE(u64 a)
 	__attribute__ ((pure, always_inline));
 static inline u64 CAVM_NIXX_AF_MDQX_SCHEDULE(u64 a)
 {
-	if (CAVIUM_IS_MODEL(CAVIUM_CN9XXX) && (a <= 511))
-		return 0x1400 + 0x10000 * ((a) & 0x1ff);
-	return -1;
+	return 0x1400 + 0x10000 * a;
 }
 
 /**
@@ -3865,9 +3743,7 @@ static inline u64 CAVM_NIXX_AF_MDQX_SHAPE(u64 a)
 	__attribute__ ((pure, always_inline));
 static inline u64 CAVM_NIXX_AF_MDQX_SHAPE(u64 a)
 {
-	if (CAVIUM_IS_MODEL(CAVIUM_CN9XXX) && (a <= 511))
-		return 0x1410 + 0x10000 * ((a) & 0x1ff);
-	return -1;
+	return 0x1410 + 0x10000 * a;
 }
 
 /**
@@ -3892,9 +3768,7 @@ static inline u64 CAVM_NIXX_AF_MDQX_SHAPE_STATE(u64 a)
 	__attribute__ ((pure, always_inline));
 static inline u64 CAVM_NIXX_AF_MDQX_SHAPE_STATE(u64 a)
 {
-	if (CAVIUM_IS_MODEL(CAVIUM_CN9XXX) && (a <= 511))
-		return 0x1450 + 0x10000 * ((a) & 0x1ff);
-	return -1;
+	return 0x1450 + 0x10000 * a;
 }
 
 /**
@@ -3919,9 +3793,7 @@ static inline u64 CAVM_NIXX_AF_MDQX_SW_XOFF(u64 a)
 	__attribute__ ((pure, always_inline));
 static inline u64 CAVM_NIXX_AF_MDQX_SW_XOFF(u64 a)
 {
-	if (CAVIUM_IS_MODEL(CAVIUM_CN9XXX) && (a <= 511))
-		return 0x1470 + 0x10000 * ((a) & 0x1ff);
-	return -1;
+	return 0x1470 + 0x10000 * a;
 }
 
 /**
@@ -3943,9 +3815,7 @@ static inline u64 CAVM_NIXX_AF_MDQ_CONST(void)
 	__attribute__ ((pure, always_inline));
 static inline u64 CAVM_NIXX_AF_MDQ_CONST(void)
 {
-	if (CAVIUM_IS_MODEL(CAVIUM_CN9XXX))
-		return 0x90;
-	return -1;
+	return 0x90;
 }
 
 /**
@@ -3979,9 +3849,7 @@ static inline u64 CAVM_NIXX_AF_NDC_CFG(void)
 	__attribute__ ((pure, always_inline));
 static inline u64 CAVM_NIXX_AF_NDC_CFG(void)
 {
-	if (CAVIUM_IS_MODEL(CAVIUM_CN9XXX))
-		return 0x18;
-	return -1;
+	return 0x18;
 }
 
 /**
@@ -4005,9 +3873,7 @@ static inline u64 CAVM_NIXX_AF_NDC_RX_SYNC(void)
 	__attribute__ ((pure, always_inline));
 static inline u64 CAVM_NIXX_AF_NDC_RX_SYNC(void)
 {
-	if (CAVIUM_IS_MODEL(CAVIUM_CN9XXX))
-		return 0x3e0;
-	return -1;
+	return 0x3e0;
 }
 
 /**
@@ -4031,9 +3897,7 @@ static inline u64 CAVM_NIXX_AF_NDC_TX_SYNC(void)
 	__attribute__ ((pure, always_inline));
 static inline u64 CAVM_NIXX_AF_NDC_TX_SYNC(void)
 {
-	if (CAVIUM_IS_MODEL(CAVIUM_CN9XXX))
-		return 0x3f0;
-	return -1;
+	return 0x3f0;
 }
 
 /**
@@ -4055,9 +3919,28 @@ static inline u64 CAVM_NIXX_AF_NORM_TX_FIFO_STATUS(void)
 	__attribute__ ((pure, always_inline));
 static inline u64 CAVM_NIXX_AF_NORM_TX_FIFO_STATUS(void)
 {
-	if (CAVIUM_IS_MODEL(CAVIUM_CN9XXX))
-		return 0x648;
-	return -1;
+	return 0x648;
+}
+
+/**
+ * Register (RVU_PF_BAR0) nix#_af_pse_400_rate_divider
+ *
+ * INTERNAL: NIX AF PSE 400 Rate Divider Register
+ */
+union cavm_nixx_af_pse_400_rate_divider {
+	u64 u;
+	struct cavm_nixx_af_pse_400_rate_divider_s {
+		u64 rate_div_cfg                     : 9;
+		u64 reserved_9_63                    : 55;
+	} s;
+	/* struct cavm_nixx_af_pse_400_rate_divider_s cn; */
+};
+
+static inline u64 CAVM_NIXX_AF_PSE_400_RATE_DIVIDER(void)
+	__attribute__ ((pure, always_inline));
+static inline u64 CAVM_NIXX_AF_PSE_400_RATE_DIVIDER(void)
+{
+	return 0x830;
 }
 
 /**
@@ -4078,9 +3961,7 @@ static inline u64 CAVM_NIXX_AF_PSE_ACTIVE_CYCLES_PC(void)
 	__attribute__ ((pure, always_inline));
 static inline u64 CAVM_NIXX_AF_PSE_ACTIVE_CYCLES_PC(void)
 {
-	if (CAVIUM_IS_MODEL(CAVIUM_CN9XXX))
-		return 0x8c0;
-	return -1;
+	return 0x8c0;
 }
 
 /**
@@ -4104,9 +3985,7 @@ static inline u64 CAVM_NIXX_AF_PSE_BP_TEST0(void)
 	__attribute__ ((pure, always_inline));
 static inline u64 CAVM_NIXX_AF_PSE_BP_TEST0(void)
 {
-	if (CAVIUM_IS_MODEL(CAVIUM_CN9XXX))
-		return 0x840;
-	return -1;
+	return 0x840;
 }
 
 /**
@@ -4130,9 +4009,7 @@ static inline u64 CAVM_NIXX_AF_PSE_BP_TEST1(void)
 	__attribute__ ((pure, always_inline));
 static inline u64 CAVM_NIXX_AF_PSE_BP_TEST1(void)
 {
-	if (CAVIUM_IS_MODEL(CAVIUM_CN9XXX))
-		return 0x850;
-	return -1;
+	return 0x850;
 }
 
 /**
@@ -4156,9 +4033,7 @@ static inline u64 CAVM_NIXX_AF_PSE_BP_TEST2(void)
 	__attribute__ ((pure, always_inline));
 static inline u64 CAVM_NIXX_AF_PSE_BP_TEST2(void)
 {
-	if (CAVIUM_IS_MODEL(CAVIUM_CN9XXX))
-		return 0x860;
-	return -1;
+	return 0x860;
 }
 
 /**
@@ -4182,9 +4057,7 @@ static inline u64 CAVM_NIXX_AF_PSE_BP_TEST3(void)
 	__attribute__ ((pure, always_inline));
 static inline u64 CAVM_NIXX_AF_PSE_BP_TEST3(void)
 {
-	if (CAVIUM_IS_MODEL(CAVIUM_CN9XXX))
-		return 0x870;
-	return -1;
+	return 0x870;
 }
 
 /**
@@ -4205,9 +4078,7 @@ static inline u64 CAVM_NIXX_AF_PSE_CHANNEL_LEVEL(void)
 	__attribute__ ((pure, always_inline));
 static inline u64 CAVM_NIXX_AF_PSE_CHANNEL_LEVEL(void)
 {
-	if (CAVIUM_IS_MODEL(CAVIUM_CN9XXX))
-		return 0x800;
-	return -1;
+	return 0x800;
 }
 
 /**
@@ -4231,9 +4102,27 @@ static inline u64 CAVM_NIXX_AF_PSE_CONST(void)
 	__attribute__ ((pure, always_inline));
 static inline u64 CAVM_NIXX_AF_PSE_CONST(void)
 {
-	if (CAVIUM_IS_MODEL(CAVIUM_CN9XXX))
-		return 0x60;
-	return -1;
+	return 0x60;
+}
+
+/**
+ * Register (RVU_PF_BAR0) nix#_af_pse_eco
+ *
+ * INTERNAL: AF PSE ECO Register
+ */
+union cavm_nixx_af_pse_eco {
+	u64 u;
+	struct cavm_nixx_af_pse_eco_s {
+		u64 eco_rw                           : 64;
+	} s;
+	/* struct cavm_nixx_af_pse_eco_s cn; */
+};
+
+static inline u64 CAVM_NIXX_AF_PSE_ECO(void)
+	__attribute__ ((pure, always_inline));
+static inline u64 CAVM_NIXX_AF_PSE_ECO(void)
+{
+	return 0x5d0;
 }
 
 /**
@@ -4256,9 +4145,7 @@ static inline u64 CAVM_NIXX_AF_PSE_EXPR_BP_TEST(void)
 	__attribute__ ((pure, always_inline));
 static inline u64 CAVM_NIXX_AF_PSE_EXPR_BP_TEST(void)
 {
-	if (CAVIUM_IS_MODEL(CAVIUM_CN9XXX))
-		return 0x890;
-	return -1;
+	return 0x890;
 }
 
 /**
@@ -4281,9 +4168,7 @@ static inline u64 CAVM_NIXX_AF_PSE_NORM_BP_TEST(void)
 	__attribute__ ((pure, always_inline));
 static inline u64 CAVM_NIXX_AF_PSE_NORM_BP_TEST(void)
 {
-	if (CAVIUM_IS_MODEL(CAVIUM_CN9XXX))
-		return 0x880;
-	return -1;
+	return 0x880;
 }
 
 /**
@@ -4305,9 +4190,7 @@ static inline u64 CAVM_NIXX_AF_PSE_SHAPER_CFG(void)
 	__attribute__ ((pure, always_inline));
 static inline u64 CAVM_NIXX_AF_PSE_SHAPER_CFG(void)
 {
-	if (CAVIUM_IS_MODEL(CAVIUM_CN9XXX))
-		return 0x810;
-	return -1;
+	return 0x810;
 }
 
 /**
@@ -4338,9 +4221,7 @@ static inline u64 CAVM_NIXX_AF_RAS(void)
 	__attribute__ ((pure, always_inline));
 static inline u64 CAVM_NIXX_AF_RAS(void)
 {
-	if (CAVIUM_IS_MODEL(CAVIUM_CN9XXX))
-		return 0x1a0;
-	return -1;
+	return 0x1a0;
 }
 
 /**
@@ -4370,9 +4251,7 @@ static inline u64 CAVM_NIXX_AF_RAS_ENA_W1C(void)
 	__attribute__ ((pure, always_inline));
 static inline u64 CAVM_NIXX_AF_RAS_ENA_W1C(void)
 {
-	if (CAVIUM_IS_MODEL(CAVIUM_CN9XXX))
-		return 0x1b8;
-	return -1;
+	return 0x1b8;
 }
 
 /**
@@ -4402,9 +4281,7 @@ static inline u64 CAVM_NIXX_AF_RAS_ENA_W1S(void)
 	__attribute__ ((pure, always_inline));
 static inline u64 CAVM_NIXX_AF_RAS_ENA_W1S(void)
 {
-	if (CAVIUM_IS_MODEL(CAVIUM_CN9XXX))
-		return 0x1b0;
-	return -1;
+	return 0x1b0;
 }
 
 /**
@@ -4434,9 +4311,7 @@ static inline u64 CAVM_NIXX_AF_RAS_W1S(void)
 	__attribute__ ((pure, always_inline));
 static inline u64 CAVM_NIXX_AF_RAS_W1S(void)
 {
-	if (CAVIUM_IS_MODEL(CAVIUM_CN9XXX))
-		return 0x1a8;
-	return -1;
+	return 0x1a8;
 }
 
 /**
@@ -4461,9 +4336,7 @@ static inline u64 CAVM_NIXX_AF_REB_BP_TESTX(u64 a)
 	__attribute__ ((pure, always_inline));
 static inline u64 CAVM_NIXX_AF_REB_BP_TESTX(u64 a)
 {
-	if (CAVIUM_IS_MODEL(CAVIUM_CN9XXX) && (a <= 28))
-		return 0x4840 + 0x10000 * ((a) & 0x1f);
-	return -1;
+	return 0x4840 + 0x10000 * a;
 }
 
 /**
@@ -4485,9 +4358,7 @@ static inline u64 CAVM_NIXX_AF_RQ_CONST(void)
 	__attribute__ ((pure, always_inline));
 static inline u64 CAVM_NIXX_AF_RQ_CONST(void)
 {
-	if (CAVIUM_IS_MODEL(CAVIUM_CN9XXX))
-		return 0x50;
-	return -1;
+	return 0x50;
 }
 
 /**
@@ -4512,9 +4383,27 @@ static inline u64 CAVM_NIXX_AF_RQM_BP_TEST(void)
 	__attribute__ ((pure, always_inline));
 static inline u64 CAVM_NIXX_AF_RQM_BP_TEST(void)
 {
-	if (CAVIUM_IS_MODEL(CAVIUM_CN9XXX))
-		return 0x4880;
-	return -1;
+	return 0x4880;
+}
+
+/**
+ * Register (RVU_PF_BAR0) nix#_af_rqm_eco
+ *
+ * INTERNAL: AF RQM ECO Register
+ */
+union cavm_nixx_af_rqm_eco {
+	u64 u;
+	struct cavm_nixx_af_rqm_eco_s {
+		u64 eco_rw                           : 64;
+	} s;
+	/* struct cavm_nixx_af_rqm_eco_s cn; */
+};
+
+static inline u64 CAVM_NIXX_AF_RQM_ECO(void)
+	__attribute__ ((pure, always_inline));
+static inline u64 CAVM_NIXX_AF_RQM_ECO(void)
+{
+	return 0x5a0;
 }
 
 /**
@@ -4536,9 +4425,7 @@ static inline u64 CAVM_NIXX_AF_RVU_INT(void)
 	__attribute__ ((pure, always_inline));
 static inline u64 CAVM_NIXX_AF_RVU_INT(void)
 {
-	if (CAVIUM_IS_MODEL(CAVIUM_CN9XXX))
-		return 0x1c0;
-	return -1;
+	return 0x1c0;
 }
 
 /**
@@ -4560,9 +4447,7 @@ static inline u64 CAVM_NIXX_AF_RVU_INT_ENA_W1C(void)
 	__attribute__ ((pure, always_inline));
 static inline u64 CAVM_NIXX_AF_RVU_INT_ENA_W1C(void)
 {
-	if (CAVIUM_IS_MODEL(CAVIUM_CN9XXX))
-		return 0x1d8;
-	return -1;
+	return 0x1d8;
 }
 
 /**
@@ -4584,9 +4469,7 @@ static inline u64 CAVM_NIXX_AF_RVU_INT_ENA_W1S(void)
 	__attribute__ ((pure, always_inline));
 static inline u64 CAVM_NIXX_AF_RVU_INT_ENA_W1S(void)
 {
-	if (CAVIUM_IS_MODEL(CAVIUM_CN9XXX))
-		return 0x1d0;
-	return -1;
+	return 0x1d0;
 }
 
 /**
@@ -4608,9 +4491,7 @@ static inline u64 CAVM_NIXX_AF_RVU_INT_W1S(void)
 	__attribute__ ((pure, always_inline));
 static inline u64 CAVM_NIXX_AF_RVU_INT_W1S(void)
 {
-	if (CAVIUM_IS_MODEL(CAVIUM_CN9XXX))
-		return 0x1c8;
-	return -1;
+	return 0x1c8;
 }
 
 /**
@@ -4638,9 +4519,7 @@ static inline u64 CAVM_NIXX_AF_RVU_LF_CFG_DEBUG(void)
 	__attribute__ ((pure, always_inline));
 static inline u64 CAVM_NIXX_AF_RVU_LF_CFG_DEBUG(void)
 {
-	if (CAVIUM_IS_MODEL(CAVIUM_CN9XXX))
-		return 0x8000030;
-	return -1;
+	return 0x8000030;
 }
 
 /**
@@ -4661,9 +4540,7 @@ static inline u64 CAVM_NIXX_AF_RX_ACTIVE_CYCLES_PCX(u64 a)
 	__attribute__ ((pure, always_inline));
 static inline u64 CAVM_NIXX_AF_RX_ACTIVE_CYCLES_PCX(u64 a)
 {
-	if (CAVIUM_IS_MODEL(CAVIUM_CN9XXX) && (a <= 30))
-		return 0x4800 + 0x10000 * ((a) & 0x1f);
-	return -1;
+	return 0x4800 + 0x10000 * a;
 }
 
 /**
@@ -4684,9 +4561,7 @@ static inline u64 CAVM_NIXX_AF_RX_BPIDX_STATUS(u64 a)
 	__attribute__ ((pure, always_inline));
 static inline u64 CAVM_NIXX_AF_RX_BPIDX_STATUS(u64 a)
 {
-	if (CAVIUM_IS_MODEL(CAVIUM_CN9XXX) && (a <= 511))
-		return 0x1a20 + 0x20000 * ((a) & 0x1ff);
-	return -1;
+	return 0x1a20 + 0x20000 * a;
 }
 
 /**
@@ -4707,9 +4582,7 @@ static inline u64 CAVM_NIXX_AF_RX_CFG(void)
 	__attribute__ ((pure, always_inline));
 static inline u64 CAVM_NIXX_AF_RX_CFG(void)
 {
-	if (CAVIUM_IS_MODEL(CAVIUM_CN9XXX))
-		return 0xd0;
-	return -1;
+	return 0xd0;
 }
 
 /**
@@ -4734,9 +4607,7 @@ static inline u64 CAVM_NIXX_AF_RX_CHANX_CFG(u64 a)
 	__attribute__ ((pure, always_inline));
 static inline u64 CAVM_NIXX_AF_RX_CHANX_CFG(u64 a)
 {
-	if (CAVIUM_IS_MODEL(CAVIUM_CN9XXX) && (a <= 4095))
-		return 0x1a30 + 0x8000 * ((a) & 0xfff);
-	return -1;
+	return 0x1a30 + 0x8000 * a;
 }
 
 /**
@@ -4757,9 +4628,7 @@ static inline u64 CAVM_NIXX_AF_RX_CPTX_CREDIT(u64 a)
 	__attribute__ ((pure, always_inline));
 static inline u64 CAVM_NIXX_AF_RX_CPTX_CREDIT(u64 a)
 {
-	if (CAVIUM_IS_MODEL(CAVIUM_CN9XXX) && (a == 0))
-		return 0x360 + 8 * ((a) & 0x0);
-	return -1;
+	return 0x360 + 8 * a;
 }
 
 /**
@@ -4796,9 +4665,7 @@ static inline u64 CAVM_NIXX_AF_RX_CPTX_INST_QSEL(u64 a)
 	__attribute__ ((pure, always_inline));
 static inline u64 CAVM_NIXX_AF_RX_CPTX_INST_QSEL(u64 a)
 {
-	if (CAVIUM_IS_MODEL(CAVIUM_CN9XXX) && (a == 0))
-		return 0x320 + 8 * ((a) & 0x0);
-	return -1;
+	return 0x320 + 8 * a;
 }
 
 /**
@@ -4823,9 +4690,7 @@ static inline u64 CAVM_NIXX_AF_RX_DEF_IIP4(void)
 	__attribute__ ((pure, always_inline));
 static inline u64 CAVM_NIXX_AF_RX_DEF_IIP4(void)
 {
-	if (CAVIUM_IS_MODEL(CAVIUM_CN9XXX))
-		return 0x220;
-	return -1;
+	return 0x220;
 }
 
 /**
@@ -4849,9 +4714,7 @@ static inline u64 CAVM_NIXX_AF_RX_DEF_IIP6(void)
 	__attribute__ ((pure, always_inline));
 static inline u64 CAVM_NIXX_AF_RX_DEF_IIP6(void)
 {
-	if (CAVIUM_IS_MODEL(CAVIUM_CN9XXX))
-		return 0x240;
-	return -1;
+	return 0x240;
 }
 
 /**
@@ -4880,9 +4743,7 @@ static inline u64 CAVM_NIXX_AF_RX_DEF_IPSECX(u64 a)
 	__attribute__ ((pure, always_inline));
 static inline u64 CAVM_NIXX_AF_RX_DEF_IPSECX(u64 a)
 {
-	if (CAVIUM_IS_MODEL(CAVIUM_CN9XXX) && (a <= 1))
-		return 0x2b0 + 8 * ((a) & 0x1);
-	return -1;
+	return 0x2b0 + 8 * a;
 }
 
 /**
@@ -4906,9 +4767,7 @@ static inline u64 CAVM_NIXX_AF_RX_DEF_ISCTP(void)
 	__attribute__ ((pure, always_inline));
 static inline u64 CAVM_NIXX_AF_RX_DEF_ISCTP(void)
 {
-	if (CAVIUM_IS_MODEL(CAVIUM_CN9XXX))
-		return 0x2a0;
-	return -1;
+	return 0x2a0;
 }
 
 /**
@@ -4932,9 +4791,7 @@ static inline u64 CAVM_NIXX_AF_RX_DEF_ITCP(void)
 	__attribute__ ((pure, always_inline));
 static inline u64 CAVM_NIXX_AF_RX_DEF_ITCP(void)
 {
-	if (CAVIUM_IS_MODEL(CAVIUM_CN9XXX))
-		return 0x260;
-	return -1;
+	return 0x260;
 }
 
 /**
@@ -4958,9 +4815,7 @@ static inline u64 CAVM_NIXX_AF_RX_DEF_IUDP(void)
 	__attribute__ ((pure, always_inline));
 static inline u64 CAVM_NIXX_AF_RX_DEF_IUDP(void)
 {
-	if (CAVIUM_IS_MODEL(CAVIUM_CN9XXX))
-		return 0x280;
-	return -1;
+	return 0x280;
 }
 
 /**
@@ -4985,9 +4840,7 @@ static inline u64 CAVM_NIXX_AF_RX_DEF_OIP4(void)
 	__attribute__ ((pure, always_inline));
 static inline u64 CAVM_NIXX_AF_RX_DEF_OIP4(void)
 {
-	if (CAVIUM_IS_MODEL(CAVIUM_CN9XXX))
-		return 0x210;
-	return -1;
+	return 0x210;
 }
 
 /**
@@ -5012,9 +4865,7 @@ static inline u64 CAVM_NIXX_AF_RX_DEF_OIP6(void)
 	__attribute__ ((pure, always_inline));
 static inline u64 CAVM_NIXX_AF_RX_DEF_OIP6(void)
 {
-	if (CAVIUM_IS_MODEL(CAVIUM_CN9XXX))
-		return 0x230;
-	return -1;
+	return 0x230;
 }
 
 /**
@@ -5039,9 +4890,7 @@ static inline u64 CAVM_NIXX_AF_RX_DEF_OL2(void)
 	__attribute__ ((pure, always_inline));
 static inline u64 CAVM_NIXX_AF_RX_DEF_OL2(void)
 {
-	if (CAVIUM_IS_MODEL(CAVIUM_CN9XXX))
-		return 0x200;
-	return -1;
+	return 0x200;
 }
 
 /**
@@ -5065,9 +4914,7 @@ static inline u64 CAVM_NIXX_AF_RX_DEF_OSCTP(void)
 	__attribute__ ((pure, always_inline));
 static inline u64 CAVM_NIXX_AF_RX_DEF_OSCTP(void)
 {
-	if (CAVIUM_IS_MODEL(CAVIUM_CN9XXX))
-		return 0x290;
-	return -1;
+	return 0x290;
 }
 
 /**
@@ -5091,9 +4938,7 @@ static inline u64 CAVM_NIXX_AF_RX_DEF_OTCP(void)
 	__attribute__ ((pure, always_inline));
 static inline u64 CAVM_NIXX_AF_RX_DEF_OTCP(void)
 {
-	if (CAVIUM_IS_MODEL(CAVIUM_CN9XXX))
-		return 0x250;
-	return -1;
+	return 0x250;
 }
 
 /**
@@ -5117,9 +4962,7 @@ static inline u64 CAVM_NIXX_AF_RX_DEF_OUDP(void)
 	__attribute__ ((pure, always_inline));
 static inline u64 CAVM_NIXX_AF_RX_DEF_OUDP(void)
 {
-	if (CAVIUM_IS_MODEL(CAVIUM_CN9XXX))
-		return 0x270;
-	return -1;
+	return 0x270;
 }
 
 /**
@@ -5166,16 +5009,14 @@ static inline u64 CAVM_NIXX_AF_RX_FLOW_KEY_ALGX_FIELDX(u64 a, u64 b)
 	__attribute__ ((pure, always_inline));
 static inline u64 CAVM_NIXX_AF_RX_FLOW_KEY_ALGX_FIELDX(u64 a, u64 b)
 {
-	if (CAVIUM_IS_MODEL(CAVIUM_CN9XXX) && ((a <= 31) && (b <= 4)))
-		return 0x1800 + 0x40000 * ((a) & 0x1f) + 8 * ((b) & 0x7);
-	return -1;
+	return 0x1800 + 0x40000 * a + 8 * b;
 }
 
 /**
  * Register (RVU_PF_BAR0) nix#_af_rx_ipsec_gen_cfg
  *
  * NIX AF Receive IPSEC General Configuration Register
- * This register specifie the values of certain fields in CPT instructions
+ * This register specifies the values of certain fields in CPT instructions
  * (CPT_INST_S) generated by NIX for IPSEC hardware fast-path packets.
  */
 union cavm_nixx_af_rx_ipsec_gen_cfg {
@@ -5194,9 +5035,7 @@ static inline u64 CAVM_NIXX_AF_RX_IPSEC_GEN_CFG(void)
 	__attribute__ ((pure, always_inline));
 static inline u64 CAVM_NIXX_AF_RX_IPSEC_GEN_CFG(void)
 {
-	if (CAVIUM_IS_MODEL(CAVIUM_CN9XXX))
-		return 0x300;
-	return -1;
+	return 0x300;
 }
 
 /**
@@ -5219,9 +5058,7 @@ static inline u64 CAVM_NIXX_AF_RX_LINKX_CFG(u64 a)
 	__attribute__ ((pure, always_inline));
 static inline u64 CAVM_NIXX_AF_RX_LINKX_CFG(u64 a)
 {
-	if (CAVIUM_IS_MODEL(CAVIUM_CN9XXX) && (a <= 13))
-		return 0x540 + 0x10000 * ((a) & 0xf);
-	return -1;
+	return 0x540 + 0x10000 * a;
 }
 
 /**
@@ -5249,9 +5086,7 @@ static inline u64 CAVM_NIXX_AF_RX_LINKX_SLX_SPKT_CNT(u64 a, u64 b)
 	__attribute__ ((pure, always_inline));
 static inline u64 CAVM_NIXX_AF_RX_LINKX_SLX_SPKT_CNT(u64 a, u64 b)
 {
-	if (CAVIUM_IS_MODEL(CAVIUM_CN9XXX) && ((a <= 14) && (b <= 1)))
-		return 0x500 + 0x10000 * ((a) & 0xf) + 8 * ((b) & 0x1);
-	return -1;
+	return 0x500 + 0x10000 * a + 8 * b;
 }
 
 /**
@@ -5273,9 +5108,7 @@ static inline u64 CAVM_NIXX_AF_RX_LINKX_WRR_CFG(u64 a)
 	__attribute__ ((pure, always_inline));
 static inline u64 CAVM_NIXX_AF_RX_LINKX_WRR_CFG(u64 a)
 {
-	if (CAVIUM_IS_MODEL(CAVIUM_CN9XXX) && (a <= 14))
-		return 0x560 + 0x10000 * ((a) & 0xf);
-	return -1;
+	return 0x560 + 0x10000 * a;
 }
 
 /**
@@ -5322,9 +5155,7 @@ static inline u64 CAVM_NIXX_AF_RX_MCAST_BASE(void)
 	__attribute__ ((pure, always_inline));
 static inline u64 CAVM_NIXX_AF_RX_MCAST_BASE(void)
 {
-	if (CAVIUM_IS_MODEL(CAVIUM_CN9XXX))
-		return 0x100;
-	return -1;
+	return 0x100;
 }
 
 /**
@@ -5357,9 +5188,7 @@ static inline u64 CAVM_NIXX_AF_RX_MCAST_BUF_BASE(void)
 	__attribute__ ((pure, always_inline));
 static inline u64 CAVM_NIXX_AF_RX_MCAST_BUF_BASE(void)
 {
-	if (CAVIUM_IS_MODEL(CAVIUM_CN9XXX))
-		return 0x120;
-	return -1;
+	return 0x120;
 }
 
 /**
@@ -5388,9 +5217,7 @@ static inline u64 CAVM_NIXX_AF_RX_MCAST_BUF_CFG(void)
 	__attribute__ ((pure, always_inline));
 static inline u64 CAVM_NIXX_AF_RX_MCAST_BUF_CFG(void)
 {
-	if (CAVIUM_IS_MODEL(CAVIUM_CN9XXX))
-		return 0x130;
-	return -1;
+	return 0x130;
 }
 
 /**
@@ -5416,9 +5243,7 @@ static inline u64 CAVM_NIXX_AF_RX_MCAST_CFG(void)
 	__attribute__ ((pure, always_inline));
 static inline u64 CAVM_NIXX_AF_RX_MCAST_CFG(void)
 {
-	if (CAVIUM_IS_MODEL(CAVIUM_CN9XXX))
-		return 0x110;
-	return -1;
+	return 0x110;
 }
 
 /**
@@ -5450,9 +5275,7 @@ static inline u64 CAVM_NIXX_AF_RX_MIRROR_BUF_BASE(void)
 	__attribute__ ((pure, always_inline));
 static inline u64 CAVM_NIXX_AF_RX_MIRROR_BUF_BASE(void)
 {
-	if (CAVIUM_IS_MODEL(CAVIUM_CN9XXX))
-		return 0x140;
-	return -1;
+	return 0x140;
 }
 
 /**
@@ -5481,9 +5304,7 @@ static inline u64 CAVM_NIXX_AF_RX_MIRROR_BUF_CFG(void)
 	__attribute__ ((pure, always_inline));
 static inline u64 CAVM_NIXX_AF_RX_MIRROR_BUF_CFG(void)
 {
-	if (CAVIUM_IS_MODEL(CAVIUM_CN9XXX))
-		return 0x148;
-	return -1;
+	return 0x148;
 }
 
 /**
@@ -5505,16 +5326,14 @@ static inline u64 CAVM_NIXX_AF_RX_NPC_MC_DROP(void)
 	__attribute__ ((pure, always_inline));
 static inline u64 CAVM_NIXX_AF_RX_NPC_MC_DROP(void)
 {
-	if (CAVIUM_IS_MODEL(CAVIUM_CN9XXX))
-		return 0x4710;
-	return -1;
+	return 0x4710;
 }
 
 /**
  * Register (RVU_PF_BAR0) nix#_af_rx_npc_mc_rcv
  *
  * NIX AF Multicast Receive Statistics Register
- * The counter increments for every recieved MC packet marked by the NPC.
+ * The counter increments for every received MC packet marked by the NPC.
  */
 union cavm_nixx_af_rx_npc_mc_rcv {
 	u64 u;
@@ -5529,9 +5348,7 @@ static inline u64 CAVM_NIXX_AF_RX_NPC_MC_RCV(void)
 	__attribute__ ((pure, always_inline));
 static inline u64 CAVM_NIXX_AF_RX_NPC_MC_RCV(void)
 {
-	if (CAVIUM_IS_MODEL(CAVIUM_CN9XXX))
-		return 0x4700;
-	return -1;
+	return 0x4700;
 }
 
 /**
@@ -5553,16 +5370,14 @@ static inline u64 CAVM_NIXX_AF_RX_NPC_MIRROR_DROP(void)
 	__attribute__ ((pure, always_inline));
 static inline u64 CAVM_NIXX_AF_RX_NPC_MIRROR_DROP(void)
 {
-	if (CAVIUM_IS_MODEL(CAVIUM_CN9XXX))
-		return 0x4730;
-	return -1;
+	return 0x4730;
 }
 
 /**
  * Register (RVU_PF_BAR0) nix#_af_rx_npc_mirror_rcv
  *
  * NIX AF Mirror Receive Statistics Register
- * The counter increments for every recieved MIRROR packet marked by the NPC.
+ * The counter increments for every received MIRROR packet marked by the NPC.
  */
 union cavm_nixx_af_rx_npc_mirror_rcv {
 	u64 u;
@@ -5577,9 +5392,7 @@ static inline u64 CAVM_NIXX_AF_RX_NPC_MIRROR_RCV(void)
 	__attribute__ ((pure, always_inline));
 static inline u64 CAVM_NIXX_AF_RX_NPC_MIRROR_RCV(void)
 {
-	if (CAVIUM_IS_MODEL(CAVIUM_CN9XXX))
-		return 0x4720;
-	return -1;
+	return 0x4720;
 }
 
 /**
@@ -5600,9 +5413,7 @@ static inline u64 CAVM_NIXX_AF_RX_SW_SYNC(void)
 	__attribute__ ((pure, always_inline));
 static inline u64 CAVM_NIXX_AF_RX_SW_SYNC(void)
 {
-	if (CAVIUM_IS_MODEL(CAVIUM_CN9XXX))
-		return 0x550;
-	return -1;
+	return 0x550;
 }
 
 /**
@@ -5623,9 +5434,7 @@ static inline u64 CAVM_NIXX_AF_SDP_HW_XOFFX(u64 a)
 	__attribute__ ((pure, always_inline));
 static inline u64 CAVM_NIXX_AF_SDP_HW_XOFFX(u64 a)
 {
-	if (CAVIUM_IS_MODEL(CAVIUM_CN9XXX) && (a <= 3))
-		return 0xac0 + 8 * ((a) & 0x3);
-	return -1;
+	return 0xac0 + 8 * a;
 }
 
 /**
@@ -5650,9 +5459,7 @@ static inline u64 CAVM_NIXX_AF_SDP_LINK_CREDIT(void)
 	__attribute__ ((pure, always_inline));
 static inline u64 CAVM_NIXX_AF_SDP_LINK_CREDIT(void)
 {
-	if (CAVIUM_IS_MODEL(CAVIUM_CN9XXX))
-		return 0xa40;
-	return -1;
+	return 0xa40;
 }
 
 /**
@@ -5672,9 +5479,7 @@ static inline u64 CAVM_NIXX_AF_SDP_SW_XOFFX(u64 a)
 	__attribute__ ((pure, always_inline));
 static inline u64 CAVM_NIXX_AF_SDP_SW_XOFFX(u64 a)
 {
-	if (CAVIUM_IS_MODEL(CAVIUM_CN9XXX) && (a <= 3))
-		return 0xa60 + 8 * ((a) & 0x3);
-	return -1;
+	return 0xa60 + 8 * a;
 }
 
 /**
@@ -5696,9 +5501,7 @@ static inline u64 CAVM_NIXX_AF_SDP_TX_FIFO_STATUS(void)
 	__attribute__ ((pure, always_inline));
 static inline u64 CAVM_NIXX_AF_SDP_TX_FIFO_STATUS(void)
 {
-	if (CAVIUM_IS_MODEL(CAVIUM_CN9XXX))
-		return 0x650;
-	return -1;
+	return 0x650;
 }
 
 /**
@@ -5719,24 +5522,43 @@ static inline u64 CAVM_NIXX_AF_SEB_ACTIVE_CYCLES_PCX(u64 a)
 	__attribute__ ((pure, always_inline));
 static inline u64 CAVM_NIXX_AF_SEB_ACTIVE_CYCLES_PCX(u64 a)
 {
-	if (CAVIUM_IS_MODEL(CAVIUM_CN9XXX) && (a <= 2))
-		return 0x6c0 + 8 * ((a) & 0x3);
-	return -1;
+	return 0x6c0 + 8 * a;
 }
 
 /**
- * Register (RVU_PF_BAR0) nix#_af_seb_eco
+ * Register (RVU_PF_BAR0) nix#_af_seb_bp_test
  *
- * INTERNAL: SEB AF ECO Register
+ * INTERNAL: NIX AF SEB Backpressure Test Register
+ */
+union cavm_nixx_af_seb_bp_test {
+	u64 u;
+	struct cavm_nixx_af_seb_bp_test_s {
+		u64 lfsr_freq                        : 12;
+		u64 reserved_12_15                   : 4;
+		u64 bp_cfg                           : 14;
+		u64 reserved_30_47                   : 18;
+		u64 enable                           : 7;
+		u64 reserved_55_63                   : 9;
+	} s;
+	/* struct cavm_nixx_af_seb_bp_test_s cn; */
+};
+
+static inline u64 CAVM_NIXX_AF_SEB_BP_TEST(void)
+	__attribute__ ((pure, always_inline));
+static inline u64 CAVM_NIXX_AF_SEB_BP_TEST(void)
+{
+	return 0x630;
+}
+
+/**
+ * Register (RVU_PF_BAR0) nix#_af_seb_eco
  *
- * Internal:
- * TODO - When CSI ECO register is added, switch this one to inherit from it.
+ * INTERNAL: AF SEB ECO Register
  */
 union cavm_nixx_af_seb_eco {
 	u64 u;
 	struct cavm_nixx_af_seb_eco_s {
-		u64 eco_rw                           : 32;
-		u64 reserved_32_63                   : 32;
+		u64 eco_rw                           : 64;
 	} s;
 	/* struct cavm_nixx_af_seb_eco_s cn; */
 };
@@ -5745,79 +5567,78 @@ static inline u64 CAVM_NIXX_AF_SEB_ECO(void)
 	__attribute__ ((pure, always_inline));
 static inline u64 CAVM_NIXX_AF_SEB_ECO(void)
 {
-	if (CAVIUM_IS_MODEL(CAVIUM_CN9XXX))
-		return 0x600;
-	return -1;
+	return 0x5c0;
 }
 
 /**
- * Register (RVU_PF_BAR0) nix#_af_seb_test_bp
+ * Register (RVU_PF_BAR0) nix#_af_seb_pipe_bp_test#
  *
- * NIX AF SEB Backpressure Test Register
+ * INTERNAL: NIX AF SEB Pipe Backpressure Test Registers
  */
-union cavm_nixx_af_seb_test_bp {
+union cavm_nixx_af_seb_pipe_bp_testx {
 	u64 u;
-	struct cavm_nixx_af_seb_test_bp_s {
-		u64 introp                           : 1;
-		u64 ndx                              : 1;
-		u64 npx                              : 1;
-		u64 sso_lwa                          : 1;
-		u64 sqm_lf_err_dbg                   : 1;
-		u64 reserved_5_63                    : 59;
+	struct cavm_nixx_af_seb_pipe_bp_testx_s {
+		u64 lfsr_freq                        : 12;
+		u64 reserved_12_15                   : 4;
+		u64 bp_cfg                           : 24;
+		u64 reserved_40_47                   : 8;
+		u64 enable                           : 12;
+		u64 reserved_60_63                   : 4;
 	} s;
-	/* struct cavm_nixx_af_seb_test_bp_s cn; */
+	/* struct cavm_nixx_af_seb_pipe_bp_testx_s cn; */
 };
 
-static inline u64 CAVM_NIXX_AF_SEB_TEST_BP(void)
+static inline u64 CAVM_NIXX_AF_SEB_PIPE_BP_TESTX(u64 a)
 	__attribute__ ((pure, always_inline));
-static inline u64 CAVM_NIXX_AF_SEB_TEST_BP(void)
+static inline u64 CAVM_NIXX_AF_SEB_PIPE_BP_TESTX(u64 a)
 {
-	if (CAVIUM_IS_MODEL(CAVIUM_CN9XXX))
-		return 0x610;
-	return -1;
+	return 0x600 + 0x10 * a;
 }
 
 /**
- * Register (RVU_PF_BAR0) nix#_af_seb_test_bp_pipe#
+ * Register (RVU_PF_BAR0) nix#_af_seb_pipeb_bp_test#
  *
- * NIX AF SEB Pipe Backpressure Test Registers
+ * INTERNAL: NIX AF SEB Pipe Backpressure Test Registers
  */
-union cavm_nixx_af_seb_test_bp_pipex {
+union cavm_nixx_af_seb_pipeb_bp_testx {
 	u64 u;
-	struct cavm_nixx_af_seb_test_bp_pipex_s {
-		u64 jump                             : 1;
-		u64 jump_ndx_req                     : 1;
-		u64 jump_npx_rtn                     : 1;
-		u64 sg_cp                            : 1;
-		u64 sg_dp                            : 1;
-		u64 sg_ndx_req                       : 1;
-		u64 sg_npx_rtn                       : 1;
-		u64 mod1_cp                          : 1;
-		u64 mod1_dp                          : 1;
-		u64 query_cp                         : 1;
-		u64 query_dp                         : 1;
-		u64 query_npc_hdr                    : 1;
-		u64 mod2_cp                          : 1;
-		u64 mod2_dp                          : 1;
-		u64 check_cp                         : 1;
-		u64 check_dp                         : 1;
-		u64 tail_introp                      : 1;
-		u64 tail_lf_err_dbg                  : 1;
-		u64 tail_linkcdt                     : 1;
-		u64 tail_ndx_wr                      : 1;
-		u64 tail_ssoif                       : 1;
-		u64 reserved_21_63                   : 43;
+	struct cavm_nixx_af_seb_pipeb_bp_testx_s {
+		u64 lfsr_freq                        : 12;
+		u64 reserved_12_15                   : 4;
+		u64 bp_cfg                           : 18;
+		u64 reserved_34_47                   : 14;
+		u64 enable                           : 9;
+		u64 reserved_57_63                   : 7;
 	} s;
-	/* struct cavm_nixx_af_seb_test_bp_pipex_s cn; */
+	/* struct cavm_nixx_af_seb_pipeb_bp_testx_s cn; */
 };
 
-static inline u64 CAVM_NIXX_AF_SEB_TEST_BP_PIPEX(u64 a)
+static inline u64 CAVM_NIXX_AF_SEB_PIPEB_BP_TESTX(u64 a)
 	__attribute__ ((pure, always_inline));
-static inline u64 CAVM_NIXX_AF_SEB_TEST_BP_PIPEX(u64 a)
+static inline u64 CAVM_NIXX_AF_SEB_PIPEB_BP_TESTX(u64 a)
 {
-	if (CAVIUM_IS_MODEL(CAVIUM_CN9XXX) && (a <= 2))
-		return 0x620 + 8 * ((a) & 0x3);
-	return -1;
+	return 0x608 + 0x10 * a;
+}
+
+/**
+ * Register (RVU_PF_BAR0) nix#_af_seb_wd_tick_divider
+ *
+ * INTERNAL: NIX AF SEB TSTMP Watchdog Tick Divider Register
+ */
+union cavm_nixx_af_seb_wd_tick_divider {
+	u64 u;
+	struct cavm_nixx_af_seb_wd_tick_divider_s {
+		u64 tick_div_cfg                     : 7;
+		u64 reserved_7_63                    : 57;
+	} s;
+	/* struct cavm_nixx_af_seb_wd_tick_divider_s cn; */
+};
+
+static inline u64 CAVM_NIXX_AF_SEB_WD_TICK_DIVIDER(void)
+	__attribute__ ((pure, always_inline));
+static inline u64 CAVM_NIXX_AF_SEB_WD_TICK_DIVIDER(void)
+{
+	return 0x6f0;
 }
 
 /**
@@ -5848,9 +5669,7 @@ static inline u64 CAVM_NIXX_AF_SMQX_CFG(u64 a)
 	__attribute__ ((pure, always_inline));
 static inline u64 CAVM_NIXX_AF_SMQX_CFG(u64 a)
 {
-	if (CAVIUM_IS_MODEL(CAVIUM_CN9XXX) && (a <= 511))
-		return 0x700 + 0x10000 * ((a) & 0x1ff);
-	return -1;
+	return 0x700 + 0x10000 * a;
 }
 
 /**
@@ -5873,9 +5692,7 @@ static inline u64 CAVM_NIXX_AF_SMQX_HEAD(u64 a)
 	__attribute__ ((pure, always_inline));
 static inline u64 CAVM_NIXX_AF_SMQX_HEAD(u64 a)
 {
-	if (CAVIUM_IS_MODEL(CAVIUM_CN9XXX) && (a <= 511))
-		return 0x710 + 0x10000 * ((a) & 0x1ff);
-	return -1;
+	return 0x710 + 0x10000 * a;
 }
 
 /**
@@ -5898,16 +5715,14 @@ static inline u64 CAVM_NIXX_AF_SMQX_NXT_HEAD(u64 a)
 	__attribute__ ((pure, always_inline));
 static inline u64 CAVM_NIXX_AF_SMQX_NXT_HEAD(u64 a)
 {
-	if (CAVIUM_IS_MODEL(CAVIUM_CN9XXX) && (a <= 511))
-		return 0x740 + 0x10000 * ((a) & 0x1ff);
-	return -1;
+	return 0x740 + 0x10000 * a;
 }
 
 /**
  * Register (RVU_PF_BAR0) nix#_af_smq#_status
  *
  * NIX AF SQM SMQ Status Register
- * These registers track the status of the SMQ fifo.
+ * These registers track the status of the SMQ FIFO.
  */
 union cavm_nixx_af_smqx_status {
 	u64 u;
@@ -5922,9 +5737,7 @@ static inline u64 CAVM_NIXX_AF_SMQX_STATUS(u64 a)
 	__attribute__ ((pure, always_inline));
 static inline u64 CAVM_NIXX_AF_SMQX_STATUS(u64 a)
 {
-	if (CAVIUM_IS_MODEL(CAVIUM_CN9XXX) && (a <= 511))
-		return 0x730 + 0x10000 * ((a) & 0x1ff);
-	return -1;
+	return 0x730 + 0x10000 * a;
 }
 
 /**
@@ -5947,9 +5760,7 @@ static inline u64 CAVM_NIXX_AF_SMQX_TAIL(u64 a)
 	__attribute__ ((pure, always_inline));
 static inline u64 CAVM_NIXX_AF_SMQX_TAIL(u64 a)
 {
-	if (CAVIUM_IS_MODEL(CAVIUM_CN9XXX) && (a <= 511))
-		return 0x720 + 0x10000 * ((a) & 0x1ff);
-	return -1;
+	return 0x720 + 0x10000 * a;
 }
 
 /**
@@ -5973,9 +5784,7 @@ static inline u64 CAVM_NIXX_AF_SQ_CONST(void)
 	__attribute__ ((pure, always_inline));
 static inline u64 CAVM_NIXX_AF_SQ_CONST(void)
 {
-	if (CAVIUM_IS_MODEL(CAVIUM_CN9XXX))
-		return 0x40;
-	return -1;
+	return 0x40;
 }
 
 /**
@@ -5996,35 +5805,31 @@ static inline u64 CAVM_NIXX_AF_SQM_ACTIVE_CYCLES_PC(void)
 	__attribute__ ((pure, always_inline));
 static inline u64 CAVM_NIXX_AF_SQM_ACTIVE_CYCLES_PC(void)
 {
-	if (CAVIUM_IS_MODEL(CAVIUM_CN9XXX))
-		return 0x770;
-	return -1;
+	return 0x770;
 }
 
 /**
- * Register (RVU_PF_BAR0) nix#_af_sqm_bp_test0
+ * Register (RVU_PF_BAR0) nix#_af_sqm_bp_test#
  *
  * INTERNAL: NIX AF SQM Backpressure Test Register
  */
-union cavm_nixx_af_sqm_bp_test0 {
+union cavm_nixx_af_sqm_bp_testx {
 	u64 u;
-	struct cavm_nixx_af_sqm_bp_test0_s {
+	struct cavm_nixx_af_sqm_bp_testx_s {
 		u64 lfsr_freq                        : 12;
 		u64 reserved_12_15                   : 4;
 		u64 bp_cfg                           : 8;
 		u64 reserved_24_59                   : 36;
 		u64 enable                           : 4;
 	} s;
-	/* struct cavm_nixx_af_sqm_bp_test0_s cn; */
+	/* struct cavm_nixx_af_sqm_bp_testx_s cn; */
 };
 
-static inline u64 CAVM_NIXX_AF_SQM_BP_TEST0(void)
+static inline u64 CAVM_NIXX_AF_SQM_BP_TESTX(u64 a)
 	__attribute__ ((pure, always_inline));
-static inline u64 CAVM_NIXX_AF_SQM_BP_TEST0(void)
+static inline u64 CAVM_NIXX_AF_SQM_BP_TESTX(u64 a)
 {
-	if (CAVIUM_IS_MODEL(CAVIUM_CN9XXX))
-		return 0x760;
-	return -1;
+	return 0x760 + 0x10000 * a;
 }
 
 /**
@@ -6041,7 +5846,12 @@ union cavm_nixx_af_sqm_dbg_ctl_status {
 		u64 tm2                              : 1;
 		u64 tm3                              : 4;
 		u64 tm4                              : 1;
-		u64 reserved_14_63                   : 50;
+		u64 tm5                              : 1;
+		u64 tm6                              : 1;
+		u64 tm7                              : 4;
+		u64 tm8                              : 1;
+		u64 tm9                              : 1;
+		u64 reserved_22_63                   : 42;
 	} s;
 	/* struct cavm_nixx_af_sqm_dbg_ctl_status_s cn; */
 };
@@ -6050,9 +5860,27 @@ static inline u64 CAVM_NIXX_AF_SQM_DBG_CTL_STATUS(void)
 	__attribute__ ((pure, always_inline));
 static inline u64 CAVM_NIXX_AF_SQM_DBG_CTL_STATUS(void)
 {
-	if (CAVIUM_IS_MODEL(CAVIUM_CN9XXX))
-		return 0x750;
-	return -1;
+	return 0x750;
+}
+
+/**
+ * Register (RVU_PF_BAR0) nix#_af_sqm_eco
+ *
+ * INTERNAL: AF SQM ECO Register
+ */
+union cavm_nixx_af_sqm_eco {
+	u64 u;
+	struct cavm_nixx_af_sqm_eco_s {
+		u64 eco_rw                           : 64;
+	} s;
+	/* struct cavm_nixx_af_sqm_eco_s cn; */
+};
+
+static inline u64 CAVM_NIXX_AF_SQM_ECO(void)
+	__attribute__ ((pure, always_inline));
+static inline u64 CAVM_NIXX_AF_SQM_ECO(void)
+{
+	return 0x5b0;
 }
 
 /**
@@ -6076,9 +5904,7 @@ static inline u64 CAVM_NIXX_AF_STATUS(void)
 	__attribute__ ((pure, always_inline));
 static inline u64 CAVM_NIXX_AF_STATUS(void)
 {
-	if (CAVIUM_IS_MODEL(CAVIUM_CN9XXX))
-		return 0x10;
-	return -1;
+	return 0x10;
 }
 
 /**
@@ -6103,9 +5929,7 @@ static inline u64 CAVM_NIXX_AF_TCP_TIMER(void)
 	__attribute__ ((pure, always_inline));
 static inline u64 CAVM_NIXX_AF_TCP_TIMER(void)
 {
-	if (CAVIUM_IS_MODEL(CAVIUM_CN9XXX))
-		return 0x1e0;
-	return -1;
+	return 0x1e0;
 }
 
 /**
@@ -6132,9 +5956,7 @@ static inline u64 CAVM_NIXX_AF_TL1X_CIR(u64 a)
 	__attribute__ ((pure, always_inline));
 static inline u64 CAVM_NIXX_AF_TL1X_CIR(u64 a)
 {
-	if (CAVIUM_IS_MODEL(CAVIUM_CN9XXX) && (a <= 27))
-		return 0xc20 + 0x10000 * ((a) & 0x1f);
-	return -1;
+	return 0xc20 + 0x10000 * a;
 }
 
 /**
@@ -6156,9 +5978,7 @@ static inline u64 CAVM_NIXX_AF_TL1X_DROPPED_BYTES(u64 a)
 	__attribute__ ((pure, always_inline));
 static inline u64 CAVM_NIXX_AF_TL1X_DROPPED_BYTES(u64 a)
 {
-	if (CAVIUM_IS_MODEL(CAVIUM_CN9XXX) && (a <= 27))
-		return 0xd30 + 0x10000 * ((a) & 0x1f);
-	return -1;
+	return 0xd30 + 0x10000 * a;
 }
 
 /**
@@ -6180,9 +6000,7 @@ static inline u64 CAVM_NIXX_AF_TL1X_DROPPED_PACKETS(u64 a)
 	__attribute__ ((pure, always_inline));
 static inline u64 CAVM_NIXX_AF_TL1X_DROPPED_PACKETS(u64 a)
 {
-	if (CAVIUM_IS_MODEL(CAVIUM_CN9XXX) && (a <= 27))
-		return 0xd20 + 0x10000 * ((a) & 0x1f);
-	return -1;
+	return 0xd20 + 0x10000 * a;
 }
 
 /**
@@ -6208,9 +6026,7 @@ static inline u64 CAVM_NIXX_AF_TL1X_GREEN(u64 a)
 	__attribute__ ((pure, always_inline));
 static inline u64 CAVM_NIXX_AF_TL1X_GREEN(u64 a)
 {
-	if (CAVIUM_IS_MODEL(CAVIUM_CN9XXX) && (a <= 27))
-		return 0xc90 + 0x10000 * ((a) & 0x1f);
-	return -1;
+	return 0xc90 + 0x10000 * a;
 }
 
 /**
@@ -6231,9 +6047,7 @@ static inline u64 CAVM_NIXX_AF_TL1X_GREEN_BYTES(u64 a)
 	__attribute__ ((pure, always_inline));
 static inline u64 CAVM_NIXX_AF_TL1X_GREEN_BYTES(u64 a)
 {
-	if (CAVIUM_IS_MODEL(CAVIUM_CN9XXX) && (a <= 27))
-		return 0xd90 + 0x10000 * ((a) & 0x1f);
-	return -1;
+	return 0xd90 + 0x10000 * a;
 }
 
 /**
@@ -6254,9 +6068,7 @@ static inline u64 CAVM_NIXX_AF_TL1X_GREEN_PACKETS(u64 a)
 	__attribute__ ((pure, always_inline));
 static inline u64 CAVM_NIXX_AF_TL1X_GREEN_PACKETS(u64 a)
 {
-	if (CAVIUM_IS_MODEL(CAVIUM_CN9XXX) && (a <= 27))
-		return 0xd80 + 0x10000 * ((a) & 0x1f);
-	return -1;
+	return 0xd80 + 0x10000 * a;
 }
 
 /**
@@ -6295,9 +6107,7 @@ static inline u64 CAVM_NIXX_AF_TL1X_MD_DEBUG0(u64 a)
 	__attribute__ ((pure, always_inline));
 static inline u64 CAVM_NIXX_AF_TL1X_MD_DEBUG0(u64 a)
 {
-	if (CAVIUM_IS_MODEL(CAVIUM_CN9XXX) && (a <= 27))
-		return 0xcc0 + 0x10000 * ((a) & 0x1f);
-	return -1;
+	return 0xcc0 + 0x10000 * a;
 }
 
 /**
@@ -6333,9 +6143,7 @@ static inline u64 CAVM_NIXX_AF_TL1X_MD_DEBUG1(u64 a)
 	__attribute__ ((pure, always_inline));
 static inline u64 CAVM_NIXX_AF_TL1X_MD_DEBUG1(u64 a)
 {
-	if (CAVIUM_IS_MODEL(CAVIUM_CN9XXX) && (a <= 27))
-		return 0xcc8 + 0x10000 * ((a) & 0x1f);
-	return -1;
+	return 0xcc8 + 0x10000 * a;
 }
 
 /**
@@ -6371,9 +6179,7 @@ static inline u64 CAVM_NIXX_AF_TL1X_MD_DEBUG2(u64 a)
 	__attribute__ ((pure, always_inline));
 static inline u64 CAVM_NIXX_AF_TL1X_MD_DEBUG2(u64 a)
 {
-	if (CAVIUM_IS_MODEL(CAVIUM_CN9XXX) && (a <= 27))
-		return 0xcd0 + 0x10000 * ((a) & 0x1f);
-	return -1;
+	return 0xcd0 + 0x10000 * a;
 }
 
 /**
@@ -6399,9 +6205,7 @@ static inline u64 CAVM_NIXX_AF_TL1X_MD_DEBUG3(u64 a)
 	__attribute__ ((pure, always_inline));
 static inline u64 CAVM_NIXX_AF_TL1X_MD_DEBUG3(u64 a)
 {
-	if (CAVIUM_IS_MODEL(CAVIUM_CN9XXX) && (a <= 27))
-		return 0xcd8 + 0x10000 * ((a) & 0x1f);
-	return -1;
+	return 0xcd8 + 0x10000 * a;
 }
 
 /**
@@ -6426,9 +6230,7 @@ static inline u64 CAVM_NIXX_AF_TL1X_RED(u64 a)
 	__attribute__ ((pure, always_inline));
 static inline u64 CAVM_NIXX_AF_TL1X_RED(u64 a)
 {
-	if (CAVIUM_IS_MODEL(CAVIUM_CN9XXX) && (a <= 27))
-		return 0xcb0 + 0x10000 * ((a) & 0x1f);
-	return -1;
+	return 0xcb0 + 0x10000 * a;
 }
 
 /**
@@ -6450,9 +6252,7 @@ static inline u64 CAVM_NIXX_AF_TL1X_RED_BYTES(u64 a)
 	__attribute__ ((pure, always_inline));
 static inline u64 CAVM_NIXX_AF_TL1X_RED_BYTES(u64 a)
 {
-	if (CAVIUM_IS_MODEL(CAVIUM_CN9XXX) && (a <= 27))
-		return 0xd50 + 0x10000 * ((a) & 0x1f);
-	return -1;
+	return 0xd50 + 0x10000 * a;
 }
 
 /**
@@ -6474,9 +6274,7 @@ static inline u64 CAVM_NIXX_AF_TL1X_RED_PACKETS(u64 a)
 	__attribute__ ((pure, always_inline));
 static inline u64 CAVM_NIXX_AF_TL1X_RED_PACKETS(u64 a)
 {
-	if (CAVIUM_IS_MODEL(CAVIUM_CN9XXX) && (a <= 27))
-		return 0xd40 + 0x10000 * ((a) & 0x1f);
-	return -1;
+	return 0xd40 + 0x10000 * a;
 }
 
 /**
@@ -6497,9 +6295,7 @@ static inline u64 CAVM_NIXX_AF_TL1X_SCHEDULE(u64 a)
 	__attribute__ ((pure, always_inline));
 static inline u64 CAVM_NIXX_AF_TL1X_SCHEDULE(u64 a)
 {
-	if (CAVIUM_IS_MODEL(CAVIUM_CN9XXX) && (a <= 27))
-		return 0xc00 + 0x10000 * ((a) & 0x1f);
-	return -1;
+	return 0xc00 + 0x10000 * a;
 }
 
 /**
@@ -6528,9 +6324,7 @@ static inline u64 CAVM_NIXX_AF_TL1X_SHAPE(u64 a)
 	__attribute__ ((pure, always_inline));
 static inline u64 CAVM_NIXX_AF_TL1X_SHAPE(u64 a)
 {
-	if (CAVIUM_IS_MODEL(CAVIUM_CN9XXX) && (a <= 27))
-		return 0xc10 + 0x10000 * ((a) & 0x1f);
-	return -1;
+	return 0xc10 + 0x10000 * a;
 }
 
 /**
@@ -6554,9 +6348,7 @@ static inline u64 CAVM_NIXX_AF_TL1X_SHAPE_STATE(u64 a)
 	__attribute__ ((pure, always_inline));
 static inline u64 CAVM_NIXX_AF_TL1X_SHAPE_STATE(u64 a)
 {
-	if (CAVIUM_IS_MODEL(CAVIUM_CN9XXX) && (a <= 27))
-		return 0xc50 + 0x10000 * ((a) & 0x1f);
-	return -1;
+	return 0xc50 + 0x10000 * a;
 }
 
 /**
@@ -6580,9 +6372,7 @@ static inline u64 CAVM_NIXX_AF_TL1X_SW_XOFF(u64 a)
 	__attribute__ ((pure, always_inline));
 static inline u64 CAVM_NIXX_AF_TL1X_SW_XOFF(u64 a)
 {
-	if (CAVIUM_IS_MODEL(CAVIUM_CN9XXX) && (a <= 27))
-		return 0xc70 + 0x10000 * ((a) & 0x1f);
-	return -1;
+	return 0xc70 + 0x10000 * a;
 }
 
 /**
@@ -6606,9 +6396,7 @@ static inline u64 CAVM_NIXX_AF_TL1X_TOPOLOGY(u64 a)
 	__attribute__ ((pure, always_inline));
 static inline u64 CAVM_NIXX_AF_TL1X_TOPOLOGY(u64 a)
 {
-	if (CAVIUM_IS_MODEL(CAVIUM_CN9XXX) && (a <= 27))
-		return 0xc80 + 0x10000 * ((a) & 0x1f);
-	return -1;
+	return 0xc80 + 0x10000 * a;
 }
 
 /**
@@ -6631,9 +6419,7 @@ static inline u64 CAVM_NIXX_AF_TL1X_YELLOW(u64 a)
 	__attribute__ ((pure, always_inline));
 static inline u64 CAVM_NIXX_AF_TL1X_YELLOW(u64 a)
 {
-	if (CAVIUM_IS_MODEL(CAVIUM_CN9XXX) && (a <= 27))
-		return 0xca0 + 0x10000 * ((a) & 0x1f);
-	return -1;
+	return 0xca0 + 0x10000 * a;
 }
 
 /**
@@ -6655,9 +6441,7 @@ static inline u64 CAVM_NIXX_AF_TL1X_YELLOW_BYTES(u64 a)
 	__attribute__ ((pure, always_inline));
 static inline u64 CAVM_NIXX_AF_TL1X_YELLOW_BYTES(u64 a)
 {
-	if (CAVIUM_IS_MODEL(CAVIUM_CN9XXX) && (a <= 27))
-		return 0xd70 + 0x10000 * ((a) & 0x1f);
-	return -1;
+	return 0xd70 + 0x10000 * a;
 }
 
 /**
@@ -6679,9 +6463,7 @@ static inline u64 CAVM_NIXX_AF_TL1X_YELLOW_PACKETS(u64 a)
 	__attribute__ ((pure, always_inline));
 static inline u64 CAVM_NIXX_AF_TL1X_YELLOW_PACKETS(u64 a)
 {
-	if (CAVIUM_IS_MODEL(CAVIUM_CN9XXX) && (a <= 27))
-		return 0xd60 + 0x10000 * ((a) & 0x1f);
-	return -1;
+	return 0xd60 + 0x10000 * a;
 }
 
 /**
@@ -6703,9 +6485,7 @@ static inline u64 CAVM_NIXX_AF_TL1_CONST(void)
 	__attribute__ ((pure, always_inline));
 static inline u64 CAVM_NIXX_AF_TL1_CONST(void)
 {
-	if (CAVIUM_IS_MODEL(CAVIUM_CN9XXX))
-		return 0x70;
-	return -1;
+	return 0x70;
 }
 
 /**
@@ -6733,9 +6513,7 @@ static inline u64 CAVM_NIXX_AF_TL2X_CIR(u64 a)
 	__attribute__ ((pure, always_inline));
 static inline u64 CAVM_NIXX_AF_TL2X_CIR(u64 a)
 {
-	if (CAVIUM_IS_MODEL(CAVIUM_CN9XXX) && (a <= 255))
-		return 0xe20 + 0x10000 * ((a) & 0xff);
-	return -1;
+	return 0xe20 + 0x10000 * a;
 }
 
 /**
@@ -6763,9 +6541,7 @@ static inline u64 CAVM_NIXX_AF_TL2X_GREEN(u64 a)
 	__attribute__ ((pure, always_inline));
 static inline u64 CAVM_NIXX_AF_TL2X_GREEN(u64 a)
 {
-	if (CAVIUM_IS_MODEL(CAVIUM_CN9XXX) && (a <= 255))
-		return 0xe90 + 0x10000 * ((a) & 0xff);
-	return -1;
+	return 0xe90 + 0x10000 * a;
 }
 
 /**
@@ -6798,9 +6574,7 @@ static inline u64 CAVM_NIXX_AF_TL2X_MD_DEBUG0(u64 a)
 	__attribute__ ((pure, always_inline));
 static inline u64 CAVM_NIXX_AF_TL2X_MD_DEBUG0(u64 a)
 {
-	if (CAVIUM_IS_MODEL(CAVIUM_CN9XXX) && (a <= 255))
-		return 0xec0 + 0x10000 * ((a) & 0xff);
-	return -1;
+	return 0xec0 + 0x10000 * a;
 }
 
 /**
@@ -6836,9 +6610,7 @@ static inline u64 CAVM_NIXX_AF_TL2X_MD_DEBUG1(u64 a)
 	__attribute__ ((pure, always_inline));
 static inline u64 CAVM_NIXX_AF_TL2X_MD_DEBUG1(u64 a)
 {
-	if (CAVIUM_IS_MODEL(CAVIUM_CN9XXX) && (a <= 255))
-		return 0xec8 + 0x10000 * ((a) & 0xff);
-	return -1;
+	return 0xec8 + 0x10000 * a;
 }
 
 /**
@@ -6874,9 +6646,7 @@ static inline u64 CAVM_NIXX_AF_TL2X_MD_DEBUG2(u64 a)
 	__attribute__ ((pure, always_inline));
 static inline u64 CAVM_NIXX_AF_TL2X_MD_DEBUG2(u64 a)
 {
-	if (CAVIUM_IS_MODEL(CAVIUM_CN9XXX) && (a <= 255))
-		return 0xed0 + 0x10000 * ((a) & 0xff);
-	return -1;
+	return 0xed0 + 0x10000 * a;
 }
 
 /**
@@ -6902,9 +6672,7 @@ static inline u64 CAVM_NIXX_AF_TL2X_MD_DEBUG3(u64 a)
 	__attribute__ ((pure, always_inline));
 static inline u64 CAVM_NIXX_AF_TL2X_MD_DEBUG3(u64 a)
 {
-	if (CAVIUM_IS_MODEL(CAVIUM_CN9XXX) && (a <= 255))
-		return 0xed8 + 0x10000 * ((a) & 0xff);
-	return -1;
+	return 0xed8 + 0x10000 * a;
 }
 
 /**
@@ -6926,9 +6694,7 @@ static inline u64 CAVM_NIXX_AF_TL2X_PARENT(u64 a)
 	__attribute__ ((pure, always_inline));
 static inline u64 CAVM_NIXX_AF_TL2X_PARENT(u64 a)
 {
-	if (CAVIUM_IS_MODEL(CAVIUM_CN9XXX) && (a <= 255))
-		return 0xe88 + 0x10000 * ((a) & 0xff);
-	return -1;
+	return 0xe88 + 0x10000 * a;
 }
 
 /**
@@ -6956,9 +6722,7 @@ static inline u64 CAVM_NIXX_AF_TL2X_PIR(u64 a)
 	__attribute__ ((pure, always_inline));
 static inline u64 CAVM_NIXX_AF_TL2X_PIR(u64 a)
 {
-	if (CAVIUM_IS_MODEL(CAVIUM_CN9XXX) && (a <= 255))
-		return 0xe30 + 0x10000 * ((a) & 0xff);
-	return -1;
+	return 0xe30 + 0x10000 * a;
 }
 
 /**
@@ -6981,9 +6745,7 @@ static inline u64 CAVM_NIXX_AF_TL2X_POINTERS(u64 a)
 	__attribute__ ((pure, always_inline));
 static inline u64 CAVM_NIXX_AF_TL2X_POINTERS(u64 a)
 {
-	if (CAVIUM_IS_MODEL(CAVIUM_CN9XXX) && (a <= 255))
-		return 0xe60 + 0x10000 * ((a) & 0xff);
-	return -1;
+	return 0xe60 + 0x10000 * a;
 }
 
 /**
@@ -7008,9 +6770,7 @@ static inline u64 CAVM_NIXX_AF_TL2X_RED(u64 a)
 	__attribute__ ((pure, always_inline));
 static inline u64 CAVM_NIXX_AF_TL2X_RED(u64 a)
 {
-	if (CAVIUM_IS_MODEL(CAVIUM_CN9XXX) && (a <= 255))
-		return 0xeb0 + 0x10000 * ((a) & 0xff);
-	return -1;
+	return 0xeb0 + 0x10000 * a;
 }
 
 /**
@@ -7031,9 +6791,7 @@ static inline u64 CAVM_NIXX_AF_TL2X_SCHED_STATE(u64 a)
 	__attribute__ ((pure, always_inline));
 static inline u64 CAVM_NIXX_AF_TL2X_SCHED_STATE(u64 a)
 {
-	if (CAVIUM_IS_MODEL(CAVIUM_CN9XXX) && (a <= 255))
-		return 0xe40 + 0x10000 * ((a) & 0xff);
-	return -1;
+	return 0xe40 + 0x10000 * a;
 }
 
 /**
@@ -7055,9 +6813,7 @@ static inline u64 CAVM_NIXX_AF_TL2X_SCHEDULE(u64 a)
 	__attribute__ ((pure, always_inline));
 static inline u64 CAVM_NIXX_AF_TL2X_SCHEDULE(u64 a)
 {
-	if (CAVIUM_IS_MODEL(CAVIUM_CN9XXX) && (a <= 255))
-		return 0xe00 + 0x10000 * ((a) & 0xff);
-	return -1;
+	return 0xe00 + 0x10000 * a;
 }
 
 /**
@@ -7084,9 +6840,7 @@ static inline u64 CAVM_NIXX_AF_TL2X_SHAPE(u64 a)
 	__attribute__ ((pure, always_inline));
 static inline u64 CAVM_NIXX_AF_TL2X_SHAPE(u64 a)
 {
-	if (CAVIUM_IS_MODEL(CAVIUM_CN9XXX) && (a <= 255))
-		return 0xe10 + 0x10000 * ((a) & 0xff);
-	return -1;
+	return 0xe10 + 0x10000 * a;
 }
 
 /**
@@ -7110,9 +6864,7 @@ static inline u64 CAVM_NIXX_AF_TL2X_SHAPE_STATE(u64 a)
 	__attribute__ ((pure, always_inline));
 static inline u64 CAVM_NIXX_AF_TL2X_SHAPE_STATE(u64 a)
 {
-	if (CAVIUM_IS_MODEL(CAVIUM_CN9XXX) && (a <= 255))
-		return 0xe50 + 0x10000 * ((a) & 0xff);
-	return -1;
+	return 0xe50 + 0x10000 * a;
 }
 
 /**
@@ -7137,9 +6889,7 @@ static inline u64 CAVM_NIXX_AF_TL2X_SW_XOFF(u64 a)
 	__attribute__ ((pure, always_inline));
 static inline u64 CAVM_NIXX_AF_TL2X_SW_XOFF(u64 a)
 {
-	if (CAVIUM_IS_MODEL(CAVIUM_CN9XXX) && (a <= 255))
-		return 0xe70 + 0x10000 * ((a) & 0xff);
-	return -1;
+	return 0xe70 + 0x10000 * a;
 }
 
 /**
@@ -7163,9 +6913,7 @@ static inline u64 CAVM_NIXX_AF_TL2X_TOPOLOGY(u64 a)
 	__attribute__ ((pure, always_inline));
 static inline u64 CAVM_NIXX_AF_TL2X_TOPOLOGY(u64 a)
 {
-	if (CAVIUM_IS_MODEL(CAVIUM_CN9XXX) && (a <= 255))
-		return 0xe80 + 0x10000 * ((a) & 0xff);
-	return -1;
+	return 0xe80 + 0x10000 * a;
 }
 
 /**
@@ -7190,9 +6938,7 @@ static inline u64 CAVM_NIXX_AF_TL2X_YELLOW(u64 a)
 	__attribute__ ((pure, always_inline));
 static inline u64 CAVM_NIXX_AF_TL2X_YELLOW(u64 a)
 {
-	if (CAVIUM_IS_MODEL(CAVIUM_CN9XXX) && (a <= 255))
-		return 0xea0 + 0x10000 * ((a) & 0xff);
-	return -1;
+	return 0xea0 + 0x10000 * a;
 }
 
 /**
@@ -7214,9 +6960,7 @@ static inline u64 CAVM_NIXX_AF_TL2_CONST(void)
 	__attribute__ ((pure, always_inline));
 static inline u64 CAVM_NIXX_AF_TL2_CONST(void)
 {
-	if (CAVIUM_IS_MODEL(CAVIUM_CN9XXX))
-		return 0x78;
-	return -1;
+	return 0x78;
 }
 
 /**
@@ -7244,9 +6988,7 @@ static inline u64 CAVM_NIXX_AF_TL3X_CIR(u64 a)
 	__attribute__ ((pure, always_inline));
 static inline u64 CAVM_NIXX_AF_TL3X_CIR(u64 a)
 {
-	if (CAVIUM_IS_MODEL(CAVIUM_CN9XXX) && (a <= 255))
-		return 0x1020 + 0x10000 * ((a) & 0xff);
-	return -1;
+	return 0x1020 + 0x10000 * a;
 }
 
 /**
@@ -7272,9 +7014,7 @@ static inline u64 CAVM_NIXX_AF_TL3X_GREEN(u64 a)
 	__attribute__ ((pure, always_inline));
 static inline u64 CAVM_NIXX_AF_TL3X_GREEN(u64 a)
 {
-	if (CAVIUM_IS_MODEL(CAVIUM_CN9XXX) && (a <= 255))
-		return 0x1090 + 0x10000 * ((a) & 0xff);
-	return -1;
+	return 0x1090 + 0x10000 * a;
 }
 
 /**
@@ -7307,9 +7047,7 @@ static inline u64 CAVM_NIXX_AF_TL3X_MD_DEBUG0(u64 a)
 	__attribute__ ((pure, always_inline));
 static inline u64 CAVM_NIXX_AF_TL3X_MD_DEBUG0(u64 a)
 {
-	if (CAVIUM_IS_MODEL(CAVIUM_CN9XXX) && (a <= 255))
-		return 0x10c0 + 0x10000 * ((a) & 0xff);
-	return -1;
+	return 0x10c0 + 0x10000 * a;
 }
 
 /**
@@ -7345,9 +7083,7 @@ static inline u64 CAVM_NIXX_AF_TL3X_MD_DEBUG1(u64 a)
 	__attribute__ ((pure, always_inline));
 static inline u64 CAVM_NIXX_AF_TL3X_MD_DEBUG1(u64 a)
 {
-	if (CAVIUM_IS_MODEL(CAVIUM_CN9XXX) && (a <= 255))
-		return 0x10c8 + 0x10000 * ((a) & 0xff);
-	return -1;
+	return 0x10c8 + 0x10000 * a;
 }
 
 /**
@@ -7383,9 +7119,7 @@ static inline u64 CAVM_NIXX_AF_TL3X_MD_DEBUG2(u64 a)
 	__attribute__ ((pure, always_inline));
 static inline u64 CAVM_NIXX_AF_TL3X_MD_DEBUG2(u64 a)
 {
-	if (CAVIUM_IS_MODEL(CAVIUM_CN9XXX) && (a <= 255))
-		return 0x10d0 + 0x10000 * ((a) & 0xff);
-	return -1;
+	return 0x10d0 + 0x10000 * a;
 }
 
 /**
@@ -7411,9 +7145,7 @@ static inline u64 CAVM_NIXX_AF_TL3X_MD_DEBUG3(u64 a)
 	__attribute__ ((pure, always_inline));
 static inline u64 CAVM_NIXX_AF_TL3X_MD_DEBUG3(u64 a)
 {
-	if (CAVIUM_IS_MODEL(CAVIUM_CN9XXX) && (a <= 255))
-		return 0x10d8 + 0x10000 * ((a) & 0xff);
-	return -1;
+	return 0x10d8 + 0x10000 * a;
 }
 
 /**
@@ -7435,9 +7167,7 @@ static inline u64 CAVM_NIXX_AF_TL3X_PARENT(u64 a)
 	__attribute__ ((pure, always_inline));
 static inline u64 CAVM_NIXX_AF_TL3X_PARENT(u64 a)
 {
-	if (CAVIUM_IS_MODEL(CAVIUM_CN9XXX) && (a <= 255))
-		return 0x1088 + 0x10000 * ((a) & 0xff);
-	return -1;
+	return 0x1088 + 0x10000 * a;
 }
 
 /**
@@ -7465,9 +7195,7 @@ static inline u64 CAVM_NIXX_AF_TL3X_PIR(u64 a)
 	__attribute__ ((pure, always_inline));
 static inline u64 CAVM_NIXX_AF_TL3X_PIR(u64 a)
 {
-	if (CAVIUM_IS_MODEL(CAVIUM_CN9XXX) && (a <= 255))
-		return 0x1030 + 0x10000 * ((a) & 0xff);
-	return -1;
+	return 0x1030 + 0x10000 * a;
 }
 
 /**
@@ -7492,9 +7220,7 @@ static inline u64 CAVM_NIXX_AF_TL3X_POINTERS(u64 a)
 	__attribute__ ((pure, always_inline));
 static inline u64 CAVM_NIXX_AF_TL3X_POINTERS(u64 a)
 {
-	if (CAVIUM_IS_MODEL(CAVIUM_CN9XXX) && (a <= 255))
-		return 0x1060 + 0x10000 * ((a) & 0xff);
-	return -1;
+	return 0x1060 + 0x10000 * a;
 }
 
 /**
@@ -7519,9 +7245,7 @@ static inline u64 CAVM_NIXX_AF_TL3X_RED(u64 a)
 	__attribute__ ((pure, always_inline));
 static inline u64 CAVM_NIXX_AF_TL3X_RED(u64 a)
 {
-	if (CAVIUM_IS_MODEL(CAVIUM_CN9XXX) && (a <= 255))
-		return 0x10b0 + 0x10000 * ((a) & 0xff);
-	return -1;
+	return 0x10b0 + 0x10000 * a;
 }
 
 /**
@@ -7543,9 +7267,7 @@ static inline u64 CAVM_NIXX_AF_TL3X_SCHED_STATE(u64 a)
 	__attribute__ ((pure, always_inline));
 static inline u64 CAVM_NIXX_AF_TL3X_SCHED_STATE(u64 a)
 {
-	if (CAVIUM_IS_MODEL(CAVIUM_CN9XXX) && (a <= 255))
-		return 0x1040 + 0x10000 * ((a) & 0xff);
-	return -1;
+	return 0x1040 + 0x10000 * a;
 }
 
 /**
@@ -7568,9 +7290,7 @@ static inline u64 CAVM_NIXX_AF_TL3X_SCHEDULE(u64 a)
 	__attribute__ ((pure, always_inline));
 static inline u64 CAVM_NIXX_AF_TL3X_SCHEDULE(u64 a)
 {
-	if (CAVIUM_IS_MODEL(CAVIUM_CN9XXX) && (a <= 255))
-		return 0x1000 + 0x10000 * ((a) & 0xff);
-	return -1;
+	return 0x1000 + 0x10000 * a;
 }
 
 /**
@@ -7597,9 +7317,7 @@ static inline u64 CAVM_NIXX_AF_TL3X_SHAPE(u64 a)
 	__attribute__ ((pure, always_inline));
 static inline u64 CAVM_NIXX_AF_TL3X_SHAPE(u64 a)
 {
-	if (CAVIUM_IS_MODEL(CAVIUM_CN9XXX) && (a <= 255))
-		return 0x1010 + 0x10000 * ((a) & 0xff);
-	return -1;
+	return 0x1010 + 0x10000 * a;
 }
 
 /**
@@ -7624,9 +7342,7 @@ static inline u64 CAVM_NIXX_AF_TL3X_SHAPE_STATE(u64 a)
 	__attribute__ ((pure, always_inline));
 static inline u64 CAVM_NIXX_AF_TL3X_SHAPE_STATE(u64 a)
 {
-	if (CAVIUM_IS_MODEL(CAVIUM_CN9XXX) && (a <= 255))
-		return 0x1050 + 0x10000 * ((a) & 0xff);
-	return -1;
+	return 0x1050 + 0x10000 * a;
 }
 
 /**
@@ -7651,9 +7367,7 @@ static inline u64 CAVM_NIXX_AF_TL3X_SW_XOFF(u64 a)
 	__attribute__ ((pure, always_inline));
 static inline u64 CAVM_NIXX_AF_TL3X_SW_XOFF(u64 a)
 {
-	if (CAVIUM_IS_MODEL(CAVIUM_CN9XXX) && (a <= 255))
-		return 0x1070 + 0x10000 * ((a) & 0xff);
-	return -1;
+	return 0x1070 + 0x10000 * a;
 }
 
 /**
@@ -7677,9 +7391,7 @@ static inline u64 CAVM_NIXX_AF_TL3X_TOPOLOGY(u64 a)
 	__attribute__ ((pure, always_inline));
 static inline u64 CAVM_NIXX_AF_TL3X_TOPOLOGY(u64 a)
 {
-	if (CAVIUM_IS_MODEL(CAVIUM_CN9XXX) && (a <= 255))
-		return 0x1080 + 0x10000 * ((a) & 0xff);
-	return -1;
+	return 0x1080 + 0x10000 * a;
 }
 
 /**
@@ -7702,9 +7414,7 @@ static inline u64 CAVM_NIXX_AF_TL3X_YELLOW(u64 a)
 	__attribute__ ((pure, always_inline));
 static inline u64 CAVM_NIXX_AF_TL3X_YELLOW(u64 a)
 {
-	if (CAVIUM_IS_MODEL(CAVIUM_CN9XXX) && (a <= 255))
-		return 0x10a0 + 0x10000 * ((a) & 0xff);
-	return -1;
+	return 0x10a0 + 0x10000 * a;
 }
 
 /**
@@ -7726,9 +7436,7 @@ static inline u64 CAVM_NIXX_AF_TL3_CONST(void)
 	__attribute__ ((pure, always_inline));
 static inline u64 CAVM_NIXX_AF_TL3_CONST(void)
 {
-	if (CAVIUM_IS_MODEL(CAVIUM_CN9XXX))
-		return 0x80;
-	return -1;
+	return 0x80;
 }
 
 /**
@@ -7749,9 +7457,7 @@ static inline u64 CAVM_NIXX_AF_TL3_TL2X_BP_STATUS(u64 a)
 	__attribute__ ((pure, always_inline));
 static inline u64 CAVM_NIXX_AF_TL3_TL2X_BP_STATUS(u64 a)
 {
-	if (CAVIUM_IS_MODEL(CAVIUM_CN9XXX) && (a <= 255))
-		return 0x1610 + 0x10000 * ((a) & 0xff);
-	return -1;
+	return 0x1610 + 0x10000 * a;
 }
 
 /**
@@ -7772,9 +7478,7 @@ static inline u64 CAVM_NIXX_AF_TL3_TL2X_CFG(u64 a)
 	__attribute__ ((pure, always_inline));
 static inline u64 CAVM_NIXX_AF_TL3_TL2X_CFG(u64 a)
 {
-	if (CAVIUM_IS_MODEL(CAVIUM_CN9XXX) && (a <= 255))
-		return 0x1600 + 0x10000 * ((a) & 0xff);
-	return -1;
+	return 0x1600 + 0x10000 * a;
 }
 
 /**
@@ -7784,7 +7488,8 @@ static inline u64 CAVM_NIXX_AF_TL3_TL2X_CFG(u64 a)
  * These registers specify the links and associated channels that a given TL3 or
  * TL2 queue (depending on NIX_AF_PSE_CHANNEL_LEVEL[BP_LEVEL]) can transmit on.
  * Each TL3/TL2 queue can be enabled to transmit on and be backpressured by one or
- * more links and associated channels.
+ * more links and associated channels. The last index (LINK) is enumerated by
+ * NIX_LINK_E.
  */
 union cavm_nixx_af_tl3_tl2x_linkx_cfg {
 	u64 u;
@@ -7802,9 +7507,7 @@ static inline u64 CAVM_NIXX_AF_TL3_TL2X_LINKX_CFG(u64 a, u64 b)
 	__attribute__ ((pure, always_inline));
 static inline u64 CAVM_NIXX_AF_TL3_TL2X_LINKX_CFG(u64 a, u64 b)
 {
-	if (CAVIUM_IS_MODEL(CAVIUM_CN9XXX) && ((a <= 255) && (b <= 12)))
-		return 0x1700 + 0x10000 * ((a) & 0xff) + 8 * ((b) & 0xf);
-	return -1;
+	return 0x1700 + 0x10000 * a + 8 * b;
 }
 
 /**
@@ -7825,9 +7528,7 @@ static inline u64 CAVM_NIXX_AF_TL4X_BP_STATUS(u64 a)
 	__attribute__ ((pure, always_inline));
 static inline u64 CAVM_NIXX_AF_TL4X_BP_STATUS(u64 a)
 {
-	if (CAVIUM_IS_MODEL(CAVIUM_CN9XXX) && (a <= 511))
-		return 0xb00 + 0x10000 * ((a) & 0x1ff);
-	return -1;
+	return 0xb00 + 0x10000 * a;
 }
 
 /**
@@ -7855,9 +7556,7 @@ static inline u64 CAVM_NIXX_AF_TL4X_CIR(u64 a)
 	__attribute__ ((pure, always_inline));
 static inline u64 CAVM_NIXX_AF_TL4X_CIR(u64 a)
 {
-	if (CAVIUM_IS_MODEL(CAVIUM_CN9XXX) && (a <= 511))
-		return 0x1220 + 0x10000 * ((a) & 0x1ff);
-	return -1;
+	return 0x1220 + 0x10000 * a;
 }
 
 /**
@@ -7885,9 +7584,7 @@ static inline u64 CAVM_NIXX_AF_TL4X_GREEN(u64 a)
 	__attribute__ ((pure, always_inline));
 static inline u64 CAVM_NIXX_AF_TL4X_GREEN(u64 a)
 {
-	if (CAVIUM_IS_MODEL(CAVIUM_CN9XXX) && (a <= 511))
-		return 0x1290 + 0x10000 * ((a) & 0x1ff);
-	return -1;
+	return 0x1290 + 0x10000 * a;
 }
 
 /**
@@ -7920,9 +7617,7 @@ static inline u64 CAVM_NIXX_AF_TL4X_MD_DEBUG0(u64 a)
 	__attribute__ ((pure, always_inline));
 static inline u64 CAVM_NIXX_AF_TL4X_MD_DEBUG0(u64 a)
 {
-	if (CAVIUM_IS_MODEL(CAVIUM_CN9XXX) && (a <= 511))
-		return 0x12c0 + 0x10000 * ((a) & 0x1ff);
-	return -1;
+	return 0x12c0 + 0x10000 * a;
 }
 
 /**
@@ -7958,9 +7653,7 @@ static inline u64 CAVM_NIXX_AF_TL4X_MD_DEBUG1(u64 a)
 	__attribute__ ((pure, always_inline));
 static inline u64 CAVM_NIXX_AF_TL4X_MD_DEBUG1(u64 a)
 {
-	if (CAVIUM_IS_MODEL(CAVIUM_CN9XXX) && (a <= 511))
-		return 0x12c8 + 0x10000 * ((a) & 0x1ff);
-	return -1;
+	return 0x12c8 + 0x10000 * a;
 }
 
 /**
@@ -7996,9 +7689,7 @@ static inline u64 CAVM_NIXX_AF_TL4X_MD_DEBUG2(u64 a)
 	__attribute__ ((pure, always_inline));
 static inline u64 CAVM_NIXX_AF_TL4X_MD_DEBUG2(u64 a)
 {
-	if (CAVIUM_IS_MODEL(CAVIUM_CN9XXX) && (a <= 511))
-		return 0x12d0 + 0x10000 * ((a) & 0x1ff);
-	return -1;
+	return 0x12d0 + 0x10000 * a;
 }
 
 /**
@@ -8024,9 +7715,7 @@ static inline u64 CAVM_NIXX_AF_TL4X_MD_DEBUG3(u64 a)
 	__attribute__ ((pure, always_inline));
 static inline u64 CAVM_NIXX_AF_TL4X_MD_DEBUG3(u64 a)
 {
-	if (CAVIUM_IS_MODEL(CAVIUM_CN9XXX) && (a <= 511))
-		return 0x12d8 + 0x10000 * ((a) & 0x1ff);
-	return -1;
+	return 0x12d8 + 0x10000 * a;
 }
 
 /**
@@ -8048,9 +7737,7 @@ static inline u64 CAVM_NIXX_AF_TL4X_PARENT(u64 a)
 	__attribute__ ((pure, always_inline));
 static inline u64 CAVM_NIXX_AF_TL4X_PARENT(u64 a)
 {
-	if (CAVIUM_IS_MODEL(CAVIUM_CN9XXX) && (a <= 511))
-		return 0x1288 + 0x10000 * ((a) & 0x1ff);
-	return -1;
+	return 0x1288 + 0x10000 * a;
 }
 
 /**
@@ -8078,9 +7765,7 @@ static inline u64 CAVM_NIXX_AF_TL4X_PIR(u64 a)
 	__attribute__ ((pure, always_inline));
 static inline u64 CAVM_NIXX_AF_TL4X_PIR(u64 a)
 {
-	if (CAVIUM_IS_MODEL(CAVIUM_CN9XXX) && (a <= 511))
-		return 0x1230 + 0x10000 * ((a) & 0x1ff);
-	return -1;
+	return 0x1230 + 0x10000 * a;
 }
 
 /**
@@ -8105,9 +7790,7 @@ static inline u64 CAVM_NIXX_AF_TL4X_POINTERS(u64 a)
 	__attribute__ ((pure, always_inline));
 static inline u64 CAVM_NIXX_AF_TL4X_POINTERS(u64 a)
 {
-	if (CAVIUM_IS_MODEL(CAVIUM_CN9XXX) && (a <= 511))
-		return 0x1260 + 0x10000 * ((a) & 0x1ff);
-	return -1;
+	return 0x1260 + 0x10000 * a;
 }
 
 /**
@@ -8132,9 +7815,7 @@ static inline u64 CAVM_NIXX_AF_TL4X_RED(u64 a)
 	__attribute__ ((pure, always_inline));
 static inline u64 CAVM_NIXX_AF_TL4X_RED(u64 a)
 {
-	if (CAVIUM_IS_MODEL(CAVIUM_CN9XXX) && (a <= 511))
-		return 0x12b0 + 0x10000 * ((a) & 0x1ff);
-	return -1;
+	return 0x12b0 + 0x10000 * a;
 }
 
 /**
@@ -8156,9 +7837,7 @@ static inline u64 CAVM_NIXX_AF_TL4X_SCHED_STATE(u64 a)
 	__attribute__ ((pure, always_inline));
 static inline u64 CAVM_NIXX_AF_TL4X_SCHED_STATE(u64 a)
 {
-	if (CAVIUM_IS_MODEL(CAVIUM_CN9XXX) && (a <= 511))
-		return 0x1240 + 0x10000 * ((a) & 0x1ff);
-	return -1;
+	return 0x1240 + 0x10000 * a;
 }
 
 /**
@@ -8181,9 +7860,7 @@ static inline u64 CAVM_NIXX_AF_TL4X_SCHEDULE(u64 a)
 	__attribute__ ((pure, always_inline));
 static inline u64 CAVM_NIXX_AF_TL4X_SCHEDULE(u64 a)
 {
-	if (CAVIUM_IS_MODEL(CAVIUM_CN9XXX) && (a <= 511))
-		return 0x1200 + 0x10000 * ((a) & 0x1ff);
-	return -1;
+	return 0x1200 + 0x10000 * a;
 }
 
 /**
@@ -8209,9 +7886,7 @@ static inline u64 CAVM_NIXX_AF_TL4X_SDP_LINK_CFG(u64 a)
 	__attribute__ ((pure, always_inline));
 static inline u64 CAVM_NIXX_AF_TL4X_SDP_LINK_CFG(u64 a)
 {
-	if (CAVIUM_IS_MODEL(CAVIUM_CN9XXX) && (a <= 511))
-		return 0xb10 + 0x10000 * ((a) & 0x1ff);
-	return -1;
+	return 0xb10 + 0x10000 * a;
 }
 
 /**
@@ -8239,9 +7914,7 @@ static inline u64 CAVM_NIXX_AF_TL4X_SHAPE(u64 a)
 	__attribute__ ((pure, always_inline));
 static inline u64 CAVM_NIXX_AF_TL4X_SHAPE(u64 a)
 {
-	if (CAVIUM_IS_MODEL(CAVIUM_CN9XXX) && (a <= 511))
-		return 0x1210 + 0x10000 * ((a) & 0x1ff);
-	return -1;
+	return 0x1210 + 0x10000 * a;
 }
 
 /**
@@ -8266,9 +7939,7 @@ static inline u64 CAVM_NIXX_AF_TL4X_SHAPE_STATE(u64 a)
 	__attribute__ ((pure, always_inline));
 static inline u64 CAVM_NIXX_AF_TL4X_SHAPE_STATE(u64 a)
 {
-	if (CAVIUM_IS_MODEL(CAVIUM_CN9XXX) && (a <= 511))
-		return 0x1250 + 0x10000 * ((a) & 0x1ff);
-	return -1;
+	return 0x1250 + 0x10000 * a;
 }
 
 /**
@@ -8293,9 +7964,7 @@ static inline u64 CAVM_NIXX_AF_TL4X_SW_XOFF(u64 a)
 	__attribute__ ((pure, always_inline));
 static inline u64 CAVM_NIXX_AF_TL4X_SW_XOFF(u64 a)
 {
-	if (CAVIUM_IS_MODEL(CAVIUM_CN9XXX) && (a <= 511))
-		return 0x1270 + 0x10000 * ((a) & 0x1ff);
-	return -1;
+	return 0x1270 + 0x10000 * a;
 }
 
 /**
@@ -8319,9 +7988,7 @@ static inline u64 CAVM_NIXX_AF_TL4X_TOPOLOGY(u64 a)
 	__attribute__ ((pure, always_inline));
 static inline u64 CAVM_NIXX_AF_TL4X_TOPOLOGY(u64 a)
 {
-	if (CAVIUM_IS_MODEL(CAVIUM_CN9XXX) && (a <= 511))
-		return 0x1280 + 0x10000 * ((a) & 0x1ff);
-	return -1;
+	return 0x1280 + 0x10000 * a;
 }
 
 /**
@@ -8346,9 +8013,7 @@ static inline u64 CAVM_NIXX_AF_TL4X_YELLOW(u64 a)
 	__attribute__ ((pure, always_inline));
 static inline u64 CAVM_NIXX_AF_TL4X_YELLOW(u64 a)
 {
-	if (CAVIUM_IS_MODEL(CAVIUM_CN9XXX) && (a <= 511))
-		return 0x12a0 + 0x10000 * ((a) & 0x1ff);
-	return -1;
+	return 0x12a0 + 0x10000 * a;
 }
 
 /**
@@ -8370,9 +8035,7 @@ static inline u64 CAVM_NIXX_AF_TL4_CONST(void)
 	__attribute__ ((pure, always_inline));
 static inline u64 CAVM_NIXX_AF_TL4_CONST(void)
 {
-	if (CAVIUM_IS_MODEL(CAVIUM_CN9XXX))
-		return 0x88;
-	return -1;
+	return 0x88;
 }
 
 /**
@@ -8398,9 +8061,7 @@ static inline u64 CAVM_NIXX_AF_TX_LINKX_EXPR_CREDIT(u64 a)
 	__attribute__ ((pure, always_inline));
 static inline u64 CAVM_NIXX_AF_TX_LINKX_EXPR_CREDIT(u64 a)
 {
-	if (CAVIUM_IS_MODEL(CAVIUM_CN9XXX) && (a <= 12))
-		return 0xa10 + 0x10000 * ((a) & 0xf);
-	return -1;
+	return 0xa10 + 0x10000 * a;
 }
 
 /**
@@ -8421,9 +8082,7 @@ static inline u64 CAVM_NIXX_AF_TX_LINKX_HW_XOFF(u64 a)
 	__attribute__ ((pure, always_inline));
 static inline u64 CAVM_NIXX_AF_TX_LINKX_HW_XOFF(u64 a)
 {
-	if (CAVIUM_IS_MODEL(CAVIUM_CN9XXX) && (a <= 12))
-		return 0xa30 + 0x10000 * ((a) & 0xf);
-	return -1;
+	return 0xa30 + 0x10000 * a;
 }
 
 /**
@@ -8449,9 +8108,7 @@ static inline u64 CAVM_NIXX_AF_TX_LINKX_NORM_CREDIT(u64 a)
 	__attribute__ ((pure, always_inline));
 static inline u64 CAVM_NIXX_AF_TX_LINKX_NORM_CREDIT(u64 a)
 {
-	if (CAVIUM_IS_MODEL(CAVIUM_CN9XXX) && (a <= 12))
-		return 0xa00 + 0x10000 * ((a) & 0xf);
-	return -1;
+	return 0xa00 + 0x10000 * a;
 }
 
 /**
@@ -8472,9 +8129,7 @@ static inline u64 CAVM_NIXX_AF_TX_LINKX_SW_XOFF(u64 a)
 	__attribute__ ((pure, always_inline));
 static inline u64 CAVM_NIXX_AF_TX_LINKX_SW_XOFF(u64 a)
 {
-	if (CAVIUM_IS_MODEL(CAVIUM_CN9XXX) && (a <= 12))
-		return 0xa20 + 0x10000 * ((a) & 0xf);
-	return -1;
+	return 0xa20 + 0x10000 * a;
 }
 
 /**
@@ -8504,9 +8159,7 @@ static inline u64 CAVM_NIXX_AF_TX_MCASTX(u64 a)
 	__attribute__ ((pure, always_inline));
 static inline u64 CAVM_NIXX_AF_TX_MCASTX(u64 a)
 {
-	if (CAVIUM_IS_MODEL(CAVIUM_CN9XXX) && (a <= 2047))
-		return 0x1900 + 0x8000 * ((a) & 0x7ff);
-	return -1;
+	return 0x1900 + 0x8000 * a;
 }
 
 /**
@@ -8539,9 +8192,7 @@ static inline u64 CAVM_NIXX_AF_TX_NPC_CAPTURE_CONFIG(void)
 	__attribute__ ((pure, always_inline));
 static inline u64 CAVM_NIXX_AF_TX_NPC_CAPTURE_CONFIG(void)
 {
-	if (CAVIUM_IS_MODEL(CAVIUM_CN9XXX))
-		return 0x660;
-	return -1;
+	return 0x660;
 }
 
 /**
@@ -8568,9 +8219,7 @@ static inline u64 CAVM_NIXX_AF_TX_NPC_CAPTURE_INFO(void)
 	__attribute__ ((pure, always_inline));
 static inline u64 CAVM_NIXX_AF_TX_NPC_CAPTURE_INFO(void)
 {
-	if (CAVIUM_IS_MODEL(CAVIUM_CN9XXX))
-		return 0x668;
-	return -1;
+	return 0x668;
 }
 
 /**
@@ -8592,9 +8241,7 @@ static inline u64 CAVM_NIXX_AF_TX_NPC_CAPTURE_RESPX(u64 a)
 	__attribute__ ((pure, always_inline));
 static inline u64 CAVM_NIXX_AF_TX_NPC_CAPTURE_RESPX(u64 a)
 {
-	if (CAVIUM_IS_MODEL(CAVIUM_CN9XXX) && (a <= 7))
-		return 0x680 + 8 * ((a) & 0x7);
-	return -1;
+	return 0x680 + 8 * a;
 }
 
 /**
@@ -8617,9 +8264,7 @@ static inline u64 CAVM_NIXX_AF_TX_TSTMP_CFG(void)
 	__attribute__ ((pure, always_inline));
 static inline u64 CAVM_NIXX_AF_TX_TSTMP_CFG(void)
 {
-	if (CAVIUM_IS_MODEL(CAVIUM_CN9XXX))
-		return 0xc0;
-	return -1;
+	return 0xc0;
 }
 
 /**
@@ -8633,8 +8278,8 @@ static inline u64 CAVM_NIXX_AF_TX_TSTMP_CFG(void)
 union cavm_nixx_af_tx_vtag_defx_ctl {
 	u64 u;
 	struct cavm_nixx_af_tx_vtag_defx_ctl_s {
-		u64 size                             : 3;
-		u64 reserved_3_63                    : 61;
+		u64 size                             : 1;
+		u64 reserved_1_63                    : 63;
 	} s;
 	/* struct cavm_nixx_af_tx_vtag_defx_ctl_s cn; */
 };
@@ -8643,9 +8288,7 @@ static inline u64 CAVM_NIXX_AF_TX_VTAG_DEFX_CTL(u64 a)
 	__attribute__ ((pure, always_inline));
 static inline u64 CAVM_NIXX_AF_TX_VTAG_DEFX_CTL(u64 a)
 {
-	if (CAVIUM_IS_MODEL(CAVIUM_CN9XXX) && (a <= 1023))
-		return 0x1a00 + 0x10000 * ((a) & 0x3ff);
-	return -1;
+	return 0x1a00 + 0x10000 * a;
 }
 
 /**
@@ -8666,9 +8309,7 @@ static inline u64 CAVM_NIXX_AF_TX_VTAG_DEFX_DATA(u64 a)
 	__attribute__ ((pure, always_inline));
 static inline u64 CAVM_NIXX_AF_TX_VTAG_DEFX_DATA(u64 a)
 {
-	if (CAVIUM_IS_MODEL(CAVIUM_CN9XXX) && (a <= 1023))
-		return 0x1a10 + 0x10000 * ((a) & 0x3ff);
-	return -1;
+	return 0x1a10 + 0x10000 * a;
 }
 
 /**
@@ -8689,9 +8330,7 @@ static inline u64 CAVM_NIXX_LF_CFG(void)
 	__attribute__ ((pure, always_inline));
 static inline u64 CAVM_NIXX_LF_CFG(void)
 {
-	if (CAVIUM_IS_MODEL(CAVIUM_CN9XXX))
-		return 0x100;
-	return -1;
+	return 0x100;
 }
 
 /**
@@ -8713,9 +8352,7 @@ static inline u64 CAVM_NIXX_LF_CINTX_CNT(u64 a)
 	__attribute__ ((pure, always_inline));
 static inline u64 CAVM_NIXX_LF_CINTX_CNT(u64 a)
 {
-	if (CAVIUM_IS_MODEL(CAVIUM_CN9XXX) && (a <= 63))
-		return 0xd00 + 0x1000 * ((a) & 0x3f);
-	return -1;
+	return 0xd00 + 0x1000 * a;
 }
 
 /**
@@ -8737,9 +8374,7 @@ static inline u64 CAVM_NIXX_LF_CINTX_ENA_W1C(u64 a)
 	__attribute__ ((pure, always_inline));
 static inline u64 CAVM_NIXX_LF_CINTX_ENA_W1C(u64 a)
 {
-	if (CAVIUM_IS_MODEL(CAVIUM_CN9XXX) && (a <= 63))
-		return 0xd50 + 0x1000 * ((a) & 0x3f);
-	return -1;
+	return 0xd50 + 0x1000 * a;
 }
 
 /**
@@ -8761,9 +8396,7 @@ static inline u64 CAVM_NIXX_LF_CINTX_ENA_W1S(u64 a)
 	__attribute__ ((pure, always_inline));
 static inline u64 CAVM_NIXX_LF_CINTX_ENA_W1S(u64 a)
 {
-	if (CAVIUM_IS_MODEL(CAVIUM_CN9XXX) && (a <= 63))
-		return 0xd40 + 0x1000 * ((a) & 0x3f);
-	return -1;
+	return 0xd40 + 0x1000 * a;
 }
 
 /**
@@ -8784,9 +8417,7 @@ static inline u64 CAVM_NIXX_LF_CINTX_INT(u64 a)
 	__attribute__ ((pure, always_inline));
 static inline u64 CAVM_NIXX_LF_CINTX_INT(u64 a)
 {
-	if (CAVIUM_IS_MODEL(CAVIUM_CN9XXX) && (a <= 63))
-		return 0xd20 + 0x1000 * ((a) & 0x3f);
-	return -1;
+	return 0xd20 + 0x1000 * a;
 }
 
 /**
@@ -8808,9 +8439,7 @@ static inline u64 CAVM_NIXX_LF_CINTX_INT_W1S(u64 a)
 	__attribute__ ((pure, always_inline));
 static inline u64 CAVM_NIXX_LF_CINTX_INT_W1S(u64 a)
 {
-	if (CAVIUM_IS_MODEL(CAVIUM_CN9XXX) && (a <= 63))
-		return 0xd30 + 0x1000 * ((a) & 0x3f);
-	return -1;
+	return 0xd30 + 0x1000 * a;
 }
 
 /**
@@ -8833,9 +8462,7 @@ static inline u64 CAVM_NIXX_LF_CINTX_WAIT(u64 a)
 	__attribute__ ((pure, always_inline));
 static inline u64 CAVM_NIXX_LF_CINTX_WAIT(u64 a)
 {
-	if (CAVIUM_IS_MODEL(CAVIUM_CN9XXX) && (a <= 63))
-		return 0xd10 + 0x1000 * ((a) & 0x3f);
-	return -1;
+	return 0xd10 + 0x1000 * a;
 }
 
 /**
@@ -8862,9 +8489,7 @@ static inline u64 CAVM_NIXX_LF_CQ_OP_DOOR(void)
 	__attribute__ ((pure, always_inline));
 static inline u64 CAVM_NIXX_LF_CQ_OP_DOOR(void)
 {
-	if (CAVIUM_IS_MODEL(CAVIUM_CN9XXX))
-		return 0xb30;
-	return -1;
+	return 0xb30;
 }
 
 /**
@@ -8895,9 +8520,7 @@ static inline u64 CAVM_NIXX_LF_CQ_OP_INT(void)
 	__attribute__ ((pure, always_inline));
 static inline u64 CAVM_NIXX_LF_CQ_OP_INT(void)
 {
-	if (CAVIUM_IS_MODEL(CAVIUM_CN9XXX))
-		return 0xb00;
-	return -1;
+	return 0xb00;
 }
 
 /**
@@ -8928,9 +8551,7 @@ static inline u64 CAVM_NIXX_LF_CQ_OP_STATUS(void)
 	__attribute__ ((pure, always_inline));
 static inline u64 CAVM_NIXX_LF_CQ_OP_STATUS(void)
 {
-	if (CAVIUM_IS_MODEL(CAVIUM_CN9XXX))
-		return 0xb40;
-	return -1;
+	return 0xb40;
 }
 
 /**
@@ -8973,9 +8594,7 @@ static inline u64 CAVM_NIXX_LF_ERR_INT(void)
 	__attribute__ ((pure, always_inline));
 static inline u64 CAVM_NIXX_LF_ERR_INT(void)
 {
-	if (CAVIUM_IS_MODEL(CAVIUM_CN9XXX))
-		return 0x220;
-	return -1;
+	return 0x220;
 }
 
 /**
@@ -9019,9 +8638,7 @@ static inline u64 CAVM_NIXX_LF_ERR_INT_ENA_W1C(void)
 	__attribute__ ((pure, always_inline));
 static inline u64 CAVM_NIXX_LF_ERR_INT_ENA_W1C(void)
 {
-	if (CAVIUM_IS_MODEL(CAVIUM_CN9XXX))
-		return 0x230;
-	return -1;
+	return 0x230;
 }
 
 /**
@@ -9065,9 +8682,7 @@ static inline u64 CAVM_NIXX_LF_ERR_INT_ENA_W1S(void)
 	__attribute__ ((pure, always_inline));
 static inline u64 CAVM_NIXX_LF_ERR_INT_ENA_W1S(void)
 {
-	if (CAVIUM_IS_MODEL(CAVIUM_CN9XXX))
-		return 0x238;
-	return -1;
+	return 0x238;
 }
 
 /**
@@ -9111,9 +8726,7 @@ static inline u64 CAVM_NIXX_LF_ERR_INT_W1S(void)
 	__attribute__ ((pure, always_inline));
 static inline u64 CAVM_NIXX_LF_ERR_INT_W1S(void)
 {
-	if (CAVIUM_IS_MODEL(CAVIUM_CN9XXX))
-		return 0x228;
-	return -1;
+	return 0x228;
 }
 
 /**
@@ -9135,9 +8748,7 @@ static inline u64 CAVM_NIXX_LF_GINT(void)
 	__attribute__ ((pure, always_inline));
 static inline u64 CAVM_NIXX_LF_GINT(void)
 {
-	if (CAVIUM_IS_MODEL(CAVIUM_CN9XXX))
-		return 0x200;
-	return -1;
+	return 0x200;
 }
 
 /**
@@ -9160,9 +8771,7 @@ static inline u64 CAVM_NIXX_LF_GINT_ENA_W1C(void)
 	__attribute__ ((pure, always_inline));
 static inline u64 CAVM_NIXX_LF_GINT_ENA_W1C(void)
 {
-	if (CAVIUM_IS_MODEL(CAVIUM_CN9XXX))
-		return 0x210;
-	return -1;
+	return 0x210;
 }
 
 /**
@@ -9185,9 +8794,7 @@ static inline u64 CAVM_NIXX_LF_GINT_ENA_W1S(void)
 	__attribute__ ((pure, always_inline));
 static inline u64 CAVM_NIXX_LF_GINT_ENA_W1S(void)
 {
-	if (CAVIUM_IS_MODEL(CAVIUM_CN9XXX))
-		return 0x218;
-	return -1;
+	return 0x218;
 }
 
 /**
@@ -9210,9 +8817,7 @@ static inline u64 CAVM_NIXX_LF_GINT_W1S(void)
 	__attribute__ ((pure, always_inline));
 static inline u64 CAVM_NIXX_LF_GINT_W1S(void)
 {
-	if (CAVIUM_IS_MODEL(CAVIUM_CN9XXX))
-		return 0x208;
-	return -1;
+	return 0x208;
 }
 
 /**
@@ -9240,9 +8845,7 @@ static inline u64 CAVM_NIXX_LF_MNQ_ERR_DBG(void)
 	__attribute__ ((pure, always_inline));
 static inline u64 CAVM_NIXX_LF_MNQ_ERR_DBG(void)
 {
-	if (CAVIUM_IS_MODEL(CAVIUM_CN9XXX))
-		return 0x270;
-	return -1;
+	return 0x270;
 }
 
 /**
@@ -9271,9 +8874,7 @@ static inline u64 CAVM_NIXX_LF_OP_IPSEC_DYNO_CNT(void)
 	__attribute__ ((pure, always_inline));
 static inline u64 CAVM_NIXX_LF_OP_IPSEC_DYNO_CNT(void)
 {
-	if (CAVIUM_IS_MODEL(CAVIUM_CN9XXX))
-		return 0x980;
-	return -1;
+	return 0x980;
 }
 
 /**
@@ -9302,9 +8903,7 @@ static inline u64 CAVM_NIXX_LF_OP_IPSEC_DYNO_CNT(void)
  * processing this descriptor, including all packet data and post-jump subdescriptors
  * contain the latest updates before issuing the LMTST. A DMB instruction may be required prior
  * to the LMTST to ensure this. A DMB following the LMTST may be useful if SQ descriptor ordering
- * matters and more than one CPU core is simultaneously enqueueing to the same SQ. For more
- * information on ordering, refer to the HRM "Core Memory Reference Ordering" section in the CPU
- * cores chapter.
+ * matters and more than one CPU core is simultaneously enqueueing to the same SQ.
  */
 union cavm_nixx_lf_op_sendx {
 	u64 u;
@@ -9318,9 +8917,7 @@ static inline u64 CAVM_NIXX_LF_OP_SENDX(u64 a)
 	__attribute__ ((pure, always_inline));
 static inline u64 CAVM_NIXX_LF_OP_SENDX(u64 a)
 {
-	if (CAVIUM_IS_MODEL(CAVIUM_CN9XXX) && (a <= 15))
-		return 0x800 + 8 * ((a) & 0xf);
-	return -1;
+	return 0x800 + 8 * a;
 }
 
 /**
@@ -9341,9 +8938,7 @@ static inline u64 CAVM_NIXX_LF_QINTX_CNT(u64 a)
 	__attribute__ ((pure, always_inline));
 static inline u64 CAVM_NIXX_LF_QINTX_CNT(u64 a)
 {
-	if (CAVIUM_IS_MODEL(CAVIUM_CN9XXX) && (a <= 63))
-		return 0xc00 + 0x1000 * ((a) & 0x3f);
-	return -1;
+	return 0xc00 + 0x1000 * a;
 }
 
 /**
@@ -9365,9 +8960,7 @@ static inline u64 CAVM_NIXX_LF_QINTX_ENA_W1C(u64 a)
 	__attribute__ ((pure, always_inline));
 static inline u64 CAVM_NIXX_LF_QINTX_ENA_W1C(u64 a)
 {
-	if (CAVIUM_IS_MODEL(CAVIUM_CN9XXX) && (a <= 63))
-		return 0xc30 + 0x1000 * ((a) & 0x3f);
-	return -1;
+	return 0xc30 + 0x1000 * a;
 }
 
 /**
@@ -9389,9 +8982,7 @@ static inline u64 CAVM_NIXX_LF_QINTX_ENA_W1S(u64 a)
 	__attribute__ ((pure, always_inline));
 static inline u64 CAVM_NIXX_LF_QINTX_ENA_W1S(u64 a)
 {
-	if (CAVIUM_IS_MODEL(CAVIUM_CN9XXX) && (a <= 63))
-		return 0xc20 + 0x1000 * ((a) & 0x3f);
-	return -1;
+	return 0xc20 + 0x1000 * a;
 }
 
 /**
@@ -9412,9 +9003,7 @@ static inline u64 CAVM_NIXX_LF_QINTX_INT(u64 a)
 	__attribute__ ((pure, always_inline));
 static inline u64 CAVM_NIXX_LF_QINTX_INT(u64 a)
 {
-	if (CAVIUM_IS_MODEL(CAVIUM_CN9XXX) && (a <= 63))
-		return 0xc10 + 0x1000 * ((a) & 0x3f);
-	return -1;
+	return 0xc10 + 0x1000 * a;
 }
 
 /**
@@ -9435,9 +9024,7 @@ static inline u64 CAVM_NIXX_LF_QINTX_INT_W1S(u64 a)
 	__attribute__ ((pure, always_inline));
 static inline u64 CAVM_NIXX_LF_QINTX_INT_W1S(u64 a)
 {
-	if (CAVIUM_IS_MODEL(CAVIUM_CN9XXX) && (a <= 63))
-		return 0xc18 + 0x1000 * ((a) & 0x3f);
-	return -1;
+	return 0xc18 + 0x1000 * a;
 }
 
 /**
@@ -9468,9 +9055,7 @@ static inline u64 CAVM_NIXX_LF_RAS(void)
 	__attribute__ ((pure, always_inline));
 static inline u64 CAVM_NIXX_LF_RAS(void)
 {
-	if (CAVIUM_IS_MODEL(CAVIUM_CN9XXX))
-		return 0x240;
-	return -1;
+	return 0x240;
 }
 
 /**
@@ -9502,9 +9087,7 @@ static inline u64 CAVM_NIXX_LF_RAS_ENA_W1C(void)
 	__attribute__ ((pure, always_inline));
 static inline u64 CAVM_NIXX_LF_RAS_ENA_W1C(void)
 {
-	if (CAVIUM_IS_MODEL(CAVIUM_CN9XXX))
-		return 0x250;
-	return -1;
+	return 0x250;
 }
 
 /**
@@ -9536,9 +9119,7 @@ static inline u64 CAVM_NIXX_LF_RAS_ENA_W1S(void)
 	__attribute__ ((pure, always_inline));
 static inline u64 CAVM_NIXX_LF_RAS_ENA_W1S(void)
 {
-	if (CAVIUM_IS_MODEL(CAVIUM_CN9XXX))
-		return 0x258;
-	return -1;
+	return 0x258;
 }
 
 /**
@@ -9570,9 +9151,7 @@ static inline u64 CAVM_NIXX_LF_RAS_W1S(void)
 	__attribute__ ((pure, always_inline));
 static inline u64 CAVM_NIXX_LF_RAS_W1S(void)
 {
-	if (CAVIUM_IS_MODEL(CAVIUM_CN9XXX))
-		return 0x248;
-	return -1;
+	return 0x248;
 }
 
 /**
@@ -9600,9 +9179,7 @@ static inline u64 CAVM_NIXX_LF_RQ_OP_DROP_OCTS(void)
 	__attribute__ ((pure, always_inline));
 static inline u64 CAVM_NIXX_LF_RQ_OP_DROP_OCTS(void)
 {
-	if (CAVIUM_IS_MODEL(CAVIUM_CN9XXX))
-		return 0x930;
-	return -1;
+	return 0x930;
 }
 
 /**
@@ -9630,9 +9207,7 @@ static inline u64 CAVM_NIXX_LF_RQ_OP_DROP_PKTS(void)
 	__attribute__ ((pure, always_inline));
 static inline u64 CAVM_NIXX_LF_RQ_OP_DROP_PKTS(void)
 {
-	if (CAVIUM_IS_MODEL(CAVIUM_CN9XXX))
-		return 0x940;
-	return -1;
+	return 0x940;
 }
 
 /**
@@ -9664,9 +9239,7 @@ static inline u64 CAVM_NIXX_LF_RQ_OP_INT(void)
 	__attribute__ ((pure, always_inline));
 static inline u64 CAVM_NIXX_LF_RQ_OP_INT(void)
 {
-	if (CAVIUM_IS_MODEL(CAVIUM_CN9XXX))
-		return 0x900;
-	return -1;
+	return 0x900;
 }
 
 /**
@@ -9694,9 +9267,7 @@ static inline u64 CAVM_NIXX_LF_RQ_OP_OCTS(void)
 	__attribute__ ((pure, always_inline));
 static inline u64 CAVM_NIXX_LF_RQ_OP_OCTS(void)
 {
-	if (CAVIUM_IS_MODEL(CAVIUM_CN9XXX))
-		return 0x910;
-	return -1;
+	return 0x910;
 }
 
 /**
@@ -9724,9 +9295,7 @@ static inline u64 CAVM_NIXX_LF_RQ_OP_PKTS(void)
 	__attribute__ ((pure, always_inline));
 static inline u64 CAVM_NIXX_LF_RQ_OP_PKTS(void)
 {
-	if (CAVIUM_IS_MODEL(CAVIUM_CN9XXX))
-		return 0x920;
-	return -1;
+	return 0x920;
 }
 
 /**
@@ -9754,9 +9323,7 @@ static inline u64 CAVM_NIXX_LF_RQ_OP_RE_PKTS(void)
 	__attribute__ ((pure, always_inline));
 static inline u64 CAVM_NIXX_LF_RQ_OP_RE_PKTS(void)
 {
-	if (CAVIUM_IS_MODEL(CAVIUM_CN9XXX))
-		return 0x950;
-	return -1;
+	return 0x950;
 }
 
 /**
@@ -9776,9 +9343,7 @@ static inline u64 CAVM_NIXX_LF_RX_SECRETX(u64 a)
 	__attribute__ ((pure, always_inline));
 static inline u64 CAVM_NIXX_LF_RX_SECRETX(u64 a)
 {
-	if (CAVIUM_IS_MODEL(CAVIUM_CN9XXX) && (a <= 5))
-		return 0 + 8 * ((a) & 0x7);
-	return -1;
+	return 0 + 8 * a;
 }
 
 /**
@@ -9800,9 +9365,7 @@ static inline u64 CAVM_NIXX_LF_RX_STATX(u64 a)
 	__attribute__ ((pure, always_inline));
 static inline u64 CAVM_NIXX_LF_RX_STATX(u64 a)
 {
-	if (CAVIUM_IS_MODEL(CAVIUM_CN9XXX) && (a <= 11))
-		return 0x400 + 8 * ((a) & 0xf);
-	return -1;
+	return 0x400 + 8 * a;
 }
 
 /**
@@ -9830,9 +9393,7 @@ static inline u64 CAVM_NIXX_LF_SEND_ERR_DBG(void)
 	__attribute__ ((pure, always_inline));
 static inline u64 CAVM_NIXX_LF_SEND_ERR_DBG(void)
 {
-	if (CAVIUM_IS_MODEL(CAVIUM_CN9XXX))
-		return 0x280;
-	return -1;
+	return 0x280;
 }
 
 /**
@@ -9860,9 +9421,7 @@ static inline u64 CAVM_NIXX_LF_SQ_OP_DROP_OCTS(void)
 	__attribute__ ((pure, always_inline));
 static inline u64 CAVM_NIXX_LF_SQ_OP_DROP_OCTS(void)
 {
-	if (CAVIUM_IS_MODEL(CAVIUM_CN9XXX))
-		return 0xa40;
-	return -1;
+	return 0xa40;
 }
 
 /**
@@ -9890,9 +9449,7 @@ static inline u64 CAVM_NIXX_LF_SQ_OP_DROP_PKTS(void)
 	__attribute__ ((pure, always_inline));
 static inline u64 CAVM_NIXX_LF_SQ_OP_DROP_PKTS(void)
 {
-	if (CAVIUM_IS_MODEL(CAVIUM_CN9XXX))
-		return 0xa50;
-	return -1;
+	return 0xa50;
 }
 
 /**
@@ -9920,9 +9477,7 @@ static inline u64 CAVM_NIXX_LF_SQ_OP_ERR_DBG(void)
 	__attribute__ ((pure, always_inline));
 static inline u64 CAVM_NIXX_LF_SQ_OP_ERR_DBG(void)
 {
-	if (CAVIUM_IS_MODEL(CAVIUM_CN9XXX))
-		return 0x260;
-	return -1;
+	return 0x260;
 }
 
 /**
@@ -9954,9 +9509,7 @@ static inline u64 CAVM_NIXX_LF_SQ_OP_INT(void)
 	__attribute__ ((pure, always_inline));
 static inline u64 CAVM_NIXX_LF_SQ_OP_INT(void)
 {
-	if (CAVIUM_IS_MODEL(CAVIUM_CN9XXX))
-		return 0xa00;
-	return -1;
+	return 0xa00;
 }
 
 /**
@@ -9984,9 +9537,7 @@ static inline u64 CAVM_NIXX_LF_SQ_OP_OCTS(void)
 	__attribute__ ((pure, always_inline));
 static inline u64 CAVM_NIXX_LF_SQ_OP_OCTS(void)
 {
-	if (CAVIUM_IS_MODEL(CAVIUM_CN9XXX))
-		return 0xa10;
-	return -1;
+	return 0xa10;
 }
 
 /**
@@ -10014,9 +9565,7 @@ static inline u64 CAVM_NIXX_LF_SQ_OP_PKTS(void)
 	__attribute__ ((pure, always_inline));
 static inline u64 CAVM_NIXX_LF_SQ_OP_PKTS(void)
 {
-	if (CAVIUM_IS_MODEL(CAVIUM_CN9XXX))
-		return 0xa20;
-	return -1;
+	return 0xa20;
 }
 
 /**
@@ -10060,9 +9609,7 @@ static inline u64 CAVM_NIXX_LF_SQ_OP_STATUS(void)
 	__attribute__ ((pure, always_inline));
 static inline u64 CAVM_NIXX_LF_SQ_OP_STATUS(void)
 {
-	if (CAVIUM_IS_MODEL(CAVIUM_CN9XXX))
-		return 0xa30;
-	return -1;
+	return 0xa30;
 }
 
 /**
@@ -10084,9 +9631,7 @@ static inline u64 CAVM_NIXX_LF_TX_STATX(u64 a)
 	__attribute__ ((pure, always_inline));
 static inline u64 CAVM_NIXX_LF_TX_STATX(u64 a)
 {
-	if (CAVIUM_IS_MODEL(CAVIUM_CN9XXX) && (a <= 4))
-		return 0x300 + 8 * ((a) & 0x7);
-	return -1;
+	return 0x300 + 8 * a;
 }
 
 /**
@@ -10109,9 +9654,7 @@ static inline u64 CAVM_NIXX_PRIV_AF_INT_CFG(void)
 	__attribute__ ((pure, always_inline));
 static inline u64 CAVM_NIXX_PRIV_AF_INT_CFG(void)
 {
-	if (CAVIUM_IS_MODEL(CAVIUM_CN9XXX))
-		return 0x8000000;
-	return -1;
+	return 0x8000000;
 }
 
 /**
@@ -10144,9 +9687,7 @@ static inline u64 CAVM_NIXX_PRIV_LFX_CFG(u64 a)
 	__attribute__ ((pure, always_inline));
 static inline u64 CAVM_NIXX_PRIV_LFX_CFG(u64 a)
 {
-	if (CAVIUM_IS_MODEL(CAVIUM_CN9XXX) && (a <= 127))
-		return 0x8000010 + 0x100 * ((a) & 0x7f);
-	return -1;
+	return 0x8000010 + 0x100 * a;
 }
 
 /**
@@ -10169,9 +9710,7 @@ static inline u64 CAVM_NIXX_PRIV_LFX_INT_CFG(u64 a)
 	__attribute__ ((pure, always_inline));
 static inline u64 CAVM_NIXX_PRIV_LFX_INT_CFG(u64 a)
 {
-	if (CAVIUM_IS_MODEL(CAVIUM_CN9XXX) && (a <= 127))
-		return 0x8000020 + 0x100 * ((a) & 0x7f);
-	return -1;
+	return 0x8000020 + 0x100 * a;
 }
 
 #endif /* __CAVM_CSRS_NIX_H__ */
diff --git a/drivers/net/cavium/octeontx2/cavm-csrs-npa.h b/drivers/net/cavium/octeontx2/cavm-csrs-npa.h
index 49d2c40cf9..9d9e1d3ba0 100644
--- a/drivers/net/cavium/octeontx2/cavm-csrs-npa.h
+++ b/drivers/net/cavium/octeontx2/cavm-csrs-npa.h
@@ -380,25 +380,20 @@ union cavm_npa_pool_s {
  *
  * NPA Queue Interrupt Context Hardware Structure
  * This structure contains context state maintained by hardware for each queue
- * interrupt (QINT) in in NDC/LLC/DRAM. Software accesses this structure with the
+ * interrupt (QINT) in NDC/LLC/DRAM. Software accesses this structure with the
  * NPA_LF_QINT()_* registers.
  * Hardware maintains a table of NPA_AF_CONST[QINTS] contiguous NPA_QINT_HW_S
  * structures per LF starting at IOVA NPA_AF_LF()_QINTS_BASE.
  * Always stored in byte invariant little-endian format (LE8).
  */
 union cavm_npa_qint_hw_s {
-	u64 u;
+	u32 u;
 	struct cavm_npa_qint_hw_s_s {
-		u64 count                            : 22;
-		u64 reserved_22_30                   : 9;
-		u64 ena                              : 1;
-		u64 reserved_32_63                   : 32;
+		u32 count                            : 22;
+		u32 reserved_22_30                   : 9;
+		u32 ena                              : 1;
 	} s;
-	struct cavm_npa_qint_hw_s_cn {
-		u64 count                            : 22;
-		u64 reserved_22_30                   : 9;
-		u64 ena                              : 1;
-	} cn;
+	/* struct cavm_npa_qint_hw_s_s cn; */
 };
 
 /**
@@ -418,9 +413,7 @@ static inline u64 CAVM_NPA_AF_ACTIVE_CYCLES_PC(void)
 	__attribute__ ((pure, always_inline));
 static inline u64 CAVM_NPA_AF_ACTIVE_CYCLES_PC(void)
 {
-	if (CAVIUM_IS_MODEL(CAVIUM_CN9XXX))
-		return 0xf0;
-	return -1;
+	return 0xf0;
 }
 
 /**
@@ -442,9 +435,7 @@ static inline u64 CAVM_NPA_AF_AQ_BASE(void)
 	__attribute__ ((pure, always_inline));
 static inline u64 CAVM_NPA_AF_AQ_BASE(void)
 {
-	if (CAVIUM_IS_MODEL(CAVIUM_CN9XXX))
-		return 0x610;
-	return -1;
+	return 0x610;
 }
 
 /**
@@ -465,9 +456,7 @@ static inline u64 CAVM_NPA_AF_AQ_CFG(void)
 	__attribute__ ((pure, always_inline));
 static inline u64 CAVM_NPA_AF_AQ_CFG(void)
 {
-	if (CAVIUM_IS_MODEL(CAVIUM_CN9XXX))
-		return 0x600;
-	return -1;
+	return 0x600;
 }
 
 /**
@@ -488,9 +477,7 @@ static inline u64 CAVM_NPA_AF_AQ_DONE(void)
 	__attribute__ ((pure, always_inline));
 static inline u64 CAVM_NPA_AF_AQ_DONE(void)
 {
-	if (CAVIUM_IS_MODEL(CAVIUM_CN9XXX))
-		return 0x650;
-	return -1;
+	return 0x650;
 }
 
 /**
@@ -512,9 +499,7 @@ static inline u64 CAVM_NPA_AF_AQ_DONE_ACK(void)
 	__attribute__ ((pure, always_inline));
 static inline u64 CAVM_NPA_AF_AQ_DONE_ACK(void)
 {
-	if (CAVIUM_IS_MODEL(CAVIUM_CN9XXX))
-		return 0x660;
-	return -1;
+	return 0x660;
 }
 
 /**
@@ -536,9 +521,7 @@ static inline u64 CAVM_NPA_AF_AQ_DONE_ENA_W1C(void)
 	__attribute__ ((pure, always_inline));
 static inline u64 CAVM_NPA_AF_AQ_DONE_ENA_W1C(void)
 {
-	if (CAVIUM_IS_MODEL(CAVIUM_CN9XXX))
-		return 0x698;
-	return -1;
+	return 0x698;
 }
 
 /**
@@ -560,9 +543,7 @@ static inline u64 CAVM_NPA_AF_AQ_DONE_ENA_W1S(void)
 	__attribute__ ((pure, always_inline));
 static inline u64 CAVM_NPA_AF_AQ_DONE_ENA_W1S(void)
 {
-	if (CAVIUM_IS_MODEL(CAVIUM_CN9XXX))
-		return 0x690;
-	return -1;
+	return 0x690;
 }
 
 /**
@@ -583,9 +564,7 @@ static inline u64 CAVM_NPA_AF_AQ_DONE_INT(void)
 	__attribute__ ((pure, always_inline));
 static inline u64 CAVM_NPA_AF_AQ_DONE_INT(void)
 {
-	if (CAVIUM_IS_MODEL(CAVIUM_CN9XXX))
-		return 0x680;
-	return -1;
+	return 0x680;
 }
 
 /**
@@ -606,9 +585,7 @@ static inline u64 CAVM_NPA_AF_AQ_DONE_INT_W1S(void)
 	__attribute__ ((pure, always_inline));
 static inline u64 CAVM_NPA_AF_AQ_DONE_INT_W1S(void)
 {
-	if (CAVIUM_IS_MODEL(CAVIUM_CN9XXX))
-		return 0x688;
-	return -1;
+	return 0x688;
 }
 
 /**
@@ -630,9 +607,7 @@ static inline u64 CAVM_NPA_AF_AQ_DONE_TIMER(void)
 	__attribute__ ((pure, always_inline));
 static inline u64 CAVM_NPA_AF_AQ_DONE_TIMER(void)
 {
-	if (CAVIUM_IS_MODEL(CAVIUM_CN9XXX))
-		return 0x670;
-	return -1;
+	return 0x670;
 }
 
 /**
@@ -656,9 +631,7 @@ static inline u64 CAVM_NPA_AF_AQ_DONE_WAIT(void)
 	__attribute__ ((pure, always_inline));
 static inline u64 CAVM_NPA_AF_AQ_DONE_WAIT(void)
 {
-	if (CAVIUM_IS_MODEL(CAVIUM_CN9XXX))
-		return 0x640;
-	return -1;
+	return 0x640;
 }
 
 /**
@@ -680,9 +653,7 @@ static inline u64 CAVM_NPA_AF_AQ_DOOR(void)
 	__attribute__ ((pure, always_inline));
 static inline u64 CAVM_NPA_AF_AQ_DOOR(void)
 {
-	if (CAVIUM_IS_MODEL(CAVIUM_CN9XXX))
-		return 0x630;
-	return -1;
+	return 0x630;
 }
 
 /**
@@ -717,9 +688,7 @@ static inline u64 CAVM_NPA_AF_AQ_STATUS(void)
 	__attribute__ ((pure, always_inline));
 static inline u64 CAVM_NPA_AF_AQ_STATUS(void)
 {
-	if (CAVIUM_IS_MODEL(CAVIUM_CN9XXX))
-		return 0x620;
-	return -1;
+	return 0x620;
 }
 
 /**
@@ -743,9 +712,7 @@ static inline u64 CAVM_NPA_AF_AVG_DELAY(void)
 	__attribute__ ((pure, always_inline));
 static inline u64 CAVM_NPA_AF_AVG_DELAY(void)
 {
-	if (CAVIUM_IS_MODEL(CAVIUM_CN9XXX))
-		return 0x100;
-	return -1;
+	return 0x100;
 }
 
 /**
@@ -771,9 +738,7 @@ static inline u64 CAVM_NPA_AF_BAR2_ALIASX(u64 a)
 	__attribute__ ((pure, always_inline));
 static inline u64 CAVM_NPA_AF_BAR2_ALIASX(u64 a)
 {
-	if (CAVIUM_IS_MODEL(CAVIUM_CN9XXX) && (a <= 131071))
-		return 0x9100000 + 8 * ((a) & 0x1ffff);
-	return -1;
+	return 0x9100000 + 8 * a;
 }
 
 /**
@@ -799,9 +764,7 @@ static inline u64 CAVM_NPA_AF_BAR2_SEL(void)
 	__attribute__ ((pure, always_inline));
 static inline u64 CAVM_NPA_AF_BAR2_SEL(void)
 {
-	if (CAVIUM_IS_MODEL(CAVIUM_CN9XXX))
-		return 0x9000000;
-	return -1;
+	return 0x9000000;
 }
 
 /**
@@ -823,9 +786,7 @@ static inline u64 CAVM_NPA_AF_BLK_RST(void)
 	__attribute__ ((pure, always_inline));
 static inline u64 CAVM_NPA_AF_BLK_RST(void)
 {
-	if (CAVIUM_IS_MODEL(CAVIUM_CN9XXX))
-		return 0;
-	return -1;
+	return 0;
 }
 
 /**
@@ -848,9 +809,7 @@ static inline u64 CAVM_NPA_AF_BP_TEST(void)
 	__attribute__ ((pure, always_inline));
 static inline u64 CAVM_NPA_AF_BP_TEST(void)
 {
-	if (CAVIUM_IS_MODEL(CAVIUM_CN9XXX))
-		return 0x200;
-	return -1;
+	return 0x200;
 }
 
 /**
@@ -876,9 +835,7 @@ static inline u64 CAVM_NPA_AF_CONST(void)
 	__attribute__ ((pure, always_inline));
 static inline u64 CAVM_NPA_AF_CONST(void)
 {
-	if (CAVIUM_IS_MODEL(CAVIUM_CN9XXX))
-		return 0x10;
-	return -1;
+	return 0x10;
 }
 
 /**
@@ -902,9 +859,7 @@ static inline u64 CAVM_NPA_AF_CONST1(void)
 	__attribute__ ((pure, always_inline));
 static inline u64 CAVM_NPA_AF_CONST1(void)
 {
-	if (CAVIUM_IS_MODEL(CAVIUM_CN9XXX))
-		return 0x18;
-	return -1;
+	return 0x18;
 }
 
 /**
@@ -927,9 +882,7 @@ static inline u64 CAVM_NPA_AF_DTX_FILTER_CTL(void)
 	__attribute__ ((pure, always_inline));
 static inline u64 CAVM_NPA_AF_DTX_FILTER_CTL(void)
 {
-	if (CAVIUM_IS_MODEL(CAVIUM_CN9XXX))
-		return 0x10040;
-	return -1;
+	return 0x10040;
 }
 
 /**
@@ -950,9 +903,7 @@ static inline u64 CAVM_NPA_AF_ECO(void)
 	__attribute__ ((pure, always_inline));
 static inline u64 CAVM_NPA_AF_ECO(void)
 {
-	if (CAVIUM_IS_MODEL(CAVIUM_CN9XXX))
-		return 0x300;
-	return -1;
+	return 0x300;
 }
 
 /**
@@ -976,9 +927,7 @@ static inline u64 CAVM_NPA_AF_ERR_INT(void)
 	__attribute__ ((pure, always_inline));
 static inline u64 CAVM_NPA_AF_ERR_INT(void)
 {
-	if (CAVIUM_IS_MODEL(CAVIUM_CN9XXX))
-		return 0x180;
-	return -1;
+	return 0x180;
 }
 
 /**
@@ -1003,9 +952,7 @@ static inline u64 CAVM_NPA_AF_ERR_INT_ENA_W1C(void)
 	__attribute__ ((pure, always_inline));
 static inline u64 CAVM_NPA_AF_ERR_INT_ENA_W1C(void)
 {
-	if (CAVIUM_IS_MODEL(CAVIUM_CN9XXX))
-		return 0x198;
-	return -1;
+	return 0x198;
 }
 
 /**
@@ -1030,9 +977,7 @@ static inline u64 CAVM_NPA_AF_ERR_INT_ENA_W1S(void)
 	__attribute__ ((pure, always_inline));
 static inline u64 CAVM_NPA_AF_ERR_INT_ENA_W1S(void)
 {
-	if (CAVIUM_IS_MODEL(CAVIUM_CN9XXX))
-		return 0x190;
-	return -1;
+	return 0x190;
 }
 
 /**
@@ -1057,9 +1002,7 @@ static inline u64 CAVM_NPA_AF_ERR_INT_W1S(void)
 	__attribute__ ((pure, always_inline));
 static inline u64 CAVM_NPA_AF_ERR_INT_W1S(void)
 {
-	if (CAVIUM_IS_MODEL(CAVIUM_CN9XXX))
-		return 0x188;
-	return -1;
+	return 0x188;
 }
 
 /**
@@ -1089,9 +1032,7 @@ static inline u64 CAVM_NPA_AF_GEN_CFG(void)
 	__attribute__ ((pure, always_inline));
 static inline u64 CAVM_NPA_AF_GEN_CFG(void)
 {
-	if (CAVIUM_IS_MODEL(CAVIUM_CN9XXX))
-		return 0x30;
-	return -1;
+	return 0x30;
 }
 
 /**
@@ -1115,9 +1056,7 @@ static inline u64 CAVM_NPA_AF_GEN_INT(void)
 	__attribute__ ((pure, always_inline));
 static inline u64 CAVM_NPA_AF_GEN_INT(void)
 {
-	if (CAVIUM_IS_MODEL(CAVIUM_CN9XXX))
-		return 0x140;
-	return -1;
+	return 0x140;
 }
 
 /**
@@ -1141,9 +1080,7 @@ static inline u64 CAVM_NPA_AF_GEN_INT_ENA_W1C(void)
 	__attribute__ ((pure, always_inline));
 static inline u64 CAVM_NPA_AF_GEN_INT_ENA_W1C(void)
 {
-	if (CAVIUM_IS_MODEL(CAVIUM_CN9XXX))
-		return 0x158;
-	return -1;
+	return 0x158;
 }
 
 /**
@@ -1167,9 +1104,7 @@ static inline u64 CAVM_NPA_AF_GEN_INT_ENA_W1S(void)
 	__attribute__ ((pure, always_inline));
 static inline u64 CAVM_NPA_AF_GEN_INT_ENA_W1S(void)
 {
-	if (CAVIUM_IS_MODEL(CAVIUM_CN9XXX))
-		return 0x150;
-	return -1;
+	return 0x150;
 }
 
 /**
@@ -1193,9 +1128,7 @@ static inline u64 CAVM_NPA_AF_GEN_INT_W1S(void)
 	__attribute__ ((pure, always_inline));
 static inline u64 CAVM_NPA_AF_GEN_INT_W1S(void)
 {
-	if (CAVIUM_IS_MODEL(CAVIUM_CN9XXX))
-		return 0x148;
-	return -1;
+	return 0x148;
 }
 
 /**
@@ -1217,9 +1150,7 @@ static inline u64 CAVM_NPA_AF_INP_CTL(void)
 	__attribute__ ((pure, always_inline));
 static inline u64 CAVM_NPA_AF_INP_CTL(void)
 {
-	if (CAVIUM_IS_MODEL(CAVIUM_CN9XXX))
-		return 0xd0;
-	return -1;
+	return 0xd0;
 }
 
 /**
@@ -1247,9 +1178,7 @@ static inline u64 CAVM_NPA_AF_LFX_AURAS_CFG(u64 a)
 	__attribute__ ((pure, always_inline));
 static inline u64 CAVM_NPA_AF_LFX_AURAS_CFG(u64 a)
 {
-	if (CAVIUM_IS_MODEL(CAVIUM_CN9XXX) && (a <= 127))
-		return 0x4000 + 0x40000 * ((a) & 0x7f);
-	return -1;
+	return 0x4000 + 0x40000 * a;
 }
 
 /**
@@ -1271,9 +1200,7 @@ static inline u64 CAVM_NPA_AF_LFX_LOC_AURAS_BASE(u64 a)
 	__attribute__ ((pure, always_inline));
 static inline u64 CAVM_NPA_AF_LFX_LOC_AURAS_BASE(u64 a)
 {
-	if (CAVIUM_IS_MODEL(CAVIUM_CN9XXX) && (a <= 127))
-		return 0x4010 + 0x40000 * ((a) & 0x7f);
-	return -1;
+	return 0x4010 + 0x40000 * a;
 }
 
 /**
@@ -1295,9 +1222,7 @@ static inline u64 CAVM_NPA_AF_LFX_QINTS_BASE(u64 a)
 	__attribute__ ((pure, always_inline));
 static inline u64 CAVM_NPA_AF_LFX_QINTS_BASE(u64 a)
 {
-	if (CAVIUM_IS_MODEL(CAVIUM_CN9XXX) && (a <= 127))
-		return 0x4110 + 0x40000 * ((a) & 0x7f);
-	return -1;
+	return 0x4110 + 0x40000 * a;
 }
 
 /**
@@ -1324,9 +1249,7 @@ static inline u64 CAVM_NPA_AF_LFX_QINTS_CFG(u64 a)
 	__attribute__ ((pure, always_inline));
 static inline u64 CAVM_NPA_AF_LFX_QINTS_CFG(u64 a)
 {
-	if (CAVIUM_IS_MODEL(CAVIUM_CN9XXX) && (a <= 127))
-		return 0x4100 + 0x40000 * ((a) & 0x7f);
-	return -1;
+	return 0x4100 + 0x40000 * a;
 }
 
 /**
@@ -1349,9 +1272,7 @@ static inline u64 CAVM_NPA_AF_LF_RST(void)
 	__attribute__ ((pure, always_inline));
 static inline u64 CAVM_NPA_AF_LF_RST(void)
 {
-	if (CAVIUM_IS_MODEL(CAVIUM_CN9XXX))
-		return 0x20;
-	return -1;
+	return 0x20;
 }
 
 /**
@@ -1378,9 +1299,7 @@ static inline u64 CAVM_NPA_AF_NDC_CFG(void)
 	__attribute__ ((pure, always_inline));
 static inline u64 CAVM_NPA_AF_NDC_CFG(void)
 {
-	if (CAVIUM_IS_MODEL(CAVIUM_CN9XXX))
-		return 0x40;
-	return -1;
+	return 0x40;
 }
 
 /**
@@ -1404,9 +1323,7 @@ static inline u64 CAVM_NPA_AF_NDC_SYNC(void)
 	__attribute__ ((pure, always_inline));
 static inline u64 CAVM_NPA_AF_NDC_SYNC(void)
 {
-	if (CAVIUM_IS_MODEL(CAVIUM_CN9XXX))
-		return 0x50;
-	return -1;
+	return 0x50;
 }
 
 /**
@@ -1432,9 +1349,7 @@ static inline u64 CAVM_NPA_AF_RAS(void)
 	__attribute__ ((pure, always_inline));
 static inline u64 CAVM_NPA_AF_RAS(void)
 {
-	if (CAVIUM_IS_MODEL(CAVIUM_CN9XXX))
-		return 0x1a0;
-	return -1;
+	return 0x1a0;
 }
 
 /**
@@ -1459,9 +1374,7 @@ static inline u64 CAVM_NPA_AF_RAS_ENA_W1C(void)
 	__attribute__ ((pure, always_inline));
 static inline u64 CAVM_NPA_AF_RAS_ENA_W1C(void)
 {
-	if (CAVIUM_IS_MODEL(CAVIUM_CN9XXX))
-		return 0x1b8;
-	return -1;
+	return 0x1b8;
 }
 
 /**
@@ -1486,9 +1399,7 @@ static inline u64 CAVM_NPA_AF_RAS_ENA_W1S(void)
 	__attribute__ ((pure, always_inline));
 static inline u64 CAVM_NPA_AF_RAS_ENA_W1S(void)
 {
-	if (CAVIUM_IS_MODEL(CAVIUM_CN9XXX))
-		return 0x1b0;
-	return -1;
+	return 0x1b0;
 }
 
 /**
@@ -1513,9 +1424,7 @@ static inline u64 CAVM_NPA_AF_RAS_W1S(void)
 	__attribute__ ((pure, always_inline));
 static inline u64 CAVM_NPA_AF_RAS_W1S(void)
 {
-	if (CAVIUM_IS_MODEL(CAVIUM_CN9XXX))
-		return 0x1a8;
-	return -1;
+	return 0x1a8;
 }
 
 /**
@@ -1537,9 +1446,7 @@ static inline u64 CAVM_NPA_AF_RVU_INT(void)
 	__attribute__ ((pure, always_inline));
 static inline u64 CAVM_NPA_AF_RVU_INT(void)
 {
-	if (CAVIUM_IS_MODEL(CAVIUM_CN9XXX))
-		return 0x160;
-	return -1;
+	return 0x160;
 }
 
 /**
@@ -1561,9 +1468,7 @@ static inline u64 CAVM_NPA_AF_RVU_INT_ENA_W1C(void)
 	__attribute__ ((pure, always_inline));
 static inline u64 CAVM_NPA_AF_RVU_INT_ENA_W1C(void)
 {
-	if (CAVIUM_IS_MODEL(CAVIUM_CN9XXX))
-		return 0x178;
-	return -1;
+	return 0x178;
 }
 
 /**
@@ -1585,9 +1490,7 @@ static inline u64 CAVM_NPA_AF_RVU_INT_ENA_W1S(void)
 	__attribute__ ((pure, always_inline));
 static inline u64 CAVM_NPA_AF_RVU_INT_ENA_W1S(void)
 {
-	if (CAVIUM_IS_MODEL(CAVIUM_CN9XXX))
-		return 0x170;
-	return -1;
+	return 0x170;
 }
 
 /**
@@ -1609,9 +1512,7 @@ static inline u64 CAVM_NPA_AF_RVU_INT_W1S(void)
 	__attribute__ ((pure, always_inline));
 static inline u64 CAVM_NPA_AF_RVU_INT_W1S(void)
 {
-	if (CAVIUM_IS_MODEL(CAVIUM_CN9XXX))
-		return 0x168;
-	return -1;
+	return 0x168;
 }
 
 /**
@@ -1639,9 +1540,7 @@ static inline u64 CAVM_NPA_AF_RVU_LF_CFG_DEBUG(void)
 	__attribute__ ((pure, always_inline));
 static inline u64 CAVM_NPA_AF_RVU_LF_CFG_DEBUG(void)
 {
-	if (CAVIUM_IS_MODEL(CAVIUM_CN9XXX))
-		return 0x10030;
-	return -1;
+	return 0x10030;
 }
 
 /**
@@ -1671,9 +1570,7 @@ static inline u64 CAVM_NPA_LF_AURA_OP_ALLOCX(u64 a)
 	__attribute__ ((pure, always_inline));
 static inline u64 CAVM_NPA_LF_AURA_OP_ALLOCX(u64 a)
 {
-	if (CAVIUM_IS_MODEL(CAVIUM_CN9XXX) && (a <= 1))
-		return 0x10 + 8 * ((a) & 0x1);
-	return -1;
+	return 0x10 + 8 * a;
 }
 
 /**
@@ -1701,17 +1598,15 @@ static inline u64 CAVM_NPA_LF_AURA_OP_CNT(void)
 	__attribute__ ((pure, always_inline));
 static inline u64 CAVM_NPA_LF_AURA_OP_CNT(void)
 {
-	if (CAVIUM_IS_MODEL(CAVIUM_CN9XXX))
-		return 0x30;
-	return -1;
+	return 0x30;
 }
 
 /**
  * Register (RVU_PFVF_BAR2) npa_lf_aura_op_free0
  *
  * NPA LF Aura Free Operation Register 0
- * A 128-bit write to the NPA_LF_AURA_OP_FREE0 and NPA_LF_AURA_OP_FREE1
- * registers frees a pointer into a given aura's pool.
+ * A 128-bit write to NPA_LF_AURA_OP_FREE0 and NPA_LF_AURA_OP_FREE1
+ * frees a pointer into a given aura's pool.
  * All other accesses to these registers (e.g. reads and 64-bit writes) are
  * RAZ/WI.
  *
@@ -1729,9 +1624,7 @@ static inline u64 CAVM_NPA_LF_AURA_OP_FREE0(void)
 	__attribute__ ((pure, always_inline));
 static inline u64 CAVM_NPA_LF_AURA_OP_FREE0(void)
 {
-	if (CAVIUM_IS_MODEL(CAVIUM_CN9XXX))
-		return 0x20;
-	return -1;
+	return 0x20;
 }
 
 /**
@@ -1756,9 +1649,7 @@ static inline u64 CAVM_NPA_LF_AURA_OP_FREE1(void)
 	__attribute__ ((pure, always_inline));
 static inline u64 CAVM_NPA_LF_AURA_OP_FREE1(void)
 {
-	if (CAVIUM_IS_MODEL(CAVIUM_CN9XXX))
-		return 0x28;
-	return -1;
+	return 0x28;
 }
 
 /**
@@ -1790,9 +1681,7 @@ static inline u64 CAVM_NPA_LF_AURA_OP_INT(void)
 	__attribute__ ((pure, always_inline));
 static inline u64 CAVM_NPA_LF_AURA_OP_INT(void)
 {
-	if (CAVIUM_IS_MODEL(CAVIUM_CN9XXX))
-		return 0x60;
-	return -1;
+	return 0x60;
 }
 
 /**
@@ -1820,9 +1709,7 @@ static inline u64 CAVM_NPA_LF_AURA_OP_LIMIT(void)
 	__attribute__ ((pure, always_inline));
 static inline u64 CAVM_NPA_LF_AURA_OP_LIMIT(void)
 {
-	if (CAVIUM_IS_MODEL(CAVIUM_CN9XXX))
-		return 0x50;
-	return -1;
+	return 0x50;
 }
 
 /**
@@ -1852,9 +1739,7 @@ static inline u64 CAVM_NPA_LF_AURA_OP_THRESH(void)
 	__attribute__ ((pure, always_inline));
 static inline u64 CAVM_NPA_LF_AURA_OP_THRESH(void)
 {
-	if (CAVIUM_IS_MODEL(CAVIUM_CN9XXX))
-		return 0x70;
-	return -1;
+	return 0x70;
 }
 
 /**
@@ -1883,9 +1768,7 @@ static inline u64 CAVM_NPA_LF_ERR_INT(void)
 	__attribute__ ((pure, always_inline));
 static inline u64 CAVM_NPA_LF_ERR_INT(void)
 {
-	if (CAVIUM_IS_MODEL(CAVIUM_CN9XXX))
-		return 0x200;
-	return -1;
+	return 0x200;
 }
 
 /**
@@ -1915,9 +1798,7 @@ static inline u64 CAVM_NPA_LF_ERR_INT_ENA_W1C(void)
 	__attribute__ ((pure, always_inline));
 static inline u64 CAVM_NPA_LF_ERR_INT_ENA_W1C(void)
 {
-	if (CAVIUM_IS_MODEL(CAVIUM_CN9XXX))
-		return 0x210;
-	return -1;
+	return 0x210;
 }
 
 /**
@@ -1947,9 +1828,7 @@ static inline u64 CAVM_NPA_LF_ERR_INT_ENA_W1S(void)
 	__attribute__ ((pure, always_inline));
 static inline u64 CAVM_NPA_LF_ERR_INT_ENA_W1S(void)
 {
-	if (CAVIUM_IS_MODEL(CAVIUM_CN9XXX))
-		return 0x218;
-	return -1;
+	return 0x218;
 }
 
 /**
@@ -1979,9 +1858,7 @@ static inline u64 CAVM_NPA_LF_ERR_INT_W1S(void)
 	__attribute__ ((pure, always_inline));
 static inline u64 CAVM_NPA_LF_ERR_INT_W1S(void)
 {
-	if (CAVIUM_IS_MODEL(CAVIUM_CN9XXX))
-		return 0x208;
-	return -1;
+	return 0x208;
 }
 
 /**
@@ -2009,9 +1886,7 @@ static inline u64 CAVM_NPA_LF_POOL_OP_AVAILABLE(void)
 	__attribute__ ((pure, always_inline));
 static inline u64 CAVM_NPA_LF_POOL_OP_AVAILABLE(void)
 {
-	if (CAVIUM_IS_MODEL(CAVIUM_CN9XXX))
-		return 0x110;
-	return -1;
+	return 0x110;
 }
 
 /**
@@ -2043,9 +1918,7 @@ static inline u64 CAVM_NPA_LF_POOL_OP_INT(void)
 	__attribute__ ((pure, always_inline));
 static inline u64 CAVM_NPA_LF_POOL_OP_INT(void)
 {
-	if (CAVIUM_IS_MODEL(CAVIUM_CN9XXX))
-		return 0x160;
-	return -1;
+	return 0x160;
 }
 
 /**
@@ -2053,7 +1926,7 @@ static inline u64 CAVM_NPA_LF_POOL_OP_INT(void)
  *
  * NPA LF Pool Performance Count Register
  * A 64-bit atomic load-and-add to this register reads NPA_POOL_S[OP_PC] from a
- * given aura's pool. The aura is slected by the atomic write data, whose format
+ * given aura's pool. The aura is selected by the atomic write data, whose format
  * is NPA_AURA_OP_WDATA_S. Reads and writes are RAZ/WI.
  *
  * RSL accesses to this register are RAZ/WI.
@@ -2072,9 +1945,7 @@ static inline u64 CAVM_NPA_LF_POOL_OP_PC(void)
 	__attribute__ ((pure, always_inline));
 static inline u64 CAVM_NPA_LF_POOL_OP_PC(void)
 {
-	if (CAVIUM_IS_MODEL(CAVIUM_CN9XXX))
-		return 0x100;
-	return -1;
+	return 0x100;
 }
 
 /**
@@ -2100,9 +1971,7 @@ static inline u64 CAVM_NPA_LF_POOL_OP_PTR_END0(void)
 	__attribute__ ((pure, always_inline));
 static inline u64 CAVM_NPA_LF_POOL_OP_PTR_END0(void)
 {
-	if (CAVIUM_IS_MODEL(CAVIUM_CN9XXX))
-		return 0x130;
-	return -1;
+	return 0x130;
 }
 
 /**
@@ -2126,9 +1995,7 @@ static inline u64 CAVM_NPA_LF_POOL_OP_PTR_END1(void)
 	__attribute__ ((pure, always_inline));
 static inline u64 CAVM_NPA_LF_POOL_OP_PTR_END1(void)
 {
-	if (CAVIUM_IS_MODEL(CAVIUM_CN9XXX))
-		return 0x138;
-	return -1;
+	return 0x138;
 }
 
 /**
@@ -2154,9 +2021,7 @@ static inline u64 CAVM_NPA_LF_POOL_OP_PTR_START0(void)
 	__attribute__ ((pure, always_inline));
 static inline u64 CAVM_NPA_LF_POOL_OP_PTR_START0(void)
 {
-	if (CAVIUM_IS_MODEL(CAVIUM_CN9XXX))
-		return 0x120;
-	return -1;
+	return 0x120;
 }
 
 /**
@@ -2180,9 +2045,7 @@ static inline u64 CAVM_NPA_LF_POOL_OP_PTR_START1(void)
 	__attribute__ ((pure, always_inline));
 static inline u64 CAVM_NPA_LF_POOL_OP_PTR_START1(void)
 {
-	if (CAVIUM_IS_MODEL(CAVIUM_CN9XXX))
-		return 0x128;
-	return -1;
+	return 0x128;
 }
 
 /**
@@ -2211,9 +2074,7 @@ static inline u64 CAVM_NPA_LF_POOL_OP_THRESH(void)
 	__attribute__ ((pure, always_inline));
 static inline u64 CAVM_NPA_LF_POOL_OP_THRESH(void)
 {
-	if (CAVIUM_IS_MODEL(CAVIUM_CN9XXX))
-		return 0x170;
-	return -1;
+	return 0x170;
 }
 
 /**
@@ -2234,9 +2095,7 @@ static inline u64 CAVM_NPA_LF_QINTX_CNT(u64 a)
 	__attribute__ ((pure, always_inline));
 static inline u64 CAVM_NPA_LF_QINTX_CNT(u64 a)
 {
-	if (CAVIUM_IS_MODEL(CAVIUM_CN9XXX) && (a <= 63))
-		return 0x300 + 0x1000 * ((a) & 0x3f);
-	return -1;
+	return 0x300 + 0x1000 * a;
 }
 
 /**
@@ -2258,9 +2117,7 @@ static inline u64 CAVM_NPA_LF_QINTX_ENA_W1C(u64 a)
 	__attribute__ ((pure, always_inline));
 static inline u64 CAVM_NPA_LF_QINTX_ENA_W1C(u64 a)
 {
-	if (CAVIUM_IS_MODEL(CAVIUM_CN9XXX) && (a <= 63))
-		return 0x330 + 0x1000 * ((a) & 0x3f);
-	return -1;
+	return 0x330 + 0x1000 * a;
 }
 
 /**
@@ -2282,9 +2139,7 @@ static inline u64 CAVM_NPA_LF_QINTX_ENA_W1S(u64 a)
 	__attribute__ ((pure, always_inline));
 static inline u64 CAVM_NPA_LF_QINTX_ENA_W1S(u64 a)
 {
-	if (CAVIUM_IS_MODEL(CAVIUM_CN9XXX) && (a <= 63))
-		return 0x320 + 0x1000 * ((a) & 0x3f);
-	return -1;
+	return 0x320 + 0x1000 * a;
 }
 
 /**
@@ -2305,9 +2160,7 @@ static inline u64 CAVM_NPA_LF_QINTX_INT(u64 a)
 	__attribute__ ((pure, always_inline));
 static inline u64 CAVM_NPA_LF_QINTX_INT(u64 a)
 {
-	if (CAVIUM_IS_MODEL(CAVIUM_CN9XXX) && (a <= 63))
-		return 0x310 + 0x1000 * ((a) & 0x3f);
-	return -1;
+	return 0x310 + 0x1000 * a;
 }
 
 /**
@@ -2328,9 +2181,7 @@ static inline u64 CAVM_NPA_LF_QINTX_INT_W1S(u64 a)
 	__attribute__ ((pure, always_inline));
 static inline u64 CAVM_NPA_LF_QINTX_INT_W1S(u64 a)
 {
-	if (CAVIUM_IS_MODEL(CAVIUM_CN9XXX) && (a <= 63))
-		return 0x318 + 0x1000 * ((a) & 0x3f);
-	return -1;
+	return 0x318 + 0x1000 * a;
 }
 
 /**
@@ -2354,9 +2205,7 @@ static inline u64 CAVM_NPA_LF_RAS(void)
 	__attribute__ ((pure, always_inline));
 static inline u64 CAVM_NPA_LF_RAS(void)
 {
-	if (CAVIUM_IS_MODEL(CAVIUM_CN9XXX))
-		return 0x220;
-	return -1;
+	return 0x220;
 }
 
 /**
@@ -2381,9 +2230,7 @@ static inline u64 CAVM_NPA_LF_RAS_ENA_W1C(void)
 	__attribute__ ((pure, always_inline));
 static inline u64 CAVM_NPA_LF_RAS_ENA_W1C(void)
 {
-	if (CAVIUM_IS_MODEL(CAVIUM_CN9XXX))
-		return 0x230;
-	return -1;
+	return 0x230;
 }
 
 /**
@@ -2408,9 +2255,7 @@ static inline u64 CAVM_NPA_LF_RAS_ENA_W1S(void)
 	__attribute__ ((pure, always_inline));
 static inline u64 CAVM_NPA_LF_RAS_ENA_W1S(void)
 {
-	if (CAVIUM_IS_MODEL(CAVIUM_CN9XXX))
-		return 0x238;
-	return -1;
+	return 0x238;
 }
 
 /**
@@ -2435,9 +2280,7 @@ static inline u64 CAVM_NPA_LF_RAS_W1S(void)
 	__attribute__ ((pure, always_inline));
 static inline u64 CAVM_NPA_LF_RAS_W1S(void)
 {
-	if (CAVIUM_IS_MODEL(CAVIUM_CN9XXX))
-		return 0x228;
-	return -1;
+	return 0x228;
 }
 
 /**
@@ -2460,9 +2303,7 @@ static inline u64 CAVM_NPA_PRIV_AF_INT_CFG(void)
 	__attribute__ ((pure, always_inline));
 static inline u64 CAVM_NPA_PRIV_AF_INT_CFG(void)
 {
-	if (CAVIUM_IS_MODEL(CAVIUM_CN9XXX))
-		return 0x10000;
-	return -1;
+	return 0x10000;
 }
 
 /**
@@ -2495,9 +2336,7 @@ static inline u64 CAVM_NPA_PRIV_LFX_CFG(u64 a)
 	__attribute__ ((pure, always_inline));
 static inline u64 CAVM_NPA_PRIV_LFX_CFG(u64 a)
 {
-	if (CAVIUM_IS_MODEL(CAVIUM_CN9XXX) && (a <= 127))
-		return 0x10010 + 0x100 * ((a) & 0x7f);
-	return -1;
+	return 0x10010 + 0x100 * a;
 }
 
 /**
@@ -2520,9 +2359,7 @@ static inline u64 CAVM_NPA_PRIV_LFX_INT_CFG(u64 a)
 	__attribute__ ((pure, always_inline));
 static inline u64 CAVM_NPA_PRIV_LFX_INT_CFG(u64 a)
 {
-	if (CAVIUM_IS_MODEL(CAVIUM_CN9XXX) && (a <= 127))
-		return 0x10020 + 0x100 * ((a) & 0x7f);
-	return -1;
+	return 0x10020 + 0x100 * a;
 }
 
 #endif /* __CAVM_CSRS_NPA_H__ */
diff --git a/drivers/net/cavium/octeontx2/cavm-csrs-npc.h b/drivers/net/cavium/octeontx2/cavm-csrs-npc.h
index 70586ead9b..254da30474 100644
--- a/drivers/net/cavium/octeontx2/cavm-csrs-npc.h
+++ b/drivers/net/cavium/octeontx2/cavm-csrs-npc.h
@@ -294,9 +294,7 @@ static inline u64 CAVM_NPC_AF_ACTIVE_PC(void)
 	__attribute__ ((pure, always_inline));
 static inline u64 CAVM_NPC_AF_ACTIVE_PC(void)
 {
-	if (CAVIUM_IS_MODEL(CAVIUM_CN9XXX))
-		return 0x10;
-	return -1;
+	return 0x10;
 }
 
 /**
@@ -318,9 +316,7 @@ static inline u64 CAVM_NPC_AF_BLK_RST(void)
 	__attribute__ ((pure, always_inline));
 static inline u64 CAVM_NPC_AF_BLK_RST(void)
 {
-	if (CAVIUM_IS_MODEL(CAVIUM_CN9XXX))
-		return 0x40;
-	return -1;
+	return 0x40;
 }
 
 /**
@@ -343,9 +339,7 @@ static inline u64 CAVM_NPC_AF_CFG(void)
 	__attribute__ ((pure, always_inline));
 static inline u64 CAVM_NPC_AF_CFG(void)
 {
-	if (CAVIUM_IS_MODEL(CAVIUM_CN9XXX))
-		return 0;
-	return -1;
+	return 0;
 }
 
 /**
@@ -374,9 +368,7 @@ static inline u64 CAVM_NPC_AF_CONST(void)
 	__attribute__ ((pure, always_inline));
 static inline u64 CAVM_NPC_AF_CONST(void)
 {
-	if (CAVIUM_IS_MODEL(CAVIUM_CN9XXX))
-		return 0x20;
-	return -1;
+	return 0x20;
 }
 
 /**
@@ -400,9 +392,7 @@ static inline u64 CAVM_NPC_AF_CONST1(void)
 	__attribute__ ((pure, always_inline));
 static inline u64 CAVM_NPC_AF_CONST1(void)
 {
-	if (CAVIUM_IS_MODEL(CAVIUM_CN9XXX))
-		return 0x30;
-	return -1;
+	return 0x30;
 }
 
 /**
@@ -423,9 +413,7 @@ static inline u64 CAVM_NPC_AF_CPIX_CFG(u64 a)
 	__attribute__ ((pure, always_inline));
 static inline u64 CAVM_NPC_AF_CPIX_CFG(u64 a)
 {
-	if (CAVIUM_IS_MODEL(CAVIUM_CN9XXX) && (a <= 1023))
-		return 0x200000 + 8 * ((a) & 0x3ff);
-	return -1;
+	return 0x200000 + 8 * a;
 }
 
 /**
@@ -450,16 +438,14 @@ static inline u64 CAVM_NPC_AF_DBG_CTL(void)
 	__attribute__ ((pure, always_inline));
 static inline u64 CAVM_NPC_AF_DBG_CTL(void)
 {
-	if (CAVIUM_IS_MODEL(CAVIUM_CN9XXX))
-		return 0x3000000;
-	return -1;
+	return 0x3000000;
 }
 
 /**
  * Register (RVU_PF_BAR0) npc_af_dbg_data#
  *
  * NPC AF Debug Data Registers
- * This register contains packet header data for the last packet/lookup  for which
+ * This register contains packet header data for the last packet/lookup whose
  * debug information is captured by NPC_AF_DBG_CTL[INTF_DBG,LKUP_DBG].
  */
 union cavm_npc_af_dbg_datax {
@@ -474,9 +460,7 @@ static inline u64 CAVM_NPC_AF_DBG_DATAX(u64 a)
 	__attribute__ ((pure, always_inline));
 static inline u64 CAVM_NPC_AF_DBG_DATAX(u64 a)
 {
-	if (CAVIUM_IS_MODEL(CAVIUM_CN9XXX) && (a <= 31))
-		return 0x3001400 + 0x10 * ((a) & 0x1f);
-	return -1;
+	return 0x3001400 + 0x10 * a;
 }
 
 /**
@@ -499,17 +483,13 @@ static inline u64 CAVM_NPC_AF_DBG_RESULTX(u64 a)
 	__attribute__ ((pure, always_inline));
 static inline u64 CAVM_NPC_AF_DBG_RESULTX(u64 a)
 {
-	if (CAVIUM_IS_MODEL(CAVIUM_CN9XXX) && (a <= 5))
-		return 0x3001800 + 0x10 * ((a) & 0x7);
-	return -1;
+	return 0x3001800 + 0x10 * a;
 }
 
 /**
  * Register (RVU_PF_BAR0) npc_af_dbg_status
  *
  * NPC AF Debug Status Register
- * This register controls the capture of debug information in NPC_AF_KPU()_DBG,
- * NPC_AF_MCAM_DBG, NPC_AF_LKUP_DATA() and NPC_AF_LKUP_RESULT().
  */
 union cavm_npc_af_dbg_status {
 	u64 u;
@@ -524,9 +504,7 @@ static inline u64 CAVM_NPC_AF_DBG_STATUS(void)
 	__attribute__ ((pure, always_inline));
 static inline u64 CAVM_NPC_AF_DBG_STATUS(void)
 {
-	if (CAVIUM_IS_MODEL(CAVIUM_CN9XXX))
-		return 0x3000010;
-	return -1;
+	return 0x3000010;
 }
 
 /**
@@ -549,9 +527,7 @@ static inline u64 CAVM_NPC_AF_DV_FC_SCRATCH(void)
 	__attribute__ ((pure, always_inline));
 static inline u64 CAVM_NPC_AF_DV_FC_SCRATCH(void)
 {
-	if (CAVIUM_IS_MODEL(CAVIUM_CN9XXX))
-		return 0x60;
-	return -1;
+	return 0x60;
 }
 
 /**
@@ -572,9 +548,7 @@ static inline u64 CAVM_NPC_AF_ECO0(void)
 	__attribute__ ((pure, always_inline));
 static inline u64 CAVM_NPC_AF_ECO0(void)
 {
-	if (CAVIUM_IS_MODEL(CAVIUM_CN9XXX))
-		return 0x200;
-	return -1;
+	return 0x200;
 }
 
 /**
@@ -602,9 +576,7 @@ static inline u64 CAVM_NPC_AF_IKPU_ERR_CTL(void)
 	__attribute__ ((pure, always_inline));
 static inline u64 CAVM_NPC_AF_IKPU_ERR_CTL(void)
 {
-	if (CAVIUM_IS_MODEL(CAVIUM_CN9XXX))
-		return 0x3000080;
-	return -1;
+	return 0x3000080;
 }
 
 /**
@@ -627,9 +599,7 @@ static inline u64 CAVM_NPC_AF_INTFX_KEX_CFG(u64 a)
 	__attribute__ ((pure, always_inline));
 static inline u64 CAVM_NPC_AF_INTFX_KEX_CFG(u64 a)
 {
-	if (CAVIUM_IS_MODEL(CAVIUM_CN9XXX) && (a <= 1))
-		return 0x1010 + 0x100 * ((a) & 0x1);
-	return -1;
+	return 0x1010 + 0x100 * a;
 }
 
 /**
@@ -656,9 +626,7 @@ static inline u64 CAVM_NPC_AF_INTFX_LDATAX_FLAGSX_CFG(u64 a, u64 b, u64 c)
 	__attribute__ ((pure, always_inline));
 static inline u64 CAVM_NPC_AF_INTFX_LDATAX_FLAGSX_CFG(u64 a, u64 b, u64 c)
 {
-	if (CAVIUM_IS_MODEL(CAVIUM_CN9XXX) && ((a <= 1) && (b <= 1) && (c <= 15)))
-		return 0x980000 + 0x10000 * ((a) & 0x1) + 0x1000 * ((b) & 0x1) + 8 * ((c) & 0xf);
-	return -1;
+	return 0x980000 + 0x10000 * a + 0x1000 * b + 8 * c;
 }
 
 /**
@@ -692,9 +660,7 @@ static inline u64 CAVM_NPC_AF_INTFX_LIDX_LTX_LDX_CFG(u64 a, u64 b, u64 c, u64 d)
 	__attribute__ ((pure, always_inline));
 static inline u64 CAVM_NPC_AF_INTFX_LIDX_LTX_LDX_CFG(u64 a, u64 b, u64 c, u64 d)
 {
-	if (CAVIUM_IS_MODEL(CAVIUM_CN9XXX) && ((a <= 1) && (b <= 7) && (c <= 15) && (d <= 1)))
-		return 0x900000 + 0x10000 * ((a) & 0x1) + 0x1000 * ((b) & 0x7) + 0x20 * ((c) & 0xf) + 8 * ((d) & 0x1);
-	return -1;
+	return 0x900000 + 0x10000 * a + 0x1000 * b + 0x20 * c + 8 * d;
 }
 
 /**
@@ -717,9 +683,7 @@ static inline u64 CAVM_NPC_AF_INTFX_MISS_ACT(u64 a)
 	__attribute__ ((pure, always_inline));
 static inline u64 CAVM_NPC_AF_INTFX_MISS_ACT(u64 a)
 {
-	if (CAVIUM_IS_MODEL(CAVIUM_CN9XXX) && (a <= 1))
-		return 0x1a00000 + 0x10 * ((a) & 0x1);
-	return -1;
+	return 0x1a00000 + 0x10 * a;
 }
 
 /**
@@ -743,9 +707,7 @@ static inline u64 CAVM_NPC_AF_INTFX_MISS_STAT_ACT(u64 a)
 	__attribute__ ((pure, always_inline));
 static inline u64 CAVM_NPC_AF_INTFX_MISS_STAT_ACT(u64 a)
 {
-	if (CAVIUM_IS_MODEL(CAVIUM_CN9XXX) && (a <= 1))
-		return 0x1880040 + 8 * ((a) & 0x1);
-	return -1;
+	return 0x1880040 + 8 * a;
 }
 
 /**
@@ -769,9 +731,7 @@ static inline u64 CAVM_NPC_AF_INTFX_MISS_TAG_ACT(u64 a)
 	__attribute__ ((pure, always_inline));
 static inline u64 CAVM_NPC_AF_INTFX_MISS_TAG_ACT(u64 a)
 {
-	if (CAVIUM_IS_MODEL(CAVIUM_CN9XXX) && (a <= 1))
-		return 0x1b00008 + 0x10 * ((a) & 0x1);
-	return -1;
+	return 0x1b00008 + 0x10 * a;
 }
 
 /**
@@ -793,9 +753,7 @@ static inline u64 CAVM_NPC_AF_INTFX_STAT(u64 a)
 	__attribute__ ((pure, always_inline));
 static inline u64 CAVM_NPC_AF_INTFX_STAT(u64 a)
 {
-	if (CAVIUM_IS_MODEL(CAVIUM_CN9XXX) && (a <= 1))
-		return 0x2000800 + 0x10 * ((a) & 0x1);
-	return -1;
+	return 0x2000800 + 0x10 * a;
 }
 
 /**
@@ -820,9 +778,7 @@ static inline u64 CAVM_NPC_AF_KCAM_SCRUB_CTL(void)
 	__attribute__ ((pure, always_inline));
 static inline u64 CAVM_NPC_AF_KCAM_SCRUB_CTL(void)
 {
-	if (CAVIUM_IS_MODEL(CAVIUM_CN9XXX))
-		return 0xb0;
-	return -1;
+	return 0xb0;
 }
 
 /**
@@ -843,9 +799,7 @@ static inline u64 CAVM_NPC_AF_KEX_LDATAX_FLAGS_CFG(u64 a)
 	__attribute__ ((pure, always_inline));
 static inline u64 CAVM_NPC_AF_KEX_LDATAX_FLAGS_CFG(u64 a)
 {
-	if (CAVIUM_IS_MODEL(CAVIUM_CN9XXX) && (a <= 1))
-		return 0x800 + 8 * ((a) & 0x1);
-	return -1;
+	return 0x800 + 8 * a;
 }
 
 /**
@@ -866,9 +820,7 @@ static inline u64 CAVM_NPC_AF_KPUX_CFG(u64 a)
 	__attribute__ ((pure, always_inline));
 static inline u64 CAVM_NPC_AF_KPUX_CFG(u64 a)
 {
-	if (CAVIUM_IS_MODEL(CAVIUM_CN9XXX) && (a <= 15))
-		return 0x500 + 8 * ((a) & 0xf);
-	return -1;
+	return 0x500 + 8 * a;
 }
 
 /**
@@ -892,9 +844,7 @@ static inline u64 CAVM_NPC_AF_KPUX_DBG(u64 a)
 	__attribute__ ((pure, always_inline));
 static inline u64 CAVM_NPC_AF_KPUX_DBG(u64 a)
 {
-	if (CAVIUM_IS_MODEL(CAVIUM_CN9XXX) && (a <= 15))
-		return 0x3000020 + 0x100 * ((a) & 0xf);
-	return -1;
+	return 0x3000020 + 0x100 * a;
 }
 
 /**
@@ -931,9 +881,7 @@ static inline u64 CAVM_NPC_AF_KPUX_ENTRYX_ACTION0(u64 a, u64 b)
 	__attribute__ ((pure, always_inline));
 static inline u64 CAVM_NPC_AF_KPUX_ENTRYX_ACTION0(u64 a, u64 b)
 {
-	if (CAVIUM_IS_MODEL(CAVIUM_CN9XXX) && ((a <= 15) && (b <= 127)))
-		return 0x100020 + 0x4000 * ((a) & 0xf) + 0x40 * ((b) & 0x7f);
-	return -1;
+	return 0x100020 + 0x4000 * a + 0x40 * b;
 }
 
 /**
@@ -959,9 +907,7 @@ static inline u64 CAVM_NPC_AF_KPUX_ENTRYX_ACTION1(u64 a, u64 b)
 	__attribute__ ((pure, always_inline));
 static inline u64 CAVM_NPC_AF_KPUX_ENTRYX_ACTION1(u64 a, u64 b)
 {
-	if (CAVIUM_IS_MODEL(CAVIUM_CN9XXX) && ((a <= 15) && (b <= 127)))
-		return 0x100028 + 0x4000 * ((a) & 0xf) + 0x40 * ((b) & 0x7f);
-	return -1;
+	return 0x100028 + 0x4000 * a + 0x40 * b;
 }
 
 /**
@@ -999,9 +945,7 @@ static inline u64 CAVM_NPC_AF_KPUX_ENTRYX_CAMX(u64 a, u64 b, u64 c)
 	__attribute__ ((pure, always_inline));
 static inline u64 CAVM_NPC_AF_KPUX_ENTRYX_CAMX(u64 a, u64 b, u64 c)
 {
-	if (CAVIUM_IS_MODEL(CAVIUM_CN9XXX) && ((a <= 15) && (b <= 127) && (c <= 1)))
-		return 0x100000 + 0x4000 * ((a) & 0xf) + 0x40 * ((b) & 0x7f) + 8 * ((c) & 0x1);
-	return -1;
+	return 0x100000 + 0x4000 * a + 0x40 * b + 8 * c;
 }
 
 /**
@@ -1022,9 +966,7 @@ static inline u64 CAVM_NPC_AF_KPUX_ENTRY_DISX(u64 a, u64 b)
 	__attribute__ ((pure, always_inline));
 static inline u64 CAVM_NPC_AF_KPUX_ENTRY_DISX(u64 a, u64 b)
 {
-	if (CAVIUM_IS_MODEL(CAVIUM_CN9XXX) && ((a <= 15) && (b <= 1)))
-		return 0x180000 + 0x40 * ((a) & 0xf) + 8 * ((b) & 0x1);
-	return -1;
+	return 0x180000 + 0x40 * a + 8 * b;
 }
 
 /**
@@ -1050,9 +992,7 @@ static inline u64 CAVM_NPC_AF_KPUX_ERR_CTL(u64 a)
 	__attribute__ ((pure, always_inline));
 static inline u64 CAVM_NPC_AF_KPUX_ERR_CTL(u64 a)
 {
-	if (CAVIUM_IS_MODEL(CAVIUM_CN9XXX) && (a <= 15))
-		return 0x30000a0 + 0x100 * ((a) & 0xf);
-	return -1;
+	return 0x30000a0 + 0x100 * a;
 }
 
 /**
@@ -1078,9 +1018,7 @@ static inline u64 CAVM_NPC_AF_LKUP_CTL(void)
 	__attribute__ ((pure, always_inline));
 static inline u64 CAVM_NPC_AF_LKUP_CTL(void)
 {
-	if (CAVIUM_IS_MODEL(CAVIUM_CN9XXX))
-		return 0x2000000;
-	return -1;
+	return 0x2000000;
 }
 
 /**
@@ -1100,9 +1038,7 @@ static inline u64 CAVM_NPC_AF_LKUP_DATAX(u64 a)
 	__attribute__ ((pure, always_inline));
 static inline u64 CAVM_NPC_AF_LKUP_DATAX(u64 a)
 {
-	if (CAVIUM_IS_MODEL(CAVIUM_CN9XXX) && (a <= 31))
-		return 0x2000200 + 0x10 * ((a) & 0x1f);
-	return -1;
+	return 0x2000200 + 0x10 * a;
 }
 
 /**
@@ -1122,9 +1058,7 @@ static inline u64 CAVM_NPC_AF_LKUP_RESULTX(u64 a)
 	__attribute__ ((pure, always_inline));
 static inline u64 CAVM_NPC_AF_LKUP_RESULTX(u64 a)
 {
-	if (CAVIUM_IS_MODEL(CAVIUM_CN9XXX) && (a <= 5))
-		return 0x2000400 + 0x10 * ((a) & 0x7);
-	return -1;
+	return 0x2000400 + 0x10 * a;
 }
 
 /**
@@ -1145,9 +1079,7 @@ static inline u64 CAVM_NPC_AF_MATCH_STATX(u64 a)
 	__attribute__ ((pure, always_inline));
 static inline u64 CAVM_NPC_AF_MATCH_STATX(u64 a)
 {
-	if (CAVIUM_IS_MODEL(CAVIUM_CN9XXX) && (a <= 511))
-		return 0x1880008 + 0x100 * ((a) & 0x1ff);
-	return -1;
+	return 0x1880008 + 0x100 * a;
 }
 
 /**
@@ -1167,9 +1099,7 @@ static inline u64 CAVM_NPC_AF_MCAM_BANKX_HITX(u64 a, u64 b)
 	__attribute__ ((pure, always_inline));
 static inline u64 CAVM_NPC_AF_MCAM_BANKX_HITX(u64 a, u64 b)
 {
-	if (CAVIUM_IS_MODEL(CAVIUM_CN9XXX) && ((a <= 3) && (b <= 15)))
-		return 0x1c80000 + 0x100 * ((a) & 0x3) + 0x10 * ((b) & 0xf);
-	return -1;
+	return 0x1c80000 + 0x100 * a + 0x10 * b;
 }
 
 /**
@@ -1196,9 +1126,7 @@ static inline u64 CAVM_NPC_AF_MCAM_DBG(void)
 	__attribute__ ((pure, always_inline));
 static inline u64 CAVM_NPC_AF_MCAM_DBG(void)
 {
-	if (CAVIUM_IS_MODEL(CAVIUM_CN9XXX))
-		return 0x3001000;
-	return -1;
+	return 0x3001000;
 }
 
 /**
@@ -1223,9 +1151,7 @@ static inline u64 CAVM_NPC_AF_MCAM_SCRUB_CTL(void)
 	__attribute__ ((pure, always_inline));
 static inline u64 CAVM_NPC_AF_MCAM_SCRUB_CTL(void)
 {
-	if (CAVIUM_IS_MODEL(CAVIUM_CN9XXX))
-		return 0xa0;
-	return -1;
+	return 0xa0;
 }
 
 /**
@@ -1260,9 +1186,7 @@ static inline u64 CAVM_NPC_AF_MCAMEX_BANKX_ACTION(u64 a, u64 b)
 	__attribute__ ((pure, always_inline));
 static inline u64 CAVM_NPC_AF_MCAMEX_BANKX_ACTION(u64 a, u64 b)
 {
-	if (CAVIUM_IS_MODEL(CAVIUM_CN9XXX) && ((a <= 1023) && (b <= 3)))
-		return 0x1900000 + 0x100 * ((a) & 0x3ff) + 0x10 * ((b) & 0x3);
-	return -1;
+	return 0x1900000 + 0x100 * a + 0x10 * b;
 }
 
 /**
@@ -1345,9 +1269,7 @@ static inline u64 CAVM_NPC_AF_MCAMEX_BANKX_CAMX_INTF(u64 a, u64 b, u64 c)
 	__attribute__ ((pure, always_inline));
 static inline u64 CAVM_NPC_AF_MCAMEX_BANKX_CAMX_INTF(u64 a, u64 b, u64 c)
 {
-	if (CAVIUM_IS_MODEL(CAVIUM_CN9XXX) && ((a <= 1023) && (b <= 3) && (c <= 1)))
-		return 0x1000000 + 0x400 * ((a) & 0x3ff) + 0x40 * ((b) & 0x3) + 8 * ((c) & 0x1);
-	return -1;
+	return 0x1000000 + 0x400 * a + 0x40 * b + 8 * c;
 }
 
 /**
@@ -1368,9 +1290,7 @@ static inline u64 CAVM_NPC_AF_MCAMEX_BANKX_CAMX_W0(u64 a, u64 b, u64 c)
 	__attribute__ ((pure, always_inline));
 static inline u64 CAVM_NPC_AF_MCAMEX_BANKX_CAMX_W0(u64 a, u64 b, u64 c)
 {
-	if (CAVIUM_IS_MODEL(CAVIUM_CN9XXX) && ((a <= 1023) && (b <= 3) && (c <= 1)))
-		return 0x1000010 + 0x400 * ((a) & 0x3ff) + 0x40 * ((b) & 0x3) + 8 * ((c) & 0x1);
-	return -1;
+	return 0x1000010 + 0x400 * a + 0x40 * b + 8 * c;
 }
 
 /**
@@ -1392,9 +1312,7 @@ static inline u64 CAVM_NPC_AF_MCAMEX_BANKX_CAMX_W1(u64 a, u64 b, u64 c)
 	__attribute__ ((pure, always_inline));
 static inline u64 CAVM_NPC_AF_MCAMEX_BANKX_CAMX_W1(u64 a, u64 b, u64 c)
 {
-	if (CAVIUM_IS_MODEL(CAVIUM_CN9XXX) && ((a <= 1023) && (b <= 3) && (c <= 1)))
-		return 0x1000020 + 0x400 * ((a) & 0x3ff) + 0x40 * ((b) & 0x3) + 8 * ((c) & 0x1);
-	return -1;
+	return 0x1000020 + 0x400 * a + 0x40 * b + 8 * c;
 }
 
 /**
@@ -1415,9 +1333,7 @@ static inline u64 CAVM_NPC_AF_MCAMEX_BANKX_CFG(u64 a, u64 b)
 	__attribute__ ((pure, always_inline));
 static inline u64 CAVM_NPC_AF_MCAMEX_BANKX_CFG(u64 a, u64 b)
 {
-	if (CAVIUM_IS_MODEL(CAVIUM_CN9XXX) && ((a <= 1023) && (b <= 3)))
-		return 0x1800000 + 0x100 * ((a) & 0x3ff) + 0x10 * ((b) & 0x3);
-	return -1;
+	return 0x1800000 + 0x100 * a + 0x10 * b;
 }
 
 /**
@@ -1441,9 +1357,7 @@ static inline u64 CAVM_NPC_AF_MCAMEX_BANKX_STAT_ACT(u64 a, u64 b)
 	__attribute__ ((pure, always_inline));
 static inline u64 CAVM_NPC_AF_MCAMEX_BANKX_STAT_ACT(u64 a, u64 b)
 {
-	if (CAVIUM_IS_MODEL(CAVIUM_CN9XXX) && ((a <= 1023) && (b <= 3)))
-		return 0x1880000 + 0x100 * ((a) & 0x3ff) + 0x10 * ((b) & 0x3);
-	return -1;
+	return 0x1880000 + 0x100 * a + 0x10 * b;
 }
 
 /**
@@ -1465,9 +1379,7 @@ static inline u64 CAVM_NPC_AF_MCAMEX_BANKX_TAG_ACT(u64 a, u64 b)
 	__attribute__ ((pure, always_inline));
 static inline u64 CAVM_NPC_AF_MCAMEX_BANKX_TAG_ACT(u64 a, u64 b)
 {
-	if (CAVIUM_IS_MODEL(CAVIUM_CN9XXX) && ((a <= 1023) && (b <= 3)))
-		return 0x1900008 + 0x100 * ((a) & 0x3ff) + 0x10 * ((b) & 0x3);
-	return -1;
+	return 0x1900008 + 0x100 * a + 0x10 * b;
 }
 
 /**
@@ -1498,9 +1410,7 @@ static inline u64 CAVM_NPC_AF_PCK_CFG(void)
 	__attribute__ ((pure, always_inline));
 static inline u64 CAVM_NPC_AF_PCK_CFG(void)
 {
-	if (CAVIUM_IS_MODEL(CAVIUM_CN9XXX))
-		return 0x600;
-	return -1;
+	return 0x600;
 }
 
 /**
@@ -1524,9 +1434,7 @@ static inline u64 CAVM_NPC_AF_PCK_DEF_IIP4(void)
 	__attribute__ ((pure, always_inline));
 static inline u64 CAVM_NPC_AF_PCK_DEF_IIP4(void)
 {
-	if (CAVIUM_IS_MODEL(CAVIUM_CN9XXX))
-		return 0x640;
-	return -1;
+	return 0x640;
 }
 
 /**
@@ -1550,9 +1458,7 @@ static inline u64 CAVM_NPC_AF_PCK_DEF_OIP4(void)
 	__attribute__ ((pure, always_inline));
 static inline u64 CAVM_NPC_AF_PCK_DEF_OIP4(void)
 {
-	if (CAVIUM_IS_MODEL(CAVIUM_CN9XXX))
-		return 0x620;
-	return -1;
+	return 0x620;
 }
 
 /**
@@ -1577,9 +1483,7 @@ static inline u64 CAVM_NPC_AF_PCK_DEF_OIP6(void)
 	__attribute__ ((pure, always_inline));
 static inline u64 CAVM_NPC_AF_PCK_DEF_OIP6(void)
 {
-	if (CAVIUM_IS_MODEL(CAVIUM_CN9XXX))
-		return 0x630;
-	return -1;
+	return 0x630;
 }
 
 /**
@@ -1603,9 +1507,7 @@ static inline u64 CAVM_NPC_AF_PCK_DEF_OL2(void)
 	__attribute__ ((pure, always_inline));
 static inline u64 CAVM_NPC_AF_PCK_DEF_OL2(void)
 {
-	if (CAVIUM_IS_MODEL(CAVIUM_CN9XXX))
-		return 0x610;
-	return -1;
+	return 0x610;
 }
 
 /**
@@ -1640,9 +1542,7 @@ static inline u64 CAVM_NPC_AF_PKINDX_ACTION0(u64 a)
 	__attribute__ ((pure, always_inline));
 static inline u64 CAVM_NPC_AF_PKINDX_ACTION0(u64 a)
 {
-	if (CAVIUM_IS_MODEL(CAVIUM_CN9XXX) && (a <= 63))
-		return 0x80000 + 0x40 * ((a) & 0x3f);
-	return -1;
+	return 0x80000 + 0x40 * a;
 }
 
 /**
@@ -1669,9 +1569,7 @@ static inline u64 CAVM_NPC_AF_PKINDX_ACTION1(u64 a)
 	__attribute__ ((pure, always_inline));
 static inline u64 CAVM_NPC_AF_PKINDX_ACTION1(u64 a)
 {
-	if (CAVIUM_IS_MODEL(CAVIUM_CN9XXX) && (a <= 63))
-		return 0x80008 + 0x40 * ((a) & 0x3f);
-	return -1;
+	return 0x80008 + 0x40 * a;
 }
 
 /**
@@ -1733,9 +1631,7 @@ static inline u64 CAVM_NPC_AF_PKINDX_CPI_DEFX(u64 a, u64 b)
 	__attribute__ ((pure, always_inline));
 static inline u64 CAVM_NPC_AF_PKINDX_CPI_DEFX(u64 a, u64 b)
 {
-	if (CAVIUM_IS_MODEL(CAVIUM_CN9XXX) && ((a <= 63) && (b <= 1)))
-		return 0x80020 + 0x40 * ((a) & 0x3f) + 8 * ((b) & 0x1);
-	return -1;
+	return 0x80020 + 0x40 * a + 8 * b;
 }
 
 #endif /* __CAVM_CSRS_NPC_H__ */
diff --git a/drivers/net/cavium/octeontx2/cavm-csrs-rvu.h b/drivers/net/cavium/octeontx2/cavm-csrs-rvu.h
index 59fe6e80d5..8a56294f9c 100644
--- a/drivers/net/cavium/octeontx2/cavm-csrs-rvu.h
+++ b/drivers/net/cavium/octeontx2/cavm-csrs-rvu.h
@@ -301,9 +301,7 @@ static inline u64 CAVM_RVU_AF_AFPFX_MBOXX(u64 a, u64 b)
 	__attribute__ ((pure, always_inline));
 static inline u64 CAVM_RVU_AF_AFPFX_MBOXX(u64 a, u64 b)
 {
-	if (CAVIUM_IS_MODEL(CAVIUM_CN9XXX) && ((a <= 15) && (b <= 1)))
-		return 0x2000 + 0x10 * ((a) & 0xf) + 8 * ((b) & 0x1);
-	return -1;
+	return 0x2000 + 0x10 * a + 8 * b;
 }
 
 /**
@@ -329,9 +327,7 @@ static inline u64 CAVM_RVU_AF_BAR2_ALIASX(u64 a)
 	__attribute__ ((pure, always_inline));
 static inline u64 CAVM_RVU_AF_BAR2_ALIASX(u64 a)
 {
-	if (CAVIUM_IS_MODEL(CAVIUM_CN9XXX) && (a <= 131071))
-		return 0x9100000 + 8 * ((a) & 0x1ffff);
-	return -1;
+	return 0x9100000 + 8 * a;
 }
 
 /**
@@ -357,9 +353,7 @@ static inline u64 CAVM_RVU_AF_BAR2_SEL(void)
 	__attribute__ ((pure, always_inline));
 static inline u64 CAVM_RVU_AF_BAR2_SEL(void)
 {
-	if (CAVIUM_IS_MODEL(CAVIUM_CN9XXX))
-		return 0x9000000;
-	return -1;
+	return 0x9000000;
 }
 
 /**
@@ -381,9 +375,31 @@ static inline u64 CAVM_RVU_AF_BLK_RST(void)
 	__attribute__ ((pure, always_inline));
 static inline u64 CAVM_RVU_AF_BLK_RST(void)
 {
-	if (CAVIUM_IS_MODEL(CAVIUM_CN9XXX))
-		return 0x30;
-	return -1;
+	return 0x30;
+}
+
+/**
+ * Register (RVU_PF_BAR0) rvu_af_bp_test
+ *
+ * INTERNAL: RVUM Backpressure Test Registers
+ */
+union cavm_rvu_af_bp_test {
+	u64 u;
+	struct cavm_rvu_af_bp_test_s {
+		u64 lfsr_freq                        : 12;
+		u64 reserved_12_15                   : 4;
+		u64 bp_cfg                           : 16;
+		u64 enable                           : 8;
+		u64 reserved_40_63                   : 24;
+	} s;
+	/* struct cavm_rvu_af_bp_test_s cn; */
+};
+
+static inline u64 CAVM_RVU_AF_BP_TEST(void)
+	__attribute__ ((pure, always_inline));
+static inline u64 CAVM_RVU_AF_BP_TEST(void)
+{
+	return 0x4000;
 }
 
 /**
@@ -404,9 +420,7 @@ static inline u64 CAVM_RVU_AF_ECO(void)
 	__attribute__ ((pure, always_inline));
 static inline u64 CAVM_RVU_AF_ECO(void)
 {
-	if (CAVIUM_IS_MODEL(CAVIUM_CN9XXX))
-		return 0x20;
-	return -1;
+	return 0x20;
 }
 
 /**
@@ -429,9 +443,7 @@ static inline u64 CAVM_RVU_AF_GEN_INT(void)
 	__attribute__ ((pure, always_inline));
 static inline u64 CAVM_RVU_AF_GEN_INT(void)
 {
-	if (CAVIUM_IS_MODEL(CAVIUM_CN9XXX))
-		return 0x120;
-	return -1;
+	return 0x120;
 }
 
 /**
@@ -454,9 +466,7 @@ static inline u64 CAVM_RVU_AF_GEN_INT_ENA_W1C(void)
 	__attribute__ ((pure, always_inline));
 static inline u64 CAVM_RVU_AF_GEN_INT_ENA_W1C(void)
 {
-	if (CAVIUM_IS_MODEL(CAVIUM_CN9XXX))
-		return 0x138;
-	return -1;
+	return 0x138;
 }
 
 /**
@@ -479,9 +489,7 @@ static inline u64 CAVM_RVU_AF_GEN_INT_ENA_W1S(void)
 	__attribute__ ((pure, always_inline));
 static inline u64 CAVM_RVU_AF_GEN_INT_ENA_W1S(void)
 {
-	if (CAVIUM_IS_MODEL(CAVIUM_CN9XXX))
-		return 0x130;
-	return -1;
+	return 0x130;
 }
 
 /**
@@ -504,9 +512,7 @@ static inline u64 CAVM_RVU_AF_GEN_INT_W1S(void)
 	__attribute__ ((pure, always_inline));
 static inline u64 CAVM_RVU_AF_GEN_INT_W1S(void)
 {
-	if (CAVIUM_IS_MODEL(CAVIUM_CN9XXX))
-		return 0x128;
-	return -1;
+	return 0x128;
 }
 
 /**
@@ -529,9 +535,7 @@ static inline u64 CAVM_RVU_AF_HWVF_RST(void)
 	__attribute__ ((pure, always_inline));
 static inline u64 CAVM_RVU_AF_HWVF_RST(void)
 {
-	if (CAVIUM_IS_MODEL(CAVIUM_CN9XXX))
-		return 0x2850;
-	return -1;
+	return 0x2850;
 }
 
 /**
@@ -553,9 +557,7 @@ static inline u64 CAVM_RVU_AF_MSIXTR_BASE(void)
 	__attribute__ ((pure, always_inline));
 static inline u64 CAVM_RVU_AF_MSIXTR_BASE(void)
 {
-	if (CAVIUM_IS_MODEL(CAVIUM_CN9XXX))
-		return 0x10;
-	return -1;
+	return 0x10;
 }
 
 /**
@@ -576,9 +578,7 @@ static inline u64 CAVM_RVU_AF_PF_BAR4_ADDR(void)
 	__attribute__ ((pure, always_inline));
 static inline u64 CAVM_RVU_AF_PF_BAR4_ADDR(void)
 {
-	if (CAVIUM_IS_MODEL(CAVIUM_CN9XXX))
-		return 0x40;
-	return -1;
+	return 0x40;
 }
 
 /**
@@ -601,9 +601,7 @@ static inline u64 CAVM_RVU_AF_PF_RST(void)
 	__attribute__ ((pure, always_inline));
 static inline u64 CAVM_RVU_AF_PF_RST(void)
 {
-	if (CAVIUM_IS_MODEL(CAVIUM_CN9XXX))
-		return 0x2840;
-	return -1;
+	return 0x2840;
 }
 
 /**
@@ -624,9 +622,7 @@ static inline u64 CAVM_RVU_AF_PFAF_MBOX_INT(void)
 	__attribute__ ((pure, always_inline));
 static inline u64 CAVM_RVU_AF_PFAF_MBOX_INT(void)
 {
-	if (CAVIUM_IS_MODEL(CAVIUM_CN9XXX))
-		return 0x2880;
-	return -1;
+	return 0x2880;
 }
 
 /**
@@ -648,9 +644,7 @@ static inline u64 CAVM_RVU_AF_PFAF_MBOX_INT_ENA_W1C(void)
 	__attribute__ ((pure, always_inline));
 static inline u64 CAVM_RVU_AF_PFAF_MBOX_INT_ENA_W1C(void)
 {
-	if (CAVIUM_IS_MODEL(CAVIUM_CN9XXX))
-		return 0x2898;
-	return -1;
+	return 0x2898;
 }
 
 /**
@@ -672,9 +666,7 @@ static inline u64 CAVM_RVU_AF_PFAF_MBOX_INT_ENA_W1S(void)
 	__attribute__ ((pure, always_inline));
 static inline u64 CAVM_RVU_AF_PFAF_MBOX_INT_ENA_W1S(void)
 {
-	if (CAVIUM_IS_MODEL(CAVIUM_CN9XXX))
-		return 0x2890;
-	return -1;
+	return 0x2890;
 }
 
 /**
@@ -696,9 +688,7 @@ static inline u64 CAVM_RVU_AF_PFAF_MBOX_INT_W1S(void)
 	__attribute__ ((pure, always_inline));
 static inline u64 CAVM_RVU_AF_PFAF_MBOX_INT_W1S(void)
 {
-	if (CAVIUM_IS_MODEL(CAVIUM_CN9XXX))
-		return 0x2888;
-	return -1;
+	return 0x2888;
 }
 
 /**
@@ -719,9 +709,7 @@ static inline u64 CAVM_RVU_AF_PFFLR_INT(void)
 	__attribute__ ((pure, always_inline));
 static inline u64 CAVM_RVU_AF_PFFLR_INT(void)
 {
-	if (CAVIUM_IS_MODEL(CAVIUM_CN9XXX))
-		return 0x28a0;
-	return -1;
+	return 0x28a0;
 }
 
 /**
@@ -743,9 +731,7 @@ static inline u64 CAVM_RVU_AF_PFFLR_INT_ENA_W1C(void)
 	__attribute__ ((pure, always_inline));
 static inline u64 CAVM_RVU_AF_PFFLR_INT_ENA_W1C(void)
 {
-	if (CAVIUM_IS_MODEL(CAVIUM_CN9XXX))
-		return 0x28b8;
-	return -1;
+	return 0x28b8;
 }
 
 /**
@@ -767,9 +753,7 @@ static inline u64 CAVM_RVU_AF_PFFLR_INT_ENA_W1S(void)
 	__attribute__ ((pure, always_inline));
 static inline u64 CAVM_RVU_AF_PFFLR_INT_ENA_W1S(void)
 {
-	if (CAVIUM_IS_MODEL(CAVIUM_CN9XXX))
-		return 0x28b0;
-	return -1;
+	return 0x28b0;
 }
 
 /**
@@ -791,9 +775,7 @@ static inline u64 CAVM_RVU_AF_PFFLR_INT_W1S(void)
 	__attribute__ ((pure, always_inline));
 static inline u64 CAVM_RVU_AF_PFFLR_INT_W1S(void)
 {
-	if (CAVIUM_IS_MODEL(CAVIUM_CN9XXX))
-		return 0x28a8;
-	return -1;
+	return 0x28a8;
 }
 
 /**
@@ -814,9 +796,7 @@ static inline u64 CAVM_RVU_AF_PFME_INT(void)
 	__attribute__ ((pure, always_inline));
 static inline u64 CAVM_RVU_AF_PFME_INT(void)
 {
-	if (CAVIUM_IS_MODEL(CAVIUM_CN9XXX))
-		return 0x28c0;
-	return -1;
+	return 0x28c0;
 }
 
 /**
@@ -838,9 +818,7 @@ static inline u64 CAVM_RVU_AF_PFME_INT_ENA_W1C(void)
 	__attribute__ ((pure, always_inline));
 static inline u64 CAVM_RVU_AF_PFME_INT_ENA_W1C(void)
 {
-	if (CAVIUM_IS_MODEL(CAVIUM_CN9XXX))
-		return 0x28d8;
-	return -1;
+	return 0x28d8;
 }
 
 /**
@@ -862,9 +840,7 @@ static inline u64 CAVM_RVU_AF_PFME_INT_ENA_W1S(void)
 	__attribute__ ((pure, always_inline));
 static inline u64 CAVM_RVU_AF_PFME_INT_ENA_W1S(void)
 {
-	if (CAVIUM_IS_MODEL(CAVIUM_CN9XXX))
-		return 0x28d0;
-	return -1;
+	return 0x28d0;
 }
 
 /**
@@ -886,9 +862,7 @@ static inline u64 CAVM_RVU_AF_PFME_INT_W1S(void)
 	__attribute__ ((pure, always_inline));
 static inline u64 CAVM_RVU_AF_PFME_INT_W1S(void)
 {
-	if (CAVIUM_IS_MODEL(CAVIUM_CN9XXX))
-		return 0x28c8;
-	return -1;
+	return 0x28c8;
 }
 
 /**
@@ -909,9 +883,7 @@ static inline u64 CAVM_RVU_AF_PFME_STATUS(void)
 	__attribute__ ((pure, always_inline));
 static inline u64 CAVM_RVU_AF_PFME_STATUS(void)
 {
-	if (CAVIUM_IS_MODEL(CAVIUM_CN9XXX))
-		return 0x2800;
-	return -1;
+	return 0x2800;
 }
 
 /**
@@ -932,9 +904,7 @@ static inline u64 CAVM_RVU_AF_PFTRPEND(void)
 	__attribute__ ((pure, always_inline));
 static inline u64 CAVM_RVU_AF_PFTRPEND(void)
 {
-	if (CAVIUM_IS_MODEL(CAVIUM_CN9XXX))
-		return 0x2810;
-	return -1;
+	return 0x2810;
 }
 
 /**
@@ -956,9 +926,7 @@ static inline u64 CAVM_RVU_AF_PFTRPEND_W1S(void)
 	__attribute__ ((pure, always_inline));
 static inline u64 CAVM_RVU_AF_PFTRPEND_W1S(void)
 {
-	if (CAVIUM_IS_MODEL(CAVIUM_CN9XXX))
-		return 0x2820;
-	return -1;
+	return 0x2820;
 }
 
 /**
@@ -981,9 +949,7 @@ static inline u64 CAVM_RVU_AF_RAS(void)
 	__attribute__ ((pure, always_inline));
 static inline u64 CAVM_RVU_AF_RAS(void)
 {
-	if (CAVIUM_IS_MODEL(CAVIUM_CN9XXX))
-		return 0x100;
-	return -1;
+	return 0x100;
 }
 
 /**
@@ -1005,9 +971,7 @@ static inline u64 CAVM_RVU_AF_RAS_ENA_W1C(void)
 	__attribute__ ((pure, always_inline));
 static inline u64 CAVM_RVU_AF_RAS_ENA_W1C(void)
 {
-	if (CAVIUM_IS_MODEL(CAVIUM_CN9XXX))
-		return 0x118;
-	return -1;
+	return 0x118;
 }
 
 /**
@@ -1029,9 +993,7 @@ static inline u64 CAVM_RVU_AF_RAS_ENA_W1S(void)
 	__attribute__ ((pure, always_inline));
 static inline u64 CAVM_RVU_AF_RAS_ENA_W1S(void)
 {
-	if (CAVIUM_IS_MODEL(CAVIUM_CN9XXX))
-		return 0x110;
-	return -1;
+	return 0x110;
 }
 
 /**
@@ -1053,9 +1015,7 @@ static inline u64 CAVM_RVU_AF_RAS_W1S(void)
 	__attribute__ ((pure, always_inline));
 static inline u64 CAVM_RVU_AF_RAS_W1S(void)
 {
-	if (CAVIUM_IS_MODEL(CAVIUM_CN9XXX))
-		return 0x108;
-	return -1;
+	return 0x108;
 }
 
 /**
@@ -1083,9 +1043,7 @@ static inline u64 CAVM_RVU_PF_BLOCK_ADDRX_DISC(u64 a)
 	__attribute__ ((pure, always_inline));
 static inline u64 CAVM_RVU_PF_BLOCK_ADDRX_DISC(u64 a)
 {
-	if (CAVIUM_IS_MODEL(CAVIUM_CN9XXX) && (a <= 31))
-		return 0x200 + 8 * ((a) & 0x1f);
-	return -1;
+	return 0x200 + 8 * a;
 }
 
 /**
@@ -1106,9 +1064,7 @@ static inline u64 CAVM_RVU_PF_INT(void)
 	__attribute__ ((pure, always_inline));
 static inline u64 CAVM_RVU_PF_INT(void)
 {
-	if (CAVIUM_IS_MODEL(CAVIUM_CN9XXX))
-		return 0xc20;
-	return -1;
+	return 0xc20;
 }
 
 /**
@@ -1130,9 +1086,7 @@ static inline u64 CAVM_RVU_PF_INT_ENA_W1C(void)
 	__attribute__ ((pure, always_inline));
 static inline u64 CAVM_RVU_PF_INT_ENA_W1C(void)
 {
-	if (CAVIUM_IS_MODEL(CAVIUM_CN9XXX))
-		return 0xc38;
-	return -1;
+	return 0xc38;
 }
 
 /**
@@ -1154,9 +1108,7 @@ static inline u64 CAVM_RVU_PF_INT_ENA_W1S(void)
 	__attribute__ ((pure, always_inline));
 static inline u64 CAVM_RVU_PF_INT_ENA_W1S(void)
 {
-	if (CAVIUM_IS_MODEL(CAVIUM_CN9XXX))
-		return 0xc30;
-	return -1;
+	return 0xc30;
 }
 
 /**
@@ -1178,9 +1130,7 @@ static inline u64 CAVM_RVU_PF_INT_W1S(void)
 	__attribute__ ((pure, always_inline));
 static inline u64 CAVM_RVU_PF_INT_W1S(void)
 {
-	if (CAVIUM_IS_MODEL(CAVIUM_CN9XXX))
-		return 0xc28;
-	return -1;
+	return 0xc28;
 }
 
 /**
@@ -1201,9 +1151,7 @@ static inline u64 CAVM_RVU_PF_MSIX_PBAX(u64 a)
 	__attribute__ ((pure, always_inline));
 static inline u64 CAVM_RVU_PF_MSIX_PBAX(u64 a)
 {
-	if (CAVIUM_IS_MODEL(CAVIUM_CN9XXX) && (a == 0))
-		return 0xf0000 + 8 * ((a) & 0x0);
-	return -1;
+	return 0xf0000 + 8 * a;
 }
 
 /**
@@ -1234,9 +1182,7 @@ static inline u64 CAVM_RVU_PF_MSIX_VECX_ADDR(u64 a)
 	__attribute__ ((pure, always_inline));
 static inline u64 CAVM_RVU_PF_MSIX_VECX_ADDR(u64 a)
 {
-	if (CAVIUM_IS_MODEL(CAVIUM_CN9XXX) && (a == 0))
-		return 0x80000 + 0x10 * ((a) & 0x0);
-	return -1;
+	return 0x80000 + 0x10 * a;
 }
 
 /**
@@ -1259,9 +1205,7 @@ static inline u64 CAVM_RVU_PF_MSIX_VECX_CTL(u64 a)
 	__attribute__ ((pure, always_inline));
 static inline u64 CAVM_RVU_PF_MSIX_VECX_CTL(u64 a)
 {
-	if (CAVIUM_IS_MODEL(CAVIUM_CN9XXX) && (a == 0))
-		return 0x80008 + 0x10 * ((a) & 0x0);
-	return -1;
+	return 0x80008 + 0x10 * a;
 }
 
 /**
@@ -1281,9 +1225,7 @@ static inline u64 CAVM_RVU_PF_PFAF_MBOXX(u64 a)
 	__attribute__ ((pure, always_inline));
 static inline u64 CAVM_RVU_PF_PFAF_MBOXX(u64 a)
 {
-	if (CAVIUM_IS_MODEL(CAVIUM_CN9XXX) && (a <= 1))
-		return 0xc00 + 8 * ((a) & 0x1);
-	return -1;
+	return 0xc00 + 8 * a;
 }
 
 /**
@@ -1303,9 +1245,7 @@ static inline u64 CAVM_RVU_PF_VFX_PFVF_MBOXX(u64 a, u64 b)
 	__attribute__ ((pure, always_inline));
 static inline u64 CAVM_RVU_PF_VFX_PFVF_MBOXX(u64 a, u64 b)
 {
-	if (CAVIUM_IS_MODEL(CAVIUM_CN9XXX) && ((a <= 127) && (b <= 1)))
-		return 0 + 0x1000 * ((a) & 0x7f) + 8 * ((b) & 0x1);
-	return -1;
+	return 0 + 0x1000 * a + 8 * b;
 }
 
 /**
@@ -1326,9 +1266,7 @@ static inline u64 CAVM_RVU_PF_VF_BAR4_ADDR(void)
 	__attribute__ ((pure, always_inline));
 static inline u64 CAVM_RVU_PF_VF_BAR4_ADDR(void)
 {
-	if (CAVIUM_IS_MODEL(CAVIUM_CN9XXX))
-		return 0x10;
-	return -1;
+	return 0x10;
 }
 
 /**
@@ -1348,9 +1286,7 @@ static inline u64 CAVM_RVU_PF_VFFLR_INTX(u64 a)
 	__attribute__ ((pure, always_inline));
 static inline u64 CAVM_RVU_PF_VFFLR_INTX(u64 a)
 {
-	if (CAVIUM_IS_MODEL(CAVIUM_CN9XXX) && (a <= 1))
-		return 0x900 + 8 * ((a) & 0x1);
-	return -1;
+	return 0x900 + 8 * a;
 }
 
 /**
@@ -1371,9 +1307,7 @@ static inline u64 CAVM_RVU_PF_VFFLR_INT_ENA_W1CX(u64 a)
 	__attribute__ ((pure, always_inline));
 static inline u64 CAVM_RVU_PF_VFFLR_INT_ENA_W1CX(u64 a)
 {
-	if (CAVIUM_IS_MODEL(CAVIUM_CN9XXX) && (a <= 1))
-		return 0x960 + 8 * ((a) & 0x1);
-	return -1;
+	return 0x960 + 8 * a;
 }
 
 /**
@@ -1394,9 +1328,7 @@ static inline u64 CAVM_RVU_PF_VFFLR_INT_ENA_W1SX(u64 a)
 	__attribute__ ((pure, always_inline));
 static inline u64 CAVM_RVU_PF_VFFLR_INT_ENA_W1SX(u64 a)
 {
-	if (CAVIUM_IS_MODEL(CAVIUM_CN9XXX) && (a <= 1))
-		return 0x940 + 8 * ((a) & 0x1);
-	return -1;
+	return 0x940 + 8 * a;
 }
 
 /**
@@ -1417,9 +1349,7 @@ static inline u64 CAVM_RVU_PF_VFFLR_INT_W1SX(u64 a)
 	__attribute__ ((pure, always_inline));
 static inline u64 CAVM_RVU_PF_VFFLR_INT_W1SX(u64 a)
 {
-	if (CAVIUM_IS_MODEL(CAVIUM_CN9XXX) && (a <= 1))
-		return 0x920 + 8 * ((a) & 0x1);
-	return -1;
+	return 0x920 + 8 * a;
 }
 
 /**
@@ -1439,9 +1369,7 @@ static inline u64 CAVM_RVU_PF_VFME_INTX(u64 a)
 	__attribute__ ((pure, always_inline));
 static inline u64 CAVM_RVU_PF_VFME_INTX(u64 a)
 {
-	if (CAVIUM_IS_MODEL(CAVIUM_CN9XXX) && (a <= 1))
-		return 0x980 + 8 * ((a) & 0x1);
-	return -1;
+	return 0x980 + 8 * a;
 }
 
 /**
@@ -1462,9 +1390,7 @@ static inline u64 CAVM_RVU_PF_VFME_INT_ENA_W1CX(u64 a)
 	__attribute__ ((pure, always_inline));
 static inline u64 CAVM_RVU_PF_VFME_INT_ENA_W1CX(u64 a)
 {
-	if (CAVIUM_IS_MODEL(CAVIUM_CN9XXX) && (a <= 1))
-		return 0x9e0 + 8 * ((a) & 0x1);
-	return -1;
+	return 0x9e0 + 8 * a;
 }
 
 /**
@@ -1485,9 +1411,7 @@ static inline u64 CAVM_RVU_PF_VFME_INT_ENA_W1SX(u64 a)
 	__attribute__ ((pure, always_inline));
 static inline u64 CAVM_RVU_PF_VFME_INT_ENA_W1SX(u64 a)
 {
-	if (CAVIUM_IS_MODEL(CAVIUM_CN9XXX) && (a <= 1))
-		return 0x9c0 + 8 * ((a) & 0x1);
-	return -1;
+	return 0x9c0 + 8 * a;
 }
 
 /**
@@ -1508,9 +1432,7 @@ static inline u64 CAVM_RVU_PF_VFME_INT_W1SX(u64 a)
 	__attribute__ ((pure, always_inline));
 static inline u64 CAVM_RVU_PF_VFME_INT_W1SX(u64 a)
 {
-	if (CAVIUM_IS_MODEL(CAVIUM_CN9XXX) && (a <= 1))
-		return 0x9a0 + 8 * ((a) & 0x1);
-	return -1;
+	return 0x9a0 + 8 * a;
 }
 
 /**
@@ -1530,9 +1452,7 @@ static inline u64 CAVM_RVU_PF_VFME_STATUSX(u64 a)
 	__attribute__ ((pure, always_inline));
 static inline u64 CAVM_RVU_PF_VFME_STATUSX(u64 a)
 {
-	if (CAVIUM_IS_MODEL(CAVIUM_CN9XXX) && (a <= 1))
-		return 0x800 + 8 * ((a) & 0x1);
-	return -1;
+	return 0x800 + 8 * a;
 }
 
 /**
@@ -1552,9 +1472,7 @@ static inline u64 CAVM_RVU_PF_VFPF_MBOX_INTX(u64 a)
 	__attribute__ ((pure, always_inline));
 static inline u64 CAVM_RVU_PF_VFPF_MBOX_INTX(u64 a)
 {
-	if (CAVIUM_IS_MODEL(CAVIUM_CN9XXX) && (a <= 1))
-		return 0x880 + 8 * ((a) & 0x1);
-	return -1;
+	return 0x880 + 8 * a;
 }
 
 /**
@@ -1575,9 +1493,7 @@ static inline u64 CAVM_RVU_PF_VFPF_MBOX_INT_ENA_W1CX(u64 a)
 	__attribute__ ((pure, always_inline));
 static inline u64 CAVM_RVU_PF_VFPF_MBOX_INT_ENA_W1CX(u64 a)
 {
-	if (CAVIUM_IS_MODEL(CAVIUM_CN9XXX) && (a <= 1))
-		return 0x8e0 + 8 * ((a) & 0x1);
-	return -1;
+	return 0x8e0 + 8 * a;
 }
 
 /**
@@ -1598,9 +1514,7 @@ static inline u64 CAVM_RVU_PF_VFPF_MBOX_INT_ENA_W1SX(u64 a)
 	__attribute__ ((pure, always_inline));
 static inline u64 CAVM_RVU_PF_VFPF_MBOX_INT_ENA_W1SX(u64 a)
 {
-	if (CAVIUM_IS_MODEL(CAVIUM_CN9XXX) && (a <= 1))
-		return 0x8c0 + 8 * ((a) & 0x1);
-	return -1;
+	return 0x8c0 + 8 * a;
 }
 
 /**
@@ -1621,9 +1535,7 @@ static inline u64 CAVM_RVU_PF_VFPF_MBOX_INT_W1SX(u64 a)
 	__attribute__ ((pure, always_inline));
 static inline u64 CAVM_RVU_PF_VFPF_MBOX_INT_W1SX(u64 a)
 {
-	if (CAVIUM_IS_MODEL(CAVIUM_CN9XXX) && (a <= 1))
-		return 0x8a0 + 8 * ((a) & 0x1);
-	return -1;
+	return 0x8a0 + 8 * a;
 }
 
 /**
@@ -1643,9 +1555,7 @@ static inline u64 CAVM_RVU_PF_VFTRPENDX(u64 a)
 	__attribute__ ((pure, always_inline));
 static inline u64 CAVM_RVU_PF_VFTRPENDX(u64 a)
 {
-	if (CAVIUM_IS_MODEL(CAVIUM_CN9XXX) && (a <= 1))
-		return 0x820 + 8 * ((a) & 0x1);
-	return -1;
+	return 0x820 + 8 * a;
 }
 
 /**
@@ -1666,9 +1576,7 @@ static inline u64 CAVM_RVU_PF_VFTRPEND_W1SX(u64 a)
 	__attribute__ ((pure, always_inline));
 static inline u64 CAVM_RVU_PF_VFTRPEND_W1SX(u64 a)
 {
-	if (CAVIUM_IS_MODEL(CAVIUM_CN9XXX) && (a <= 1))
-		return 0x840 + 8 * ((a) & 0x1);
-	return -1;
+	return 0x840 + 8 * a;
 }
 
 /**
@@ -1688,9 +1596,7 @@ static inline u64 CAVM_RVU_PRIV_ACTIVE_PC(void)
 	__attribute__ ((pure, always_inline));
 static inline u64 CAVM_RVU_PRIV_ACTIVE_PC(void)
 {
-	if (CAVIUM_IS_MODEL(CAVIUM_CN9XXX))
-		return 0x8000030;
-	return -1;
+	return 0x8000030;
 }
 
 /**
@@ -1714,9 +1620,7 @@ static inline u64 CAVM_RVU_PRIV_BLOCK_TYPEX_REV(u64 a)
 	__attribute__ ((pure, always_inline));
 static inline u64 CAVM_RVU_PRIV_BLOCK_TYPEX_REV(u64 a)
 {
-	if (CAVIUM_IS_MODEL(CAVIUM_CN9XXX) && (a <= 15))
-		return 0x8000400 + 8 * ((a) & 0xf);
-	return -1;
+	return 0x8000400 + 8 * a;
 }
 
 /**
@@ -1738,9 +1642,7 @@ static inline u64 CAVM_RVU_PRIV_CLK_CFG(void)
 	__attribute__ ((pure, always_inline));
 static inline u64 CAVM_RVU_PRIV_CLK_CFG(void)
 {
-	if (CAVIUM_IS_MODEL(CAVIUM_CN9XXX))
-		return 0x8000020;
-	return -1;
+	return 0x8000020;
 }
 
 /**
@@ -1765,9 +1667,7 @@ static inline u64 CAVM_RVU_PRIV_CONST(void)
 	__attribute__ ((pure, always_inline));
 static inline u64 CAVM_RVU_PRIV_CONST(void)
 {
-	if (CAVIUM_IS_MODEL(CAVIUM_CN9XXX))
-		return 0x8000000;
-	return -1;
+	return 0x8000000;
 }
 
 /**
@@ -1788,9 +1688,7 @@ static inline u64 CAVM_RVU_PRIV_GEN_CFG(void)
 	__attribute__ ((pure, always_inline));
 static inline u64 CAVM_RVU_PRIV_GEN_CFG(void)
 {
-	if (CAVIUM_IS_MODEL(CAVIUM_CN9XXX))
-		return 0x8000010;
-	return -1;
+	return 0x8000010;
 }
 
 /**
@@ -1812,9 +1710,7 @@ static inline u64 CAVM_RVU_PRIV_HWVFX_CPTX_CFG(u64 a, u64 b)
 	__attribute__ ((pure, always_inline));
 static inline u64 CAVM_RVU_PRIV_HWVFX_CPTX_CFG(u64 a, u64 b)
 {
-	if (CAVIUM_IS_MODEL(CAVIUM_CN9XXX) && ((a <= 255) && (b == 0)))
-		return 0x8001350 + 0x10000 * ((a) & 0xff) + 8 * ((b) & 0x0);
-	return -1;
+	return 0x8001350 + 0x10000 * a + 8 * b;
 }
 
 /**
@@ -1837,9 +1733,7 @@ static inline u64 CAVM_RVU_PRIV_HWVFX_INT_CFG(u64 a)
 	__attribute__ ((pure, always_inline));
 static inline u64 CAVM_RVU_PRIV_HWVFX_INT_CFG(u64 a)
 {
-	if (CAVIUM_IS_MODEL(CAVIUM_CN9XXX) && (a <= 255))
-		return 0x8001280 + 0x10000 * ((a) & 0xff);
-	return -1;
+	return 0x8001280 + 0x10000 * a;
 }
 
 /**
@@ -1864,9 +1758,7 @@ static inline u64 CAVM_RVU_PRIV_HWVFX_NIXX_CFG(u64 a, u64 b)
 	__attribute__ ((pure, always_inline));
 static inline u64 CAVM_RVU_PRIV_HWVFX_NIXX_CFG(u64 a, u64 b)
 {
-	if (CAVIUM_IS_MODEL(CAVIUM_CN9XXX) && ((a <= 255) && (b == 0)))
-		return 0x8001300 + 0x10000 * ((a) & 0xff) + 8 * ((b) & 0x0);
-	return -1;
+	return 0x8001300 + 0x10000 * a + 8 * b;
 }
 
 /**
@@ -1888,9 +1780,7 @@ static inline u64 CAVM_RVU_PRIV_HWVFX_NPA_CFG(u64 a)
 	__attribute__ ((pure, always_inline));
 static inline u64 CAVM_RVU_PRIV_HWVFX_NPA_CFG(u64 a)
 {
-	if (CAVIUM_IS_MODEL(CAVIUM_CN9XXX) && (a <= 255))
-		return 0x8001310 + 0x10000 * ((a) & 0xff);
-	return -1;
+	return 0x8001310 + 0x10000 * a;
 }
 
 /**
@@ -1912,9 +1802,7 @@ static inline u64 CAVM_RVU_PRIV_HWVFX_SSO_CFG(u64 a)
 	__attribute__ ((pure, always_inline));
 static inline u64 CAVM_RVU_PRIV_HWVFX_SSO_CFG(u64 a)
 {
-	if (CAVIUM_IS_MODEL(CAVIUM_CN9XXX) && (a <= 255))
-		return 0x8001320 + 0x10000 * ((a) & 0xff);
-	return -1;
+	return 0x8001320 + 0x10000 * a;
 }
 
 /**
@@ -1936,9 +1824,7 @@ static inline u64 CAVM_RVU_PRIV_HWVFX_SSOW_CFG(u64 a)
 	__attribute__ ((pure, always_inline));
 static inline u64 CAVM_RVU_PRIV_HWVFX_SSOW_CFG(u64 a)
 {
-	if (CAVIUM_IS_MODEL(CAVIUM_CN9XXX) && (a <= 255))
-		return 0x8001330 + 0x10000 * ((a) & 0xff);
-	return -1;
+	return 0x8001330 + 0x10000 * a;
 }
 
 /**
@@ -1960,9 +1846,7 @@ static inline u64 CAVM_RVU_PRIV_HWVFX_TIM_CFG(u64 a)
 	__attribute__ ((pure, always_inline));
 static inline u64 CAVM_RVU_PRIV_HWVFX_TIM_CFG(u64 a)
 {
-	if (CAVIUM_IS_MODEL(CAVIUM_CN9XXX) && (a <= 255))
-		return 0x8001340 + 0x10000 * ((a) & 0xff);
-	return -1;
+	return 0x8001340 + 0x10000 * a;
 }
 
 /**
@@ -1987,9 +1871,7 @@ static inline u64 CAVM_RVU_PRIV_PFX_CFG(u64 a)
 	__attribute__ ((pure, always_inline));
 static inline u64 CAVM_RVU_PRIV_PFX_CFG(u64 a)
 {
-	if (CAVIUM_IS_MODEL(CAVIUM_CN9XXX) && (a <= 15))
-		return 0x8000100 + 0x10000 * ((a) & 0xf);
-	return -1;
+	return 0x8000100 + 0x10000 * a;
 }
 
 /**
@@ -2011,9 +1893,7 @@ static inline u64 CAVM_RVU_PRIV_PFX_CPTX_CFG(u64 a, u64 b)
 	__attribute__ ((pure, always_inline));
 static inline u64 CAVM_RVU_PRIV_PFX_CPTX_CFG(u64 a, u64 b)
 {
-	if (CAVIUM_IS_MODEL(CAVIUM_CN9XXX) && ((a <= 15) && (b == 0)))
-		return 0x8000350 + 0x10000 * ((a) & 0xf) + 8 * ((b) & 0x0);
-	return -1;
+	return 0x8000350 + 0x10000 * a + 8 * b;
 }
 
 /**
@@ -2036,9 +1916,7 @@ static inline u64 CAVM_RVU_PRIV_PFX_ID_CFG(u64 a)
 	__attribute__ ((pure, always_inline));
 static inline u64 CAVM_RVU_PRIV_PFX_ID_CFG(u64 a)
 {
-	if (CAVIUM_IS_MODEL(CAVIUM_CN9XXX) && (a <= 15))
-		return 0x8000120 + 0x10000 * ((a) & 0xf);
-	return -1;
+	return 0x8000120 + 0x10000 * a;
 }
 
 /**
@@ -2061,9 +1939,7 @@ static inline u64 CAVM_RVU_PRIV_PFX_INT_CFG(u64 a)
 	__attribute__ ((pure, always_inline));
 static inline u64 CAVM_RVU_PRIV_PFX_INT_CFG(u64 a)
 {
-	if (CAVIUM_IS_MODEL(CAVIUM_CN9XXX) && (a <= 15))
-		return 0x8000200 + 0x10000 * ((a) & 0xf);
-	return -1;
+	return 0x8000200 + 0x10000 * a;
 }
 
 /**
@@ -2107,9 +1983,7 @@ static inline u64 CAVM_RVU_PRIV_PFX_MSIX_CFG(u64 a)
 	__attribute__ ((pure, always_inline));
 static inline u64 CAVM_RVU_PRIV_PFX_MSIX_CFG(u64 a)
 {
-	if (CAVIUM_IS_MODEL(CAVIUM_CN9XXX) && (a <= 15))
-		return 0x8000110 + 0x10000 * ((a) & 0xf);
-	return -1;
+	return 0x8000110 + 0x10000 * a;
 }
 
 /**
@@ -2134,9 +2008,7 @@ static inline u64 CAVM_RVU_PRIV_PFX_NIXX_CFG(u64 a, u64 b)
 	__attribute__ ((pure, always_inline));
 static inline u64 CAVM_RVU_PRIV_PFX_NIXX_CFG(u64 a, u64 b)
 {
-	if (CAVIUM_IS_MODEL(CAVIUM_CN9XXX) && ((a <= 15) && (b == 0)))
-		return 0x8000300 + 0x10000 * ((a) & 0xf) + 8 * ((b) & 0x0);
-	return -1;
+	return 0x8000300 + 0x10000 * a + 8 * b;
 }
 
 /**
@@ -2158,9 +2030,7 @@ static inline u64 CAVM_RVU_PRIV_PFX_NPA_CFG(u64 a)
 	__attribute__ ((pure, always_inline));
 static inline u64 CAVM_RVU_PRIV_PFX_NPA_CFG(u64 a)
 {
-	if (CAVIUM_IS_MODEL(CAVIUM_CN9XXX) && (a <= 15))
-		return 0x8000310 + 0x10000 * ((a) & 0xf);
-	return -1;
+	return 0x8000310 + 0x10000 * a;
 }
 
 /**
@@ -2182,9 +2052,7 @@ static inline u64 CAVM_RVU_PRIV_PFX_SSO_CFG(u64 a)
 	__attribute__ ((pure, always_inline));
 static inline u64 CAVM_RVU_PRIV_PFX_SSO_CFG(u64 a)
 {
-	if (CAVIUM_IS_MODEL(CAVIUM_CN9XXX) && (a <= 15))
-		return 0x8000320 + 0x10000 * ((a) & 0xf);
-	return -1;
+	return 0x8000320 + 0x10000 * a;
 }
 
 /**
@@ -2206,9 +2074,7 @@ static inline u64 CAVM_RVU_PRIV_PFX_SSOW_CFG(u64 a)
 	__attribute__ ((pure, always_inline));
 static inline u64 CAVM_RVU_PRIV_PFX_SSOW_CFG(u64 a)
 {
-	if (CAVIUM_IS_MODEL(CAVIUM_CN9XXX) && (a <= 15))
-		return 0x8000330 + 0x10000 * ((a) & 0xf);
-	return -1;
+	return 0x8000330 + 0x10000 * a;
 }
 
 /**
@@ -2230,9 +2096,7 @@ static inline u64 CAVM_RVU_PRIV_PFX_TIM_CFG(u64 a)
 	__attribute__ ((pure, always_inline));
 static inline u64 CAVM_RVU_PRIV_PFX_TIM_CFG(u64 a)
 {
-	if (CAVIUM_IS_MODEL(CAVIUM_CN9XXX) && (a <= 15))
-		return 0x8000340 + 0x10000 * ((a) & 0xf);
-	return -1;
+	return 0x8000340 + 0x10000 * a;
 }
 
 /**
@@ -2260,9 +2124,7 @@ static inline u64 CAVM_RVU_VF_BLOCK_ADDRX_DISC(u64 a)
 	__attribute__ ((pure, always_inline));
 static inline u64 CAVM_RVU_VF_BLOCK_ADDRX_DISC(u64 a)
 {
-	if (CAVIUM_IS_MODEL(CAVIUM_CN9XXX) && (a <= 31))
-		return 0x200 + 8 * ((a) & 0x1f);
-	return -1;
+	return 0x200 + 8 * a;
 }
 
 /**
@@ -2283,9 +2145,7 @@ static inline u64 CAVM_RVU_VF_INT(void)
 	__attribute__ ((pure, always_inline));
 static inline u64 CAVM_RVU_VF_INT(void)
 {
-	if (CAVIUM_IS_MODEL(CAVIUM_CN9XXX))
-		return 0x20;
-	return -1;
+	return 0x20;
 }
 
 /**
@@ -2307,9 +2167,7 @@ static inline u64 CAVM_RVU_VF_INT_ENA_W1C(void)
 	__attribute__ ((pure, always_inline));
 static inline u64 CAVM_RVU_VF_INT_ENA_W1C(void)
 {
-	if (CAVIUM_IS_MODEL(CAVIUM_CN9XXX))
-		return 0x38;
-	return -1;
+	return 0x38;
 }
 
 /**
@@ -2331,9 +2189,7 @@ static inline u64 CAVM_RVU_VF_INT_ENA_W1S(void)
 	__attribute__ ((pure, always_inline));
 static inline u64 CAVM_RVU_VF_INT_ENA_W1S(void)
 {
-	if (CAVIUM_IS_MODEL(CAVIUM_CN9XXX))
-		return 0x30;
-	return -1;
+	return 0x30;
 }
 
 /**
@@ -2355,9 +2211,7 @@ static inline u64 CAVM_RVU_VF_INT_W1S(void)
 	__attribute__ ((pure, always_inline));
 static inline u64 CAVM_RVU_VF_INT_W1S(void)
 {
-	if (CAVIUM_IS_MODEL(CAVIUM_CN9XXX))
-		return 0x28;
-	return -1;
+	return 0x28;
 }
 
 /**
@@ -2378,9 +2232,7 @@ static inline u64 CAVM_RVU_VF_MSIX_PBAX(u64 a)
 	__attribute__ ((pure, always_inline));
 static inline u64 CAVM_RVU_VF_MSIX_PBAX(u64 a)
 {
-	if (CAVIUM_IS_MODEL(CAVIUM_CN9XXX) && (a == 0))
-		return 0xf0000 + 8 * ((a) & 0x0);
-	return -1;
+	return 0xf0000 + 8 * a;
 }
 
 /**
@@ -2410,9 +2262,7 @@ static inline u64 CAVM_RVU_VF_MSIX_VECX_ADDR(u64 a)
 	__attribute__ ((pure, always_inline));
 static inline u64 CAVM_RVU_VF_MSIX_VECX_ADDR(u64 a)
 {
-	if (CAVIUM_IS_MODEL(CAVIUM_CN9XXX) && (a == 0))
-		return 0x80000 + 0x10 * ((a) & 0x0);
-	return -1;
+	return 0x80000 + 0x10 * a;
 }
 
 /**
@@ -2435,9 +2285,7 @@ static inline u64 CAVM_RVU_VF_MSIX_VECX_CTL(u64 a)
 	__attribute__ ((pure, always_inline));
 static inline u64 CAVM_RVU_VF_MSIX_VECX_CTL(u64 a)
 {
-	if (CAVIUM_IS_MODEL(CAVIUM_CN9XXX) && (a == 0))
-		return 0x80008 + 0x10 * ((a) & 0x0);
-	return -1;
+	return 0x80008 + 0x10 * a;
 }
 
 /**
@@ -2457,9 +2305,7 @@ static inline u64 CAVM_RVU_VF_VFPF_MBOXX(u64 a)
 	__attribute__ ((pure, always_inline));
 static inline u64 CAVM_RVU_VF_VFPF_MBOXX(u64 a)
 {
-	if (CAVIUM_IS_MODEL(CAVIUM_CN9XXX) && (a <= 1))
-		return 0 + 8 * ((a) & 0x1);
-	return -1;
+	return 0 + 8 * a;
 }
 
 #endif /* __CAVM_CSRS_RVU_H__ */
-- 
2.29.0

