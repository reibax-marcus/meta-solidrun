From b7996de0112fb2a54b530eecffbae97eb4b7b4a9 Mon Sep 17 00:00:00 2001
From: Igal Liberman <igall@marvell.com>
Date: Tue, 6 Nov 2018 17:18:11 +0200
Subject: [PATCH 0208/1239] net: switch: mv88e6xxx: add 88E6390X support

Link Street SOHO 88E6390X is a switch,
it has 11 ports:
	- 8 GE PHYs
	- 1 RGMII/MII/RMII
	- 2 XAUI/RXAUI

It is similar to 88E6390 switch (88E6390 has 11 ports
too, but without 10G support).

Change-Id: I7234271a756148dea2d68bd25adc1ba392332c3c
Signed-off-by: Igal Liberman <igall@marvell.com>
---
 drivers/net/phy/mv88e6xxx.c | 62 +++++++++++++++++++++++++------------
 drivers/net/phy/mv88e6xxx.h |  3 ++
 2 files changed, 46 insertions(+), 19 deletions(-)

diff --git a/drivers/net/phy/mv88e6xxx.c b/drivers/net/phy/mv88e6xxx.c
index 3bf660335c..e58669d7c4 100644
--- a/drivers/net/phy/mv88e6xxx.c
+++ b/drivers/net/phy/mv88e6xxx.c
@@ -237,6 +237,7 @@ void mv88e6xxx_display_switch_info(struct mv88e6xxx_dev *dev)
 
 	product_num = ((unsigned int)dev->id) >> 4;
 	if (product_num == PORT_SWITCH_ID_PROD_NUM_6390 ||
+	    product_num == PORT_SWITCH_ID_PROD_NUM_6390X ||
 	    product_num == PORT_SWITCH_ID_PROD_NUM_6290 ||
 	    product_num == PORT_SWITCH_ID_PROD_NUM_6190) {
 		printf("Switch    : SOHO\n");
@@ -286,6 +287,8 @@ int mv88e6xxx_get_link_status(struct mv88e6xxx_dev *dev, int port)
 		printf("Speed: 100 Mbps\n");
 	else if ((ret & PORT_STATUS_SPEED_MASK) == PORT_STATUS_SPEED_1000)
 		printf("Speed: 1000 Mbps\n");
+	else if ((ret & PORT_STATUS_SPEED_MASK) == PORT_STATUS_SPEED_2500_10G)
+		printf("Speed: 10 Gb or 2500 Mbps\n");
 	else
 		printf("Speed: Unknown\n");
 
@@ -318,7 +321,8 @@ int mv88e6xxx_get_switch_id(struct mv88e6xxx_dev *dev)
 	product_num = id >> 4;
 	if ((product_num == PORT_SWITCH_ID_PROD_NUM_6190) ||
 	    (product_num == PORT_SWITCH_ID_PROD_NUM_6290) ||
-	    (product_num == PORT_SWITCH_ID_PROD_NUM_6390)) {
+	    (product_num == PORT_SWITCH_ID_PROD_NUM_6390) ||
+	    (product_num == PORT_SWITCH_ID_PROD_NUM_6390X)) {
 		/* Peridot switch port device address starts from 0 */
 		REG_PORT_BASE = REG_PORT_BASE_PERIDOT;
 		return id;
@@ -367,25 +371,45 @@ int mv88e6xxx_initialize(const void *blob)
 	if (soho_dev.cpu_port != -1) {
 		u16 reg;
 
-		reg = mv88e6xxx_read_register(&soho_dev,
-					      REG_PORT(soho_dev.cpu_port),
-					      PORT_PCS_CTRL);
-		/* CPU port is forced link-up, duplex and 1GB speed */
-		reg &= ~PORT_PCS_CTRL_UNFORCED;
-		reg |= PORT_PCS_CTRL_FORCE_LINK |
-		       PORT_PCS_CTRL_LINK_UP |
-		       PORT_PCS_CTRL_DUPLEX_FULL |
-		       PORT_PCS_CTRL_FORCE_DUPLEX |
-		       PORT_PCS_CTRL_1000;
-		if ((soho_dev.id >> 4) == PORT_SWITCH_ID_PROD_NUM_6341) {
-			/* Configure RGMII Delay on cpu port */
-			reg |= PORT_PCS_CTRL_FORCE_SPEED |
-			       PORT_PCS_CTRL_RGMII_DELAY_TXCLK |
-			       PORT_PCS_CTRL_RGMII_DELAY_RXCLK;
+		/* For 88e6390X switch we need to configure C_MODE field
+		 * in Port Status Register to 0xb (2500 base-x).
+		 * NOTE: Port Status Register is generally RO, but it can
+		 * be written for port9 and port10 (cpu ports).
+		 */
+		if ((soho_dev.id >> 4) == PORT_SWITCH_ID_PROD_NUM_6390X) {
+			reg = mv88e6xxx_read_register(
+				&soho_dev, REG_PORT(soho_dev.cpu_port),
+				PORT_STATUS);
+			reg &= ~PORT_STATUS_CMODE_MASK;
+			reg |= PORT_STATUS_CMODE_2500BASE_X;
+			ret = mv88e6xxx_write_register(
+				&soho_dev, REG_PORT(soho_dev.cpu_port),
+				PORT_STATUS, reg);
+		} else {
+			reg = mv88e6xxx_read_register(
+				&soho_dev, REG_PORT(soho_dev.cpu_port),
+				PORT_PCS_CTRL);
+			/* CPU port is forced link-up, duplex and 1GB speed */
+			reg &= ~PORT_PCS_CTRL_UNFORCED;
+			reg |= PORT_PCS_CTRL_FORCE_LINK |
+			       PORT_PCS_CTRL_LINK_UP |
+			       PORT_PCS_CTRL_DUPLEX_FULL |
+			       PORT_PCS_CTRL_FORCE_DUPLEX |
+			       PORT_PCS_CTRL_1000;
+
+			if ((soho_dev.id >> 4) ==
+			    PORT_SWITCH_ID_PROD_NUM_6341) {
+				/* Configure RGMII Delay on cpu port */
+				reg |= PORT_PCS_CTRL_FORCE_SPEED |
+				       PORT_PCS_CTRL_RGMII_DELAY_TXCLK |
+				       PORT_PCS_CTRL_RGMII_DELAY_RXCLK;
+			}
+
+			ret = mv88e6xxx_write_register(
+				&soho_dev, REG_PORT(soho_dev.cpu_port),
+				PORT_PCS_CTRL, reg);
 		}
-		ret = mv88e6xxx_write_register(&soho_dev,
-					       REG_PORT(soho_dev.cpu_port),
-					       PORT_PCS_CTRL, reg);
+
 		if (ret)
 			return ret;
 	}
diff --git a/drivers/net/phy/mv88e6xxx.h b/drivers/net/phy/mv88e6xxx.h
index 7083b7dba1..481e6645b7 100644
--- a/drivers/net/phy/mv88e6xxx.h
+++ b/drivers/net/phy/mv88e6xxx.h
@@ -62,6 +62,7 @@
 #define PORT_STATUS_SPEED_10			0x0000
 #define PORT_STATUS_SPEED_100			0x0100
 #define PORT_STATUS_SPEED_1000			0x0200
+#define PORT_STATUS_SPEED_2500_10G		0x0300
 #define PORT_STATUS_EEE				BIT(6) /* 6352 */
 #define PORT_STATUS_AM_DIS			BIT(6) /* 6165 */
 #define PORT_STATUS_MGMII			BIT(6) /* 6185 */
@@ -71,6 +72,7 @@
 #define PORT_STATUS_CMODE_100BASE_X		0x8
 #define PORT_STATUS_CMODE_1000BASE_X		0x9
 #define PORT_STATUS_CMODE_SGMII			0xa
+#define PORT_STATUS_CMODE_2500BASE_X		0xb
 #define PORT_PCS_CTRL				0x01
 #define PORT_PCS_CTRL_RGMII_DELAY_RXCLK		BIT(15)
 #define PORT_PCS_CTRL_RGMII_DELAY_TXCLK		BIT(14)
@@ -91,6 +93,7 @@
 #define PORT_SWITCH_ID_PROD_NUM_6190		0x190
 #define PORT_SWITCH_ID_PROD_NUM_6290		0x290
 #define PORT_SWITCH_ID_PROD_NUM_6390		0x390
+#define PORT_SWITCH_ID_PROD_NUM_6390X		0x0a1
 #define PORT_SWITCH_ID_PROD_NUM_6141		0x141
 #define PORT_SWITCH_ID_PROD_NUM_6341		0x341
 
-- 
2.29.0

