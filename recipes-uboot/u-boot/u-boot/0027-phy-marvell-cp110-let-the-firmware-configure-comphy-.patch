From 8ddca99a2c614c2ea6923def46772a9e5c0f199f Mon Sep 17 00:00:00 2001
From: Grzegorz Jaszczyk <jaz@semihalf.com>
Date: Wed, 4 Apr 2018 14:59:45 +0200
Subject: [PATCH 0027/1239] phy: marvell: cp110: let the firmware configure
 comphy for AP

Replace the comphy initialization for AP with appropriate SMC call,
so the firmware will execute required serdes configuration.

Change-Id: I9835eccff8a45fcc0eb567dfbc62337a31399407
Signed-off-by: Grzegorz Jaszczyk <jaz@semihalf.com>
Reviewed-by: Igal Liberman <igall@marvell.com>
---
 drivers/phy/marvell/comphy_cp110.c | 32 ++++--------------------------
 1 file changed, 4 insertions(+), 28 deletions(-)

diff --git a/drivers/phy/marvell/comphy_cp110.c b/drivers/phy/marvell/comphy_cp110.c
index 01e5800507..8f671c73a5 100644
--- a/drivers/phy/marvell/comphy_cp110.c
+++ b/drivers/phy/marvell/comphy_cp110.c
@@ -241,33 +241,6 @@ static int comphy_sata_power_up(u32 lane, void __iomem *hpipe_base,
 	return ret;
 }
 
-/* During AP the proper mode is auto-negotiated and the mac, pcs and serdes
- * configuration are done by the firmware loaded to the MG's CM3 for appropriate
- * negotiated mode. Therefore there is no need to configure the mac, pcs and
- * serdes from u-boot. The only thing that need to be setup is powering up
- * the comphy, which is done through Common PHY<n> Configuration 1 Register
- * (CP0: 0xF2441000, CP1: 0xF4441000). This step can't be done by MG's CM3,
- * since it doesn't have an access to this register-set (but it has access to
- * the network registers like: MG, AP, MAC, PCS, Serdes etc.)
- */
-static int comphy_ap_power_up(u32 lane, void __iomem *comphy_base)
-{
-	u32 mask, data;
-	void __iomem *comphy_addr = COMPHY_ADDR(comphy_base, lane);
-
-	debug_enter();
-	debug("stage: RFU configurations - hard reset comphy\n");
-	/* RFU configurations - hard reset comphy */
-	mask = COMMON_PHY_CFG1_PWR_UP_MASK;
-	data = 0x1 << COMMON_PHY_CFG1_PWR_UP_OFFSET;
-	mask |= COMMON_PHY_CFG1_PIPE_SELECT_MASK;
-	data |= 0x0 << COMMON_PHY_CFG1_PIPE_SELECT_OFFSET;
-	reg_set(comphy_addr + COMMON_PHY_CFG1_REG, data, mask);
-
-	return 1;
-}
-
-
 /* This function performs RX training for all FFE possible values.
  * We get the result for each FFE and eventually the best FFE will
  * be used and set to the HW.
@@ -762,7 +735,10 @@ int comphy_cp110_init(struct chip_serdes_phy_config *ptr_chip_cfg,
 					 mode);
 			break;
 		case COMPHY_TYPE_AP:
-			ret = comphy_ap_power_up(lane, comphy_base_addr);
+			mode = COMPHY_FW_MODE_FORMAT(COMPHY_AP_MODE);
+			ret = comphy_smc(MV_SIP_COMPHY_POWER_ON,
+					 ptr_chip_cfg->comphy_base_addr, lane,
+					 mode);
 			break;
 		default:
 			debug("Unknown SerDes type, skip initialize SerDes %d\n",
-- 
2.29.0

