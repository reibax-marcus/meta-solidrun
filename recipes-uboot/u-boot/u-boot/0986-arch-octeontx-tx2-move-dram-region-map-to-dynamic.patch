From 3a1684d1aff6e972bbe03b0e7ac35f2c4e10e73a Mon Sep 17 00:00:00 2001
From: Suneel Garapati <sgarapati@marvell.com>
Date: Fri, 8 Nov 2019 19:36:15 -0800
Subject: [PATCH 0986/1239] arch: octeontx/tx2: move dram region map to dynamic

Use mem_map_fill call from board file to add mm_region
for DRAM.

Change-Id: I78927a18f7d085e6a8586c5f8918987ba46f5f2a
Signed-off-by: Suneel Garapati <sgarapati@marvell.com>
---
 arch/arm/include/asm/arch-octeontx/board.h  |  1 +
 arch/arm/include/asm/arch-octeontx2/board.h |  1 +
 arch/arm/mach-octeontx/cpu.c                | 46 +++++++++++++++------
 arch/arm/mach-octeontx2/cpu.c               | 36 ++++++++++------
 board/Marvell/octeontx/board.c              |  2 +
 board/Marvell/octeontx2/board.c             |  2 +
 6 files changed, 64 insertions(+), 24 deletions(-)

diff --git a/arch/arm/include/asm/arch-octeontx/board.h b/arch/arm/include/asm/arch-octeontx/board.h
index dc419adfe6..2ed454d1c8 100644
--- a/arch/arm/include/asm/arch-octeontx/board.h
+++ b/arch/arm/include/asm/arch-octeontx/board.h
@@ -183,6 +183,7 @@ union rst_boot {
 };
 
 /** Function definitions */
+void mem_map_fill(void);
 int octeontx_board_has_pmp(void);
 const char *fdt_get_board_model(void);
 const char *fdt_get_board_serial(void);
diff --git a/arch/arm/include/asm/arch-octeontx2/board.h b/arch/arm/include/asm/arch-octeontx2/board.h
index a62018a339..92d98e0a0e 100644
--- a/arch/arm/include/asm/arch-octeontx2/board.h
+++ b/arch/arm/include/asm/arch-octeontx2/board.h
@@ -231,6 +231,7 @@ union rst_boot {
 };
 
 /** Function definitions */
+void mem_map_fill(void);
 int fdt_get_board_mac_cnt(void);
 u64 fdt_get_board_mac_addr(void);
 const char *fdt_get_board_model(void);
diff --git a/arch/arm/mach-octeontx/cpu.c b/arch/arm/mach-octeontx/cpu.c
index f111501b8f..9c29c31393 100644
--- a/arch/arm/mach-octeontx/cpu.c
+++ b/arch/arm/mach-octeontx/cpu.c
@@ -8,17 +8,17 @@
 #include <common.h>
 #include <asm/armv8/mmu.h>
 #include <asm/io.h>
+#include <asm/arch/board.h>
 
 DECLARE_GLOBAL_DATA_PTR;
 
-static struct mm_region octeontx_mem_map[] = {
+#define OTX_MEM_MAP_USED 3
+
+/* 1 for 83xx, +1 is end of list which needs to be empty */
+#define OTX_MEM_MAP_MAX (OTX_MEM_MAP_USED + 1 + CONFIG_NR_DRAM_BANKS + 1)
+
+static struct mm_region otx_mem_map[OTX_MEM_MAP_MAX] = {
 	{
-		.virt = 0x0UL,
-		.phys = 0x0UL,
-		.size = 0x4000000000UL,
-		.attrs = PTE_BLOCK_MEMTYPE(MT_NORMAL) |
-			 PTE_BLOCK_NON_SHARE
-	}, {
 		.virt = 0x800000000000UL,
 		.phys = 0x800000000000UL,
 		.size = 0x40000000000UL,
@@ -36,17 +36,39 @@ static struct mm_region octeontx_mem_map[] = {
 		.size = 0x40000000000UL,
 		.attrs = PTE_BLOCK_MEMTYPE(MT_DEVICE_NGNRNE) |
 			 PTE_BLOCK_NON_SHARE
-	}, {
-		/* List terminator */
-		0,
 	}
+
 };
 
-struct mm_region *mem_map = octeontx_mem_map;
+struct mm_region *mem_map = otx_mem_map;
+
+void mem_map_fill(void)
+{
+	int banks = OTX_MEM_MAP_USED;
+	u32 dram_start = CONFIG_SYS_TEXT_BASE;
+
+	if (otx_is_soc(CN83XX)) {
+		otx_mem_map[banks].virt = 0x8c0000000000UL;
+		otx_mem_map[banks].phys = 0x8c0000000000UL;
+		otx_mem_map[banks].size = 0x40000000000UL;
+		otx_mem_map[banks].attrs = PTE_BLOCK_MEMTYPE(MT_DEVICE_NGNRNE) |
+					   PTE_BLOCK_NON_SHARE;
+		banks = banks + 1;
+	}
+
+	for (int i = 0; i < CONFIG_NR_DRAM_BANKS; i++) {
+		otx_mem_map[banks].virt = dram_start;
+		otx_mem_map[banks].phys = dram_start;
+		otx_mem_map[banks].size = gd->ram_size;
+		otx_mem_map[banks].attrs = PTE_BLOCK_MEMTYPE(MT_NORMAL) |
+					   PTE_BLOCK_NON_SHARE;
+		banks = banks + 1;
+	}
+}
 
 u64 get_page_table_size(void)
 {
-	return 0x4c000;
+	return 0x80000;
 }
 
 void reset_cpu(ulong addr)
diff --git a/arch/arm/mach-octeontx2/cpu.c b/arch/arm/mach-octeontx2/cpu.c
index a6eaa9112f..2a6d5e8661 100644
--- a/arch/arm/mach-octeontx2/cpu.c
+++ b/arch/arm/mach-octeontx2/cpu.c
@@ -8,17 +8,17 @@
 #include <common.h>
 #include <asm/armv8/mmu.h>
 #include <asm/io.h>
+#include <asm/arch/board.h>
 
 DECLARE_GLOBAL_DATA_PTR;
 
-static struct mm_region octeontx2_mem_map[] = {
+#define OTX2_MEM_MAP_USED 4
+
+/* +1 is end of list which needs to be empty */
+#define OTX2_MEM_MAP_MAX (OTX2_MEM_MAP_USED + CONFIG_NR_DRAM_BANKS + 1)
+
+static struct mm_region otx2_mem_map[OTX2_MEM_MAP_MAX] = {
 	{
-		.virt = 0x0UL,
-		.phys = 0x0UL,
-		.size = 0x4000000000UL,
-		.attrs = PTE_BLOCK_MEMTYPE(MT_NORMAL) |
-			 PTE_BLOCK_NON_SHARE
-	}, {
 		.virt = 0x800000000000UL,
 		.phys = 0x800000000000UL,
 		.size = 0x40000000000UL,
@@ -42,17 +42,29 @@ static struct mm_region octeontx2_mem_map[] = {
 		.size = 0x40000000000UL,
 		.attrs = PTE_BLOCK_MEMTYPE(MT_DEVICE_NGNRNE) |
 			 PTE_BLOCK_NON_SHARE
-	}, {
-		/* List terminator */
-		0,
 	}
 };
 
-struct mm_region *mem_map = octeontx2_mem_map;
+struct mm_region *mem_map = otx2_mem_map;
+
+void mem_map_fill(void)
+{
+	int banks = OTX2_MEM_MAP_USED;
+	u32 dram_start = CONFIG_SYS_TEXT_BASE;
+
+	for (int i = 0; i < CONFIG_NR_DRAM_BANKS; i++) {
+		otx2_mem_map[banks].virt = dram_start;
+		otx2_mem_map[banks].phys = dram_start;
+		otx2_mem_map[banks].size = gd->ram_size;
+		otx2_mem_map[banks].attrs = PTE_BLOCK_MEMTYPE(MT_NORMAL) |
+					    PTE_BLOCK_NON_SHARE;
+		banks = banks + 1;
+	}
+}
 
 u64 get_page_table_size(void)
 {
-	return 0x6c000;
+	return 0x80000;
 }
 
 void reset_cpu(ulong addr)
diff --git a/board/Marvell/octeontx/board.c b/board/Marvell/octeontx/board.c
index 32f9d092be..a5abb79ad1 100644
--- a/board/Marvell/octeontx/board.c
+++ b/board/Marvell/octeontx/board.c
@@ -63,6 +63,8 @@ int dram_init(void)
 	gd->ram_size = smc_dram_size(0);
 	gd->ram_size -= CONFIG_SYS_SDRAM_BASE;
 
+	mem_map_fill();
+
 	return 0;
 }
 
diff --git a/board/Marvell/octeontx2/board.c b/board/Marvell/octeontx2/board.c
index f6570eba0f..54e023d0d7 100644
--- a/board/Marvell/octeontx2/board.c
+++ b/board/Marvell/octeontx2/board.c
@@ -139,6 +139,8 @@ int dram_init(void)
 	gd->ram_size = smc_dram_size(0);
 	gd->ram_size -= CONFIG_SYS_SDRAM_BASE;
 
+	mem_map_fill();
+
 	return 0;
 }
 
-- 
2.29.0

