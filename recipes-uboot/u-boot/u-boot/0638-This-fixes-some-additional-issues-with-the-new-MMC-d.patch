From 3a1361d08317fe84ee03b7238f47c1cfdca58f7f Mon Sep 17 00:00:00 2001
From: Chandrakala Chavva <cchavva@caviumnetworks.com>
Date: Tue, 20 Jun 2017 23:06:47 -0700
Subject: [PATCH 0638/1239] This fixes some additional issues with the new MMC
 device tree format.

  The compatible string was wrong and the power control is now on a per-slot
  basis and NOT on a per controller basis.  Additionally there was a bug where
  in the slot power handling code it still referred to the host controller
  power handling.  All references to host power handling have been removed.

Signed-off-by: Aaron Williams <aaron.williams@cavium.com>
Signed-off-by: Chandrakala Chavva <cchavva@caviumnetworks.com>
---
 .../include/asm/arch-thunderx/cavium_mmc.h    |  2 +-
 drivers/mmc/cavium_mmc.c                      | 30 +++++++++++++++++--
 2 files changed, 28 insertions(+), 4 deletions(-)

diff --git a/arch/arm/include/asm/arch-thunderx/cavium_mmc.h b/arch/arm/include/asm/arch-thunderx/cavium_mmc.h
index 143e3d2f19..e22b28e085 100644
--- a/arch/arm/include/asm/arch-thunderx/cavium_mmc.h
+++ b/arch/arm/include/asm/arch-thunderx/cavium_mmc.h
@@ -216,6 +216,7 @@ struct cavium_mmc_slot {
 	int		flags;
 	int		cmd_clk_skew;	/** Clock skew for cmd in SCLK */
 	int		dat_clk_skew;	/** Clock skew for data in SCLK */
+	int		power_gpio_of_offset;	/** Offset of power node */
 	/**
 	 * Register bus-width value where:
 	 * 0: 1-bit
@@ -233,7 +234,6 @@ struct cavium_mmc_slot {
 	bool		powered:1;	/** True if powered on */
 	/** True if power GPIO is active high */
 	bool		power_active_high:1;
-
 };
 
 struct cavium_mmc_host {
diff --git a/drivers/mmc/cavium_mmc.c b/drivers/mmc/cavium_mmc.c
index 0631852f21..7d45f4975d 100644
--- a/drivers/mmc/cavium_mmc.c
+++ b/drivers/mmc/cavium_mmc.c
@@ -5528,10 +5528,9 @@ int __cavium_mmc_init(struct mmc *mmc)
 
 	last_bus_id[host->dev_index] = slot->bus_id;
 
-#ifdef DEBUG
 	debug("%s: Set clock period to %d clocks, sclock: %llu\n", __func__,
 	      emm_switch.s.clk_hi + emm_switch.s.clk_lo, host->sclock);
-#endif
+
 	/* Set watchdog for command timeout */
 	if (slot->bus_id == 0)
 		emm_wdog.u = 0;
@@ -5826,8 +5825,32 @@ static int get_mmc_regulator(const void *blob, int of_offset,
 	ret = gpio_request_by_name_nodev(blob, of_offset, "gpio", 0,
 					 &slot->power_gpio,
 					 GPIOD_IS_OUT);
+	/* GPIOs can only be acquired once so if we get an EBUSY error it means
+	 * it was likely claimed by another slot if it's shared.  In this case
+	 * we just duplicate the GPIO descriptor.
+	 */
+	if (ret == -EBUSY) {
+		struct list_head *entry;
+		struct mmc *mmc;
+		struct cavium_mmc_slot *sslot;
+		list_for_each(entry, &mmc_devices) {
+			mmc = list_entry(entry, struct mmc, link);
+			sslot = cavium_get_slot(mmc);
+			assert(sslot);
+			if (sslot->power_gpio_of_offset == of_offset) {
+				debug("%s: Found duplicate link to power\n",
+				      __func__);
+				memcpy(&slot->power_gpio, &sslot->power_gpio,
+				       sizeof(slot->power_gpio));
+				slot->power_gpio_of_offset = of_offset;
+				break;
+			}
+		}
+		ret = 0;
+	}
 	if (ret) {
-		debug("Invalid power GPIO control in fixed supply\n");
+		debug("%s: Error %d: Invalid power GPIO control in fixed supply\n",
+		      __func__, ret);
 		return -1;
 	}
 	power_delay = fdtdec_get_int(blob, of_offset, "startup-delay-usec",
@@ -5840,6 +5863,7 @@ static int get_mmc_regulator(const void *blob, int of_offset,
 		low <<= 1;
 	} while (low <= high);
 
+	slot->power_gpio_of_offset = of_offset;
 	slot->power_delay = power_delay;
 	slot->power_active_high = active_high;
 	slot->cfg.voltages = voltages;
-- 
2.29.0

