From a5b51da9096e4fab6c40d303819d62b535b9c318 Mon Sep 17 00:00:00 2001
From: Suneel Garapati <sgarapati@marvell.com>
Date: Wed, 6 Feb 2019 00:10:29 -0800
Subject: [PATCH 0877/1239] drivers: spi: add check on clk divider and dual
 mode support

Add check on calculated frequency wrt requested frequency to
make sure it is within tolerance. Also add a check on dual
mode in transfer flags to include x2 bus width.

Change-Id: I54a59b553e2f0db9ee67c3045ef1ba18bd96e890
Signed-off-by: Suneel Garapati <sgarapati@marvell.com>
Reviewed-on: https://sj1git1.cavium.com/3555
Tested-by: sa_ip-sw-jenkins
Reviewed-by: Suneel Garapati <sgarapati@caviumnetworks.com>
---
 drivers/spi/octeontx_spi.c | 15 ++++++++++++++-
 1 file changed, 14 insertions(+), 1 deletion(-)

diff --git a/drivers/spi/octeontx_spi.c b/drivers/spi/octeontx_spi.c
index 0bdf906855..9fbbdef467 100755
--- a/drivers/spi/octeontx_spi.c
+++ b/drivers/spi/octeontx_spi.c
@@ -487,7 +487,11 @@ static int octeontx_spi_xfer(struct udevice *dev, unsigned int bitlen,
 #ifdef USE_TBI_CLK
 	mpi_cfg.s.tb100_en = 1;
 #endif
-	mpi_cfg.s.iomode = (flags & SPI_XFER_QUAD) ? 3 : 0;
+	mpi_cfg.s.iomode = 0;
+	if (flags & SPI_XFER_DUAL)
+		mpi_cfg.s.iomode = 2;
+	if (flags & SPI_XFER_QUAD)
+		mpi_cfg.s.iomode = 3;
 
 	if (mpi_cfg.u != readq(baseaddr + MPI_CFG))
 		writeq(mpi_cfg.u, baseaddr + MPI_CFG);
@@ -600,6 +604,7 @@ static int octeontx_spi_set_speed(struct udevice *bus, uint max_hz)
 {
 	struct octeontx_spi *priv = dev_get_priv(bus);
 	u64 refclk = octeontx_get_io_clock();
+	u32 calc_hz;
 
 	debug("%s(%s, %u, %llu)\n", __func__, bus->name, max_hz, refclk);
 
@@ -610,6 +615,14 @@ static int octeontx_spi_set_speed(struct udevice *bus, uint max_hz)
 	refclk = OCTEONTX2_TBI_CLK;
 #endif
 	priv->clkdiv = refclk / (2 * max_hz);
+	while (1) {
+		calc_hz = refclk / (2 * priv->clkdiv);
+		if (calc_hz <= max_hz)
+			break;
+		priv->clkdiv += 1;
+	}
+	if (priv->clkdiv > 8191)
+		return -1;
 
 	debug("%s %d\n", __func__, priv->clkdiv);
 
-- 
2.29.0

