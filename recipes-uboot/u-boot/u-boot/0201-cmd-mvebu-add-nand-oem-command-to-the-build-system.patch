From aa2c2b1cc993e1770078e89e63d14aa435c5a4c9 Mon Sep 17 00:00:00 2001
From: Grzegorz Jaszczyk <jaz@semihalf.com>
Date: Tue, 2 Oct 2018 16:32:48 +0200
Subject: [PATCH 0201/1239] cmd: mvebu: add nand oem command to the build
 system

Change-Id: I543064140d8cabd835e913975bc833cc3546bc44
Signed-off-by: Grzegorz Jaszczyk <jaz@semihalf.com>
---
 cmd/mvebu/Kconfig  | 36 ++++++++++++++++++++++++++++++++++++
 cmd/mvebu/Makefile |  2 ++
 2 files changed, 38 insertions(+)

diff --git a/cmd/mvebu/Kconfig b/cmd/mvebu/Kconfig
index 3b876de7ee..86e7f42bab 100644
--- a/cmd/mvebu/Kconfig
+++ b/cmd/mvebu/Kconfig
@@ -98,4 +98,40 @@ config CMD_MVEBU_MAP
 	help
 	  Dump address translation tables
 
+config CMD_MVEBU_NAND_OEM
+	bool "nand"
+	depends on (TARGET_MVEBU_ARMADA_8K || TARGET_DB_88F6820_AP) && CMD_NAND
+	default y
+	help
+	  Introduction: NAND vendors conducts tests to verify if all blocks are
+	  OK. In case of failure block, the NAND manufacturer will mark this
+	  block as bad (BBM) by setting 0x00 somewhere in the spare area.
+	  Moreover NAND manufacturer can pre-programmed the chip with provided
+	  image using external burner.
+
+	  Issue: Marvell NFC employ optimized cost/performance ECC mechanism.
+	  This results in an unique ECC layout implementation. Marvell NFC sets
+	  different layouts according to page size/ECC strength combinations.
+
+	  Therefore after preparing image for the NAND manufacturer for board
+	  with Marvell NFC, due to the layout differences used by Marvell NFC
+	  and physical NAND chip layout, some valid data will be put on BBM
+	  position.  This will result on false bad block indicator and will
+	  affect the BBT which is created automatically (by U-Boot or Linux)
+	  during first run.
+
+	  To prevent from that kind of situations, the NAND oem command was
+	  introduced.
+
+	  The "prepare" part of the command runs once per device data partition
+	  in NAND and prepares image which is next send to manufacturer. It
+	  checks if under BBM position there is no data which could be then
+	  mistakenly taken as a BBM. If so the data together with tracking
+	  information is copied to "meta-data" partition and BBM position is
+	  overwritten with good indicator.
+
+	  The "restore" part of the command runs once per "prepared" partition
+	  and restores its original data. It supposed to run on new boards, on
+	  which the NAND manufacturer pre-programmed earlier prepared image.
+
 endmenu
diff --git a/cmd/mvebu/Makefile b/cmd/mvebu/Makefile
index 7644152f49..71a0cd13cd 100644
--- a/cmd/mvebu/Makefile
+++ b/cmd/mvebu/Makefile
@@ -4,11 +4,13 @@
 #
 # https://spdx.org/licenses
 
+ccflags-y += -Idrivers/mtd/nand/raw/
 
 obj-$(CONFIG_CMD_MVEBU_BUBT) += bubt.o
 obj-$(CONFIG_CMD_MVEBU_RX_TRAINING) += rx_training.o
 obj-$(CONFIG_CMD_MVEBU_AVS) += avs.o
 obj-$(CONFIG_CMD_MVEBU_MAP) += map.o
+obj-$(CONFIG_CMD_MVEBU_NAND_OEM) += pxa3xx_nand_oem.o
 obj-$(CONFIG_CMD_MVEBU_TSEN) += thermal.o
 obj-$(CONFIG_CMD_MVEBU_HW_INFO) += hw_info.o
 obj-$(CONFIG_CMD_MVEBU_SAR) += sar.o
-- 
2.29.0

